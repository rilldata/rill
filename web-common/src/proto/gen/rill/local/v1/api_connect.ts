// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file rill/local/v1/api.proto (package rill.local.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateOrganizationRequest, CreateOrganizationResponse, DeployProjectRequest, DeployProjectResponse, GetCurrentProjectRequest, GetCurrentProjectResponse, GetCurrentUserRequest, GetCurrentUserResponse, GetMetadataRequest, GetMetadataResponse, GetProjectRequest, GetProjectResponse, GetVersionRequest, GetVersionResponse, GitPullRequest, GitPullResponse, GitPushRequest, GitPushResponse, GitStatusRequest, GitStatusResponse, ListMatchingProjectsRequest, ListMatchingProjectsResponse, ListOrganizationsAndBillingMetadataRequest, ListOrganizationsAndBillingMetadataResponse, ListProjectsForOrgRequest, ListProjectsForOrgResponse, PingRequest, PingResponse, PushToGithubRequest, PushToGithubResponse, RedeployProjectRequest, RedeployProjectResponse } from "./api_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service rill.local.v1.LocalService
 */
export const LocalService = {
  typeName: "rill.local.v1.LocalService",
  methods: {
    /**
     * Ping returns the current time.
     *
     * @generated from rpc rill.local.v1.LocalService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMetadata returns information about the local Rill instance.
     *
     * @generated from rpc rill.local.v1.LocalService.GetMetadata
     */
    getMetadata: {
      name: "GetMetadata",
      I: GetMetadataRequest,
      O: GetMetadataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetVersion returns details about the current and latest available Rill versions.
     *
     * @generated from rpc rill.local.v1.LocalService.GetVersion
     */
    getVersion: {
      name: "GetVersion",
      I: GetVersionRequest,
      O: GetVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GitStatus returns the curren status of the local git repo. This is equivalent to doing a `git fetch` followed by running `git status`.
     *
     * @generated from rpc rill.local.v1.LocalService.GitStatus
     */
    gitStatus: {
      name: "GitStatus",
      I: GitStatusRequest,
      O: GitStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GitPull fetches the latest changes from the remote git repo equivalent to `git pull` command.
     * If there are any merge conflicts the pull is aborted.
     * Force can be set to true to force the pull and overwrite any local changes.
     *
     * @generated from rpc rill.local.v1.LocalService.GitPull
     */
    gitPull: {
      name: "GitPull",
      I: GitPullRequest,
      O: GitPullResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GitPush pushes the local changes to the remote git repo equivalent to `git push` command.
     * The difference between this and PushTiGithub is that this does not create a new repo.
     * It only pushes the changes to the existing remote repo.
     *
     * @generated from rpc rill.local.v1.LocalService.GitPush
     */
    gitPush: {
      name: "GitPush",
      I: GitPushRequest,
      O: GitPushResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PushToGithub create a Git repo from local project and pushed to users git account.
     *
     * @generated from rpc rill.local.v1.LocalService.PushToGithub
     */
    pushToGithub: {
      name: "PushToGithub",
      I: PushToGithubRequest,
      O: PushToGithubResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeployProject deploys the local project to the Rill cloud.
     *
     * @generated from rpc rill.local.v1.LocalService.DeployProject
     */
    deployProject: {
      name: "DeployProject",
      I: DeployProjectRequest,
      O: DeployProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RedeployProject updates a deployed project.
     *
     * @generated from rpc rill.local.v1.LocalService.RedeployProject
     */
    redeployProject: {
      name: "RedeployProject",
      I: RedeployProjectRequest,
      O: RedeployProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetCurrentUser returns the locally logged in user
     *
     * @generated from rpc rill.local.v1.LocalService.GetCurrentUser
     */
    getCurrentUser: {
      name: "GetCurrentUser",
      I: GetCurrentUserRequest,
      O: GetCurrentUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetCurrentProject returns the rill cloud project connected to the local project
     * Deprecated: Use ListMatchingProjects instead.
     *
     * @generated from rpc rill.local.v1.LocalService.GetCurrentProject
     */
    getCurrentProject: {
      name: "GetCurrentProject",
      I: GetCurrentProjectRequest,
      O: GetCurrentProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListOrganizationsAndBillingMetadata returns metadata about the current user's orgs.
     *
     * @generated from rpc rill.local.v1.LocalService.ListOrganizationsAndBillingMetadata
     */
    listOrganizationsAndBillingMetadata: {
      name: "ListOrganizationsAndBillingMetadata",
      I: ListOrganizationsAndBillingMetadataRequest,
      O: ListOrganizationsAndBillingMetadataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateOrganization creates a new organization
     *
     * @generated from rpc rill.local.v1.LocalService.CreateOrganization
     */
    createOrganization: {
      name: "CreateOrganization",
      I: CreateOrganizationRequest,
      O: CreateOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListMatchingProjects returns all remote projects matching the local project name
     *
     * @generated from rpc rill.local.v1.LocalService.ListMatchingProjects
     */
    listMatchingProjects: {
      name: "ListMatchingProjects",
      I: ListMatchingProjectsRequest,
      O: ListMatchingProjectsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListProjectsForOrg returns all projects within an org
     *
     * @generated from rpc rill.local.v1.LocalService.ListProjectsForOrg
     */
    listProjectsForOrg: {
      name: "ListProjectsForOrg",
      I: ListProjectsForOrgRequest,
      O: ListProjectsForOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetProject returns information about a specific project
     *
     * @generated from rpc rill.local.v1.LocalService.GetProject
     */
    getProject: {
      name: "GetProject",
      I: GetProjectRequest,
      O: GetProjectResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

