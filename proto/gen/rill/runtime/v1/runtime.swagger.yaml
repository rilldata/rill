swagger: "2.0"
info:
  title: rill/runtime/v1/schema.proto
  version: version not set
tags:
  - name: RuntimeService
  - name: ConnectorService
  - name: QueryService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/bigquery/datasets:
    get:
      summary: BigQueryListDatasets list all datasets in a bigquery project
      operationId: ConnectorService_BigQueryListDatasets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BigQueryListDatasetsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/bigquery/tables:
    get:
      summary: BigQueryListTables list all tables in a bigquery project:dataset
      operationId: ConnectorService_BigQueryListTables
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BigQueryListTablesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: dataset
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/connectors/meta:
    get:
      summary: |-
        ListConnectorDrivers returns a description of all the connector drivers registed in the runtime,
        including their configuration specs and the capabilities they support.
      operationId: RuntimeService_ListConnectorDrivers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListConnectorDriversResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/connectors/olap/table:
    get:
      summary: OLAPGetTable returns metadata about a table or view in an OLAP
      operationId: ConnectorService_OLAPGetTable
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1OLAPGetTableResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: table
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/dev-jwt:
    post:
      summary: IssueDevJWT issues a JWT for mimicking a user in local development.
      operationId: RuntimeService_IssueDevJWT
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1IssueDevJWTResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1IssueDevJWTRequest'
      tags:
        - RuntimeService
  /v1/examples:
    get:
      summary: ListExamples lists all the examples embedded into binary
      operationId: RuntimeService_ListExamples
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListExamplesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/gcs/bucket/{bucket}/objects:
    get:
      summary: GCSListObjects lists objects for the given bucket.
      operationId: ConnectorService_GCSListObjects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GCSListObjectsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: bucket
          in: path
          required: true
          type: string
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
        - name: prefix
          in: query
          required: false
          type: string
        - name: startOffset
          in: query
          required: false
          type: string
        - name: endOffset
          in: query
          required: false
          type: string
        - name: delimiter
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/gcs/buckets:
    get:
      summary: GCSListBuckets lists buckets accessible with the configured credentials.
      operationId: ConnectorService_GCSListBuckets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GCSListBucketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/gcs/credentials_info:
    get:
      summary: GCSGetCredentialsInfo returns metadata for the given bucket.
      operationId: ConnectorService_GCSGetCredentialsInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GCSGetCredentialsInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/health:
    get:
      summary: Health runs a health check on the runtime.
      operationId: RuntimeService_Health
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HealthResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/health/instances/{instanceId}:
    get:
      summary: InstanceHealth runs a health check on a specific instance.
      operationId: RuntimeService_InstanceHealth
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1InstanceHealthResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances:
    get:
      summary: ListInstances lists all the instances currently managed by the runtime
      operationId: RuntimeService_ListInstances
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInstancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
    post:
      summary: CreateInstance creates a new instance
      operationId: RuntimeService_CreateInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: |-
            Request message for RuntimeService.CreateInstance.
            See message Instance for field descriptions.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateInstanceRequest'
      tags:
        - RuntimeService
  /v1/instances/{instanceId}:
    get:
      summary: GetInstance returns information about a specific instance
      operationId: RuntimeService_GetInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: sensitive
          in: query
          required: false
          type: boolean
      tags:
        - RuntimeService
    post:
      summary: DeleteInstance deletes an instance
      operationId: RuntimeService_DeleteInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: Request message for RuntimeService.DeleteInstance
      tags:
        - RuntimeService
    patch:
      summary: EditInstance edits an existing instance
      operationId: RuntimeService_EditInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EditInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              environment:
                type: string
              olapConnector:
                type: string
              repoConnector:
                type: string
              adminConnector:
                type: string
              aiConnector:
                type: string
              connectors:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1Connector'
              variables:
                type: object
                additionalProperties:
                  type: string
              annotations:
                type: object
                additionalProperties:
                  type: string
              embedCatalog:
                type: boolean
              watchRepo:
                type: boolean
            description: |-
              Request message for RuntimeService.EditInstance.
              See message Instance for field descriptions.
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/connectors/analyze:
    get:
      summary: AnalyzeConnectors scans all the project files and returns information about all referenced connectors.
      operationId: RuntimeService_AnalyzeConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AnalyzeConnectorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/connectors/notifiers:
    get:
      summary: |-
        ListNotifierConnectors returns the names of all configured connectors that can be used as notifiers.
        This API is much faster than AnalyzeConnectors and can be called without admin-level permissions.
      operationId: RuntimeService_ListNotifierConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListNotifierConnectorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files:
    get:
      summary: |-
        ListFiles lists all the files matching a glob in a repo.
        The files are sorted by their full path.
      operationId: RuntimeService_ListFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListFilesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: glob
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/dir:
    post:
      summary: CreateDirectory create a directory for the given path
      operationId: RuntimeService_CreateDirectory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateDirectoryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              path:
                type: string
            title: Request message for RuntimeService.CreateDirectory
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/entry:
    get:
      summary: GetFile returns the contents of a specific file in a repo.
      operationId: RuntimeService_GetFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: path
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
    delete:
      summary: DeleteFile deletes a file from a repo
      operationId: RuntimeService_DeleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: path
          in: query
          required: false
          type: string
        - name: force
          in: query
          required: false
          type: boolean
      tags:
        - RuntimeService
    post:
      summary: PutFile creates or updates a file in a repo
      operationId: RuntimeService_PutFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PutFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              path:
                type: string
              blob:
                type: string
              create:
                type: boolean
                title: Create indicates whether to create the file if it doesn't already exist
              createOnly:
                type: boolean
                description: |-
                  Will cause the operation to fail if the file already exists.
                  It should only be set when create = true.
            title: Request message for RuntimeService.PutFile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/generate-metrics-view:
    post:
      summary: GenerateMetricsViewFile generates a metrics view YAML file from a table in an OLAP database
      operationId: RuntimeService_GenerateMetricsViewFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateMetricsViewFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              model:
                type: string
                description: |-
                  Model to base the metrics view on.
                  If you set this, do NOT set connector, database, database_schema or table.
              connector:
                type: string
                description: |-
                  Connector for the table.
                  See "table" for more details.
              database:
                type: string
                description: |-
                  Database for the table.
                  See "table" for more details.
              databaseSchema:
                type: string
                description: |-
                  Database schema for the table.
                  See "table" for more details.
              table:
                type: string
                description: |-
                  Table to base the metrics view on.
                  If you set this, do NOT set model.
              path:
                type: string
                description: Path to save the metrics view file to.
              useAi:
                type: boolean
                description: |-
                  If true, the AI will be used to generate the metrics view file.
                  Otherwise, it falls back to a simpler heuristic approach.
            title: Request message for RuntimeService.GenerateMetricsViewFile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/rename:
    post:
      summary: RenameFile renames a file in a repo
      operationId: RuntimeService_RenameFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              fromPath:
                type: string
              toPath:
                type: string
            title: Request message for RuntimeService.RenameFile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/unpack-empty:
    post:
      summary: UnpackEmpty unpacks an empty project
      operationId: RuntimeService_UnpackEmpty
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UnpackEmptyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              displayName:
                type: string
              force:
                type: boolean
            title: Request message for RuntimeService.UnpackEmpty
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/unpack-example:
    post:
      summary: UnpackExample unpacks an example project
      operationId: RuntimeService_UnpackExample
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UnpackExampleResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              force:
                type: boolean
            title: Request message for RuntimeService.UnpackExample
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/watch:
    get:
      summary: WatchFiles streams repo file update events. It is not supported on all backends.
      operationId: RuntimeService_WatchFiles
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1WatchFilesResponse'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1WatchFilesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: replay
          in: query
          required: false
          type: boolean
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/generate/renderer:
    post:
      summary: GenerateRenderer generates a component renderer and renderer properties from a resolver and resolver properties
      operationId: RuntimeService_GenerateRenderer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateRendererResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              prompt:
                type: string
              resolver:
                type: string
              resolverProperties:
                type: object
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/generate/resolver:
    post:
      summary: GenerateResolver generates resolver and resolver properties from a table or a metrics view
      operationId: RuntimeService_GenerateResolver
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateResolverResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              prompt:
                type: string
              connector:
                type: string
                description: Both connector and table must be specified if metrics_view is not.
              table:
                type: string
              metricsView:
                type: string
                description: table and connector should not be provided if metrics_view is provided.
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/logs:
    get:
      summary: GetLogs returns recent logs from a controller
      operationId: RuntimeService_GetLogs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetLogsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: ascending
          in: query
          required: false
          type: boolean
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: level
          in: query
          required: false
          type: string
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - LOG_LEVEL_DEBUG
            - LOG_LEVEL_INFO
            - LOG_LEVEL_WARN
            - LOG_LEVEL_ERROR
            - LOG_LEVEL_FATAL
          default: LOG_LEVEL_UNSPECIFIED
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/logs/watch:
    get:
      summary: WatchLogs streams new logs emitted from a controller
      operationId: RuntimeService_WatchLogs
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1WatchLogsResponse'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1WatchLogsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: replay
          in: query
          required: false
          type: boolean
        - name: replayLimit
          in: query
          required: false
          type: integer
          format: int32
        - name: level
          in: query
          required: false
          type: string
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - LOG_LEVEL_DEBUG
            - LOG_LEVEL_INFO
            - LOG_LEVEL_WARN
            - LOG_LEVEL_ERROR
            - LOG_LEVEL_FATAL
          default: LOG_LEVEL_UNSPECIFIED
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/models/{model}/partitions:
    get:
      summary: GetModelPartitions returns the partitions of a model
      operationId: RuntimeService_GetModelPartitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetModelPartitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: model
          in: path
          required: true
          type: string
        - name: pending
          in: query
          required: false
          type: boolean
        - name: errored
          in: query
          required: false
          type: boolean
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/queries/canvases/{canvas}/resolve:
    post:
      summary: ResolveCanvas is a convenience API that returns a canvas and all its referenced components and metrics views.
      operationId: QueryService_ResolveCanvas
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ResolveCanvasResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance ID
          in: path
          required: true
          type: string
        - name: canvas
          description: Canvas name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              args:
                type: object
                title: Optional args for resolving templating in the component properties
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/column-cardinality/tables/{tableName}:
    get:
      summary: Get cardinality for a column
      operationId: QueryService_ColumnCardinality
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnCardinalityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Required
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          description: Required
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/columns-profile/tables/{tableName}:
    post:
      summary: TableColumns returns column profiles
      operationId: QueryService_TableColumns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableColumnsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/components/{component}/resolve:
    post:
      summary: ResolveComponent resolves renderer for a Component resource.
      operationId: QueryService_ResolveComponent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ResolveComponentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance ID
          in: path
          required: true
          type: string
        - name: component
          description: Component name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              args:
                type: object
                title: Optional args for resolving templating in the renderer properties
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/descriptive-statistics/tables/{tableName}:
    get:
      summary: Get basic stats for a numeric column like min, max, mean, stddev, etc
      operationId: QueryService_ColumnDescriptiveStatistics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnDescriptiveStatisticsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          description: Required
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/export:
    post:
      summary: Export builds a URL to download the results of a query as a file.
      operationId: QueryService_Export
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ExportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              limit:
                type: string
                format: int64
              format:
                $ref: '#/definitions/v1ExportFormat'
              query:
                $ref: '#/definitions/v1Query'
              bakedQuery:
                type: string
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsView}/aggregation:
    post:
      summary: MetricsViewAggregation is a generic API for running group-by/pivot queries against a metrics view.
      operationId: QueryService_MetricsViewAggregation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewAggregationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsView
          description: Required
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimensions:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewAggregationDimension'
                title: Required
              measures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewAggregationMeasure'
                title: Required
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewAggregationSort'
                title: Optional. Defaults to unsorted
              timeRange:
                $ref: '#/definitions/v1TimeRange'
                title: Optional. Defaults to unbounded
              comparisonTimeRange:
                $ref: '#/definitions/v1TimeRange'
                title: Optional, if omitted than the request prepares an aggregation without a comparison
              timeStart:
                type: string
                format: date-time
                title: Deprecated in favor of time_range
              timeEnd:
                type: string
                format: date-time
                title: Deprecated in favor of time_range
              pivotOn:
                type: array
                items:
                  type: string
                title: Optional. List of dimensions/measures. No pivot is done if ommitted
              aliases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewComparisonMeasureAlias'
                title: Optional
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              whereSql:
                type: string
                description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
              having:
                $ref: '#/definitions/v1Expression'
                title: Optional
              havingSql:
                type: string
                description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
              limit:
                type: string
                format: int64
                title: Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
              offset:
                type: string
                format: int64
                title: Optional. Defaults to 0
              priority:
                type: integer
                format: int32
                title: Optional
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                description: Deprecated. should be removed once UI is moved to use new filters
                title: Optional
              exact:
                type: boolean
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/compare-toplist:
    post:
      summary: |-
        MetricsViewComparison returns a toplist containing comparison data of another toplist (same dimension/measure but a different time range).
        Returns a toplist without comparison data if comparison time range is omitted.
      description: |-
        ie. comparsion toplist:
        | measure1_base | measure1_previous   | measure1__delta_abs | measure1__delta_rel | dimension |
        |---------------|---------------------|---------------------|--------------------|-----------|
        | 2             | 2                   | 0                   | 0                  | Safari    |
        | 1             | 0                   | 1                   | N/A                | Chrome    |
        | 0             | 4                   | -4                  | -1.0               | Firefox   |

        ie. toplist:
        | measure1 | measure2 | dimension |
        |----------|----------|-----------|
        | 2        | 45       | Safari    |
        | 1        | 350      | Chrome    |
        | 0        | 25       | Firefox   |
      operationId: QueryService_MetricsViewComparison
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewComparisonResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimension:
                $ref: '#/definitions/v1MetricsViewAggregationDimension'
                title: Required
              measures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewAggregationMeasure'
                title: Required
              comparisonMeasures:
                type: array
                items:
                  type: string
                title: |-
                  Measures that should be compared
                  Optional. Defaults to all measures
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewComparisonSort'
                title: Required
              timeRange:
                $ref: '#/definitions/v1TimeRange'
                title: Optional
              comparisonTimeRange:
                $ref: '#/definitions/v1TimeRange'
                title: Optional, if omitted than the request prepares the toplist without a comparison
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              whereSql:
                type: string
                description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
              having:
                $ref: '#/definitions/v1Expression'
                title: Optional
              havingSql:
                type: string
                description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
              aliases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewComparisonMeasureAlias'
                title: Optional
              limit:
                type: string
                format: int64
                title: Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
              offset:
                type: string
                format: int64
                title: Optional. Defaults to 0
              priority:
                type: integer
                format: int32
                title: Optional
              exact:
                type: boolean
                title: Optional, defaults to false
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                description: Deprecated. should be removed once UI is moved to use new filters
                title: Optional
            title: Request message for QueryService.MetricsViewComparison
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/rows:
    post:
      summary: MetricsViewRows returns the underlying model rows matching a metrics view time range and filter(s).
      description: |-
        ie. without granularity
        | column1 | column2 | dimension |
        |---------|---------|-----------|
        | 2       | 2       | Safari    |
        | 1       | 0       | Chrome    |
        | 0       | 4       | Firefox   |

        ie. with granularity
        | timestamp__day0      | column1 | column2 | dimension |
        |----------------------|---------|---------|-----------|
        | 2022-01-01T00:00:00Z | 2       | 2       | Safari    |
        | 2022-01-01T00:00:00Z | 1       | 0       | Chrome    |
        | 2022-01-01T00:00:00Z | 0       | 4       | Firefox   |
      operationId: QueryService_MetricsViewRows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewRowsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              timeStart:
                type: string
                format: date-time
                title: Optional, defaults to min
              timeEnd:
                type: string
                format: date-time
                title: Optional, defaults to max
              timeGranularity:
                $ref: '#/definitions/v1TimeGrain'
                title: Optional, doesn't prepend the timestamp rollup column if ommitted
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewSort'
                title: Optional
              limit:
                type: integer
                format: int32
                title: Optional
              offset:
                type: string
                format: int64
                title: Optional
              priority:
                type: integer
                format: int32
              timeZone:
                type: string
                title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                title: Deprecated. should be removed once UI is moved to use new filters
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/schema:
    get:
      summary: MetricsViewSchema Get the data types of measures and dimensions
      operationId: QueryService_MetricsViewSchema
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewSchemaResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/search:
    post:
      summary: MetricsViewSearch Get the data types of measures and dimensions
      operationId: QueryService_MetricsViewSearch
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewSearchResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimensions:
                type: array
                items:
                  type: string
              search:
                type: string
              timeRange:
                $ref: '#/definitions/v1TimeRange'
                title: Optional
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              having:
                $ref: '#/definitions/v1Expression'
                title: Optional
              limit:
                type: integer
                format: int32
                title: Optional
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/time-range-summary:
    post:
      summary: MetricsViewTimeRange Get the time range summaries (min, max) for time column in a metrics view
      operationId: QueryService_MetricsViewTimeRange
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTimeRangeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/time-ranges:
    post:
      operationId: QueryService_MetricsViewTimeRanges
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTimeRangesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              expressions:
                type: array
                items:
                  type: string
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/timeseries:
    post:
      summary: |-
        MetricsViewTimeSeries returns time series for the measures in the metrics view.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTimeSeriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              measureNames:
                type: array
                items:
                  type: string
              timeStart:
                type: string
                format: date-time
                title: Optional. Defaults to min
              timeEnd:
                type: string
                format: date-time
                title: Optional. Defaults to max
              timeGranularity:
                $ref: '#/definitions/v1TimeGrain'
                title: Required
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              whereSql:
                type: string
                description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
              having:
                $ref: '#/definitions/v1Expression'
                title: Optional
              havingSql:
                type: string
                description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
              timeZone:
                type: string
                title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
              priority:
                type: integer
                format: int32
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                title: Deprecated. should be removed once UI is moved to use new filters
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/toplist:
    post:
      summary: |-
        Deprecated - use MetricsViewComparison instead.
        MetricsViewToplist returns the top dimension values of a metrics view sorted by one or more measures.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewToplist
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewToplistResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimensionName:
                type: string
              measureNames:
                type: array
                items:
                  type: string
              timeStart:
                type: string
                format: date-time
              timeEnd:
                type: string
                format: date-time
              limit:
                type: string
                format: int64
              offset:
                type: string
                format: int64
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewSort'
              where:
                $ref: '#/definitions/v1Expression'
              whereSql:
                type: string
              having:
                $ref: '#/definitions/v1Expression'
              havingSql:
                type: string
              priority:
                type: integer
                format: int32
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                title: Deprecated. should be removed once UI is moved to use new filters
            title: Deprecated, use MetricsViewComparisonRequest without a comparison time range
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/totals:
    post:
      summary: |-
        MetricsViewTotals returns totals over a time period for the measures in a metrics view.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewTotals
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTotalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              measureNames:
                type: array
                items:
                  type: string
              timeStart:
                type: string
                format: date-time
                title: Optional. Defaults to min
              timeEnd:
                type: string
                format: date-time
                title: Optional. Defaults to max
              where:
                $ref: '#/definitions/v1Expression'
                title: Optional
              whereSql:
                type: string
                description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
              priority:
                type: integer
                format: int32
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
                title: Deprecated. should be removed once UI is moved to use new filters
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/null-count/tables/{tableName}:
    get:
      summary: Get the number of nulls in a column
      operationId: QueryService_ColumnNullCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnNullCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          description: Required
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/numeric-histogram/tables/{tableName}:
    get:
      summary: Get the histogram for values in a column
      operationId: QueryService_ColumnNumericHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnNumericHistogramResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: histogramMethod
          in: query
          required: false
          type: string
          enum:
            - HISTOGRAM_METHOD_UNSPECIFIED
            - HISTOGRAM_METHOD_FD
            - HISTOGRAM_METHOD_DIAGNOSTIC
          default: HISTOGRAM_METHOD_UNSPECIFIED
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rollup-interval/tables/{tableName}:
    post:
      summary: ColumnRollupInterval returns the minimum time granularity (as well as the time range) for a specified timestamp column
      operationId: QueryService_ColumnRollupInterval
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnRollupIntervalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              connector:
                type: string
              database:
                type: string
              databaseSchema:
                type: string
              columnName:
                type: string
                title: Required
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rows/tables/{tableName}:
    get:
      summary: TableRows returns table rows
      operationId: QueryService_TableRows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableRowsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rug-histogram/tables/{tableName}:
    get:
      summary: Get outliers for a numeric column
      operationId: QueryService_ColumnRugHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnRugHistogramResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/smallest-time-grain/tables/{tableName}:
    get:
      summary: Estimates the smallest time grain present in the column
      operationId: QueryService_ColumnTimeGrain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeGrainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          description: Required
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/table-cardinality/tables/{tableName}:
    get:
      summary: TableCardinality returns row count
      operationId: QueryService_TableCardinality
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableCardinalityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/time-range-summary/tables/{tableName}:
    get:
      summary: Get the time range summaries (min, max) for a column
      operationId: QueryService_ColumnTimeRange
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeRangeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: database
          in: query
          required: false
          type: string
        - name: databaseSchema
          in: query
          required: false
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/timeseries/tables/{tableName}:
    post:
      summary: Generate time series for the given measures (aggregation expressions) along with the sparkline timeseries
      operationId: QueryService_ColumnTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeSeriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              connector:
                type: string
              database:
                type: string
              databaseSchema:
                type: string
              measures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/ColumnTimeSeriesRequestBasicMeasure'
                title: Optional. Defaults to [count(*)]
              timestampColumnName:
                type: string
                title: Required
              timeRange:
                $ref: '#/definitions/v1TimeSeriesTimeRange'
                title: Optional. Defaults to [min, max)
              pixels:
                type: integer
                format: int32
                title: Optional. Spark is not calculated if ommitted. See http://www.vldb.org/pvldb/vol7/p797-jugel.pdf
              sampleSize:
                type: integer
                format: int32
                title: Unused
              priority:
                type: integer
                format: int32
              timeZone:
                type: string
                title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/topk/tables/{tableName}:
    post:
      summary: |-
        Get TopK elements from a table for a column given an agg function
        agg function and k are optional, defaults are count(*) and 50 respectively
      operationId: QueryService_ColumnTopK
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTopKResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          description: Required
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              connector:
                type: string
              database:
                type: string
              databaseSchema:
                type: string
              columnName:
                type: string
                title: Required
              agg:
                type: string
                title: default is count(*)
              k:
                type: integer
                format: int32
                title: default is 50
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/query:
    post:
      summary: Query runs a SQL query against the instance's OLAP datastore.
      operationId: QueryService_Query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1QueryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              connector:
                type: string
              sql:
                type: string
              args:
                type: array
                items: {}
              priority:
                type: integer
                format: int32
              dryRun:
                type: boolean
              limit:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/query/batch:
    post:
      summary: Batch request with different queries
      operationId: QueryService_QueryBatch
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1QueryBatchResponse'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1QueryBatchResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              queries:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1Query'
      tags:
        - QueryService
  /v1/instances/{instanceId}/query/resolver:
    post:
      summary: QueryResolver queries a resolver with the given properties and arguments
      operationId: RuntimeService_QueryResolver
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1QueryResolverResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              resolver:
                type: string
              resolverProperties:
                type: object
              resolverArgs:
                type: object
              limit:
                type: integer
                format: int32
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/reports/{report}/export:
    post:
      summary: ExportReport builds a URL to download the results of a query as a file.
      operationId: QueryService_ExportReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ExportReportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: report
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              limit:
                type: string
                format: int64
              format:
                $ref: '#/definitions/v1ExportFormat'
              executionTime:
                type: string
                format: date-time
      tags:
        - QueryService
  /v1/instances/{instanceId}/resource:
    get:
      summary: GetResource looks up a specific catalog resource
      operationId: RuntimeService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name.kind
          in: query
          required: false
          type: string
        - name: name.name
          in: query
          required: false
          type: string
        - name: skipSecurityChecks
          in: query
          required: false
          type: boolean
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/resources:
    get:
      summary: ListResources lists the resources stored in the catalog
      operationId: RuntimeService_ListResources
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListResourcesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance to list resources from.
          in: path
          required: true
          type: string
        - name: kind
          description: Filter by resource kind (optional).
          in: query
          required: false
          type: string
        - name: path
          description: Filter by resource path (optional).
          in: query
          required: false
          type: string
        - name: skipSecurityChecks
          description: Skip security checks
          in: query
          required: false
          type: boolean
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/resources/-/watch:
    get:
      summary: WatchResources streams updates to catalog resources (including creation and deletion events)
      operationId: RuntimeService_WatchResources
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1WatchResourcesResponse'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1WatchResourcesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: kind
          in: query
          required: false
          type: string
        - name: replay
          in: query
          required: false
          type: boolean
        - name: level
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/resources/explore:
    get:
      summary: GetExplore is a convenience RPC that combines looking up an Explore resource and its underlying MetricsView into one network call.
      operationId: RuntimeService_GetExplore
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetExploreResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/trigger:
    post:
      summary: |-
        CreateTrigger submits a refresh trigger, which will asynchronously refresh the specified resources.
        Triggers are ephemeral resources that will be cleaned up by the controller.
      operationId: RuntimeService_CreateTrigger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateTriggerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance to target.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1ResourceName'
                description: Resources to trigger. See RefreshTriggerSpec for details.
              models:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1RefreshModelTrigger'
                description: Models to trigger. Unlike resources, this supports advanced configuration of the refresh trigger.
              parser:
                type: boolean
                description: |-
                  Parser is a convenience flag to trigger the global project parser.
                  Triggering the project parser ensures a pull of the repository and a full parse of all files.
              allSourcesModels:
                type: boolean
                description: Convenience flag to trigger all sources and models.
              allSourcesModelsFull:
                type: boolean
                description: |-
                  Convenience flag to trigger all sources and models.
                  Will trigger models with RefreshModelTrigger.full set to true.
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/variables/analyze:
    get:
      summary: AnalyzeVariables scans `Source`, `Model` and `Connector` resources in the catalog for use of an environment variable
      operationId: RuntimeService_AnalyzeVariables
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AnalyzeVariablesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/olap/tables:
    get:
      summary: OLAPListTables list all tables across all databases on motherduck
      operationId: ConnectorService_OLAPListTables
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1OLAPListTablesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          description: Connector to list tables from.
          in: query
          required: false
          type: string
        - name: searchPattern
          description: |-
            Optional search pattern to filter tables by.
            Has the same syntax and behavior as ILIKE in SQL.
            If the connector supports schema/database names, it searches against both the plain table name and the fully qualified table name.
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/ping:
    get:
      summary: Ping returns information about the runtime
      operationId: RuntimeService_Ping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/s3/bucket/{bucket}/metadata:
    get:
      summary: S3GetBucketMetadata returns metadata for the given bucket.
      operationId: ConnectorService_S3GetBucketMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1S3GetBucketMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: bucket
          in: path
          required: true
          type: string
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/s3/bucket/{bucket}/objects:
    get:
      summary: S3ListBuckets lists objects for the given bucket.
      operationId: ConnectorService_S3ListObjects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1S3ListObjectsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: bucket
          in: path
          required: true
          type: string
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
        - name: region
          in: query
          required: false
          type: string
        - name: prefix
          in: query
          required: false
          type: string
        - name: startAfter
          in: query
          required: false
          type: string
        - name: delimiter
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/s3/buckets:
    get:
      summary: S3ListBuckets lists buckets accessible with the configured credentials.
      operationId: ConnectorService_S3ListBuckets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1S3ListBucketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
  /v1/s3/credentials_info:
    get:
      summary: S3GetCredentialsInfo returns metadata for the given bucket.
      operationId: ConnectorService_S3GetCredentialsInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1S3GetCredentialsInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: query
          required: false
          type: string
        - name: connector
          in: query
          required: false
          type: string
      tags:
        - ConnectorService
definitions:
  BucketExtractPolicyStrategy:
    type: string
    enum:
      - STRATEGY_UNSPECIFIED
      - STRATEGY_HEAD
      - STRATEGY_TAIL
    default: STRATEGY_UNSPECIFIED
  ColumnTimeSeriesRequestBasicMeasure:
    type: object
    properties:
      id:
        type: string
        title: Unused
      expression:
        type: string
        title: Required. IE 'count(*)'
      sqlName:
        type: string
        title: Optional. Defaults to 'measure_{i}', ie measure_0
  ConnectorDriverProperty:
    type: object
    properties:
      key:
        type: string
        title: The property key
      type:
        $ref: '#/definitions/ConnectorDriverPropertyType'
        title: The type expected for this property
      required:
        type: boolean
        title: Required is true if the field must be set
      displayName:
        type: string
        title: Pretty name for the property
      description:
        type: string
        title: Human readable description of the field
      docsUrl:
        type: string
        title: Link to documentation for this property
      hint:
        type: string
        title: Additional textual explanation for use in UIs
      default:
        type: string
        title: Default value for the property
      placeholder:
        type: string
        title: Placeholder value for use in UIs
      secret:
        type: boolean
        title: If true, the property is a secret and should not be displayed in UIs
      noPrompt:
        type: boolean
        title: If true, the property should not be prompted. The expectation is that only advanced users will use it and can set directly in the connector.yaml
    title: Property represents the spec of one of the driver's config properties
  ConnectorDriverPropertyType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_NUMBER
      - TYPE_BOOLEAN
      - TYPE_STRING
      - TYPE_FILE
      - TYPE_INFORMATIONAL
    default: TYPE_UNSPECIFIED
    title: Type of the property
  MetricsViewFilterCond:
    type: object
    properties:
      name:
        type: string
      in:
        type: array
        items: {}
      like:
        type: array
        items:
          type: string
  MetricsViewSearchResponseSearchResult:
    type: object
    properties:
      dimension:
        type: string
      value: {}
  MetricsViewSpecAvailableComparisonOffset:
    type: object
    properties:
      offset:
        type: string
      range:
        type: string
        description: Used to override the range for the comparison with something other than the selected range.
    description: 'Deprecated: Now defined in the Explore resource.'
  MetricsViewSpecAvailableTimeRange:
    type: object
    properties:
      range:
        type: string
      comparisonOffsets:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecAvailableComparisonOffset'
        description: Available comparison offsets for this time range.
    description: 'Deprecated: Now defined in the Explore resource.'
  MetricsViewSpecComparisonMode:
    type: string
    enum:
      - COMPARISON_MODE_UNSPECIFIED
      - COMPARISON_MODE_NONE
      - COMPARISON_MODE_TIME
      - COMPARISON_MODE_DIMENSION
    default: COMPARISON_MODE_UNSPECIFIED
    description: |-
      DEPRECATED FIELDS
      Deprecated: Now defined in the Explore resource.
  MetricsViewSpecDimensionSelector:
    type: object
    properties:
      name:
        type: string
      timeGrain:
        $ref: '#/definitions/v1TimeGrain'
        title: Only for time dimensions (optional)
      desc:
        type: boolean
        title: Only for when ordering (optional)
    title: Selector for a dimension
  MetricsViewSpecDimensionV2:
    type: object
    properties:
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
      column:
        type: string
      expression:
        type: string
      unnest:
        type: boolean
      uri:
        type: string
    title: Dimensions are columns to filter and group by
  MetricsViewSpecMeasureType:
    type: string
    enum:
      - MEASURE_TYPE_UNSPECIFIED
      - MEASURE_TYPE_SIMPLE
      - MEASURE_TYPE_DERIVED
      - MEASURE_TYPE_TIME_COMPARISON
    default: MEASURE_TYPE_UNSPECIFIED
    title: Type of measure query to generate
  MetricsViewSpecMeasureV2:
    type: object
    properties:
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
      expression:
        type: string
      type:
        $ref: '#/definitions/MetricsViewSpecMeasureType'
      window:
        $ref: '#/definitions/MetricsViewSpecMeasureWindow'
      perDimensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecDimensionSelector'
      requiredDimensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecDimensionSelector'
      referencedMeasures:
        type: array
        items:
          type: string
      formatPreset:
        type: string
      formatD3:
        type: string
      formatD3Locale:
        type: object
      validPercentOfTotal:
        type: boolean
    title: Measures are aggregated computed values
  MetricsViewSpecMeasureWindow:
    type: object
    properties:
      partition:
        type: boolean
        title: If true, partitions the window by all present dimensions except those in order_by
      orderBy:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecDimensionSelector'
        description: Dimensions to order the window by. Must be present in required_dimensions.
      frameExpression:
        type: string
        title: Raw SQL expression to use as the frame (starting with "ROWS ...")
    title: Window to apply to the measure calculation
  NumericHistogramBinsBin:
    type: object
    properties:
      bucket:
        type: integer
        format: int32
      low:
        type: number
        format: double
      midpoint:
        type: number
        format: double
      high:
        type: number
        format: double
      count:
        type: number
        format: double
  NumericOutliersOutlier:
    type: object
    properties:
      bucket:
        type: integer
        format: int32
      low:
        type: number
        format: double
      high:
        type: number
        format: double
      present:
        type: boolean
      count:
        type: integer
        format: int32
  StructTypeField:
    type: object
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/runtimev1Type'
  TopKEntry:
    type: object
    properties:
      value:
        title: Not optional, not null
      count:
        type: number
        format: double
        title: Not optional, not null
  TypeCode:
    type: string
    enum:
      - CODE_UNSPECIFIED
      - CODE_BOOL
      - CODE_INT8
      - CODE_INT16
      - CODE_INT32
      - CODE_INT64
      - CODE_INT128
      - CODE_INT256
      - CODE_UINT8
      - CODE_UINT16
      - CODE_UINT32
      - CODE_UINT64
      - CODE_UINT128
      - CODE_UINT256
      - CODE_FLOAT32
      - CODE_FLOAT64
      - CODE_TIMESTAMP
      - CODE_INTERVAL
      - CODE_DATE
      - CODE_TIME
      - CODE_STRING
      - CODE_BYTES
      - CODE_ARRAY
      - CODE_STRUCT
      - CODE_MAP
      - CODE_DECIMAL
      - CODE_JSON
      - CODE_UUID
    default: CODE_UNSPECIFIED
    title: Code enumerates all the types that can be represented in a schema
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  runtimev1Type:
    type: object
    properties:
      code:
        $ref: '#/definitions/TypeCode'
        title: Code designates the type
      nullable:
        type: boolean
        title: Nullable indicates whether null values are possible
      arrayElementType:
        $ref: '#/definitions/runtimev1Type'
        title: If code is CODE_ARRAY, array_element_type specifies the type of the array elements
      structType:
        $ref: '#/definitions/v1StructType'
        title: If code is CODE_STRUCT, struct_type specifies the type of the struct's fields
      mapType:
        $ref: '#/definitions/v1MapType'
        title: If code is CODE_MAP, map_type specifies the map's key and value types
    title: Type represents a data type in a schema
  v1API:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1APISpec'
      state:
        $ref: '#/definitions/v1APIState'
    description: API defines a custom operation for querying data stored in Rill.
  v1APISpec:
    type: object
    properties:
      resolver:
        type: string
      resolverProperties:
        type: object
      openapiSummary:
        type: string
      openapiParameters:
        type: array
        items:
          type: object
      openapiResponseSchema:
        type: object
      securityRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SecurityRule'
      skipNestedSecurity:
        type: boolean
  v1APIState:
    type: object
  v1Alert:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1AlertSpec'
      state:
        $ref: '#/definitions/v1AlertState'
  v1AlertExecution:
    type: object
    properties:
      adhoc:
        type: boolean
      result:
        $ref: '#/definitions/v1AssertionResult'
      sentNotifications:
        type: boolean
      executionTime:
        type: string
        format: date-time
      startedOn:
        type: string
        format: date-time
      finishedOn:
        type: string
        format: date-time
      suppressedSince:
        type: string
        format: date-time
        title: Stores the last notification time in suppressed alerts
  v1AlertSpec:
    type: object
    properties:
      displayName:
        type: string
      trigger:
        type: boolean
      refreshSchedule:
        $ref: '#/definitions/v1Schedule'
      watermarkInherit:
        type: boolean
        description: If true, will use the lowest watermark of its refs instead of the trigger time.
      intervalsIsoDuration:
        type: string
      intervalsLimit:
        type: integer
        format: int32
      intervalsCheckUnclosed:
        type: boolean
      timeoutSeconds:
        type: integer
        format: int64
      queryName:
        type: string
        title: for alerts that have not been edited since resolver and resolver_properties have been added
      queryArgsJson:
        type: string
      resolver:
        type: string
      resolverProperties:
        type: object
      queryForUserId:
        type: string
      queryForUserEmail:
        type: string
      queryForAttributes:
        type: object
      notifyOnRecover:
        type: boolean
      notifyOnFail:
        type: boolean
      notifyOnError:
        type: boolean
      renotify:
        type: boolean
      renotifyAfterSeconds:
        type: integer
        format: int64
      notifiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Notifier'
      annotations:
        type: object
        additionalProperties:
          type: string
  v1AlertState:
    type: object
    properties:
      specHash:
        type: string
      refsHash:
        type: string
      nextRunOn:
        type: string
        format: date-time
      currentExecution:
        $ref: '#/definitions/v1AlertExecution'
      executionHistory:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AlertExecution'
      executionCount:
        type: integer
        format: int64
  v1AnalyzeConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AnalyzedConnector'
    title: Response message for RuntimeService.AnalyzeConnectors
  v1AnalyzeVariablesResponse:
    type: object
    properties:
      variables:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1AnalyzedVariable'
    title: Response message for RuntimeService.AnalyzeVariables
  v1AnalyzedConnector:
    type: object
    properties:
      name:
        type: string
        title: Connector name
      driver:
        $ref: '#/definitions/v1ConnectorDriver'
        title: Connector driver metadata
      config:
        type: object
        additionalProperties:
          type: string
        title: Combined config properties for the connector
      presetConfig:
        type: object
        additionalProperties:
          type: string
        title: Config properties preset by the runtime or when the instance was created
      projectConfig:
        type: object
        additionalProperties:
          type: string
        title: Config properties set in project YAML files
      envConfig:
        type: object
        additionalProperties:
          type: string
        title: Config properties set as dynamic variables
      provision:
        type: boolean
        title: Provision indicates if its a managed connector
      provisionArgs:
        type: object
        title: Provision args for the provisioner if provision is true
      hasAnonymousAccess:
        type: boolean
        title: True if the connector can be accessed without credentials
      usedBy:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResourceName'
        title: List of resources that appear to use the connector
      errorMessage:
        type: string
        title: Error message if the connector is misconfigured
    description: AnalyzedConnector contains information about a connector that is referenced in the project files.
  v1AnalyzedVariable:
    type: object
    properties:
      name:
        type: string
        description: Name of the variable.
      defaultValue:
        type: string
        description: Default value set for the variable in rill.yaml, if any.
      usedBy:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResourceName'
        description: List of resources that appear to use the connector.
  v1AssertionResult:
    type: object
    properties:
      status:
        $ref: '#/definitions/v1AssertionStatus'
      failRow:
        type: object
      errorMessage:
        type: string
  v1AssertionStatus:
    type: string
    enum:
      - ASSERTION_STATUS_UNSPECIFIED
      - ASSERTION_STATUS_PASS
      - ASSERTION_STATUS_FAIL
      - ASSERTION_STATUS_ERROR
    default: ASSERTION_STATUS_UNSPECIFIED
  v1BigQueryListDatasetsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      names:
        type: array
        items:
          type: string
  v1BigQueryListTablesResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      names:
        type: array
        items:
          type: string
  v1BucketExtractPolicy:
    type: object
    properties:
      rowsStrategy:
        $ref: '#/definitions/BucketExtractPolicyStrategy'
      rowsLimitBytes:
        type: string
        format: uint64
      filesStrategy:
        $ref: '#/definitions/BucketExtractPolicyStrategy'
      filesLimit:
        type: string
        format: uint64
  v1BucketPlanner:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1BucketPlannerSpec'
      state:
        $ref: '#/definitions/v1BucketPlannerState'
  v1BucketPlannerSpec:
    type: object
    properties:
      extractPolicy:
        $ref: '#/definitions/v1BucketExtractPolicy'
  v1BucketPlannerState:
    type: object
    properties:
      region:
        type: string
  v1BuiltinMeasure:
    type: string
    enum:
      - BUILTIN_MEASURE_UNSPECIFIED
      - BUILTIN_MEASURE_COUNT
      - BUILTIN_MEASURE_COUNT_DISTINCT
    default: BUILTIN_MEASURE_UNSPECIFIED
  v1Canvas:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1CanvasSpec'
      state:
        $ref: '#/definitions/v1CanvasState'
  v1CanvasItem:
    type: object
    properties:
      component:
        type: string
      definedInCanvas:
        type: boolean
      x:
        type: integer
        format: int64
      "y":
        type: integer
        format: int64
      width:
        type: integer
        format: int64
      height:
        type: integer
        format: int64
  v1CanvasPreset:
    type: object
    properties:
      timeRange:
        type: string
        description: |-
          Time range for the explore.
          It corresponds to the `range` property of the explore's `time_ranges`.
          If not found in `time_ranges`, it should be added to the list.
      comparisonMode:
        $ref: '#/definitions/v1ExploreComparisonMode'
        description: |-
          Comparison mode.
          TODO: Once the canvas APIs have stabilized, rename ExploreComparisonMode to a non-explore-specific name.
      comparisonDimension:
        type: string
        description: If comparison_mode is EXPLORE_COMPARISON_MODE_DIMENSION, this indicates the dimension to use.
  v1CanvasSpec:
    type: object
    properties:
      displayName:
        type: string
        description: Display name for the canvas.
      maxWidth:
        type: integer
        format: int64
        description: Max width in pixels of the canvas.
      gapX:
        type: integer
        format: int64
        description: Horizontal gap in pixels of the canvas.
      gapY:
        type: integer
        format: int64
        description: Vertical gap in pixels of the canvas.
      theme:
        type: string
        description: Name of the theme to use. Only one of theme and embedded_theme can be set.
      embeddedTheme:
        $ref: '#/definitions/v1ThemeSpec'
        description: Theme to use, provided inline. Only one of theme and embedded_theme can be set.
      timeRanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ExploreTimeRange'
        description: |-
          List of selectable time ranges with comparison time ranges.
          If the list is empty, a default list should be shown.
          TODO: Once the canvas APIs have stabilized, rename ExploreTimeRange to a non-explore-specific name.
      timeZones:
        type: array
        items:
          type: string
        description: |-
          List of selectable time zones.
          If the list is empty, a default list should be shown.
          The values should be valid IANA location identifiers.
      filtersEnabled:
        type: boolean
        description: Indicates if filters should be enabled for the canvas.
      defaultPreset:
        $ref: '#/definitions/v1CanvasPreset'
        description: Preset UI state to show by default.
      variables:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ComponentVariable'
        description: Variables that can be used in the canvas.
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CanvasItem'
        title: Items to render on the canvas
      layout:
        description: Layout is an untyped object pending a formal definition.
      securityRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SecurityRule'
        description: Security rules to apply for access to the canvas.
      banner:
        type: string
        description: Banner text that can be displayed in Rill Cloud.
  v1CanvasState:
    type: object
    properties:
      validSpec:
        $ref: '#/definitions/v1CanvasSpec'
  v1CategoricalSummary:
    type: object
    properties:
      topK:
        $ref: '#/definitions/v1TopK'
      cardinality:
        type: number
        format: double
  v1CharLocation:
    type: object
    properties:
      line:
        type: integer
        format: int64
  v1Color:
    type: object
    properties:
      red:
        type: number
        format: float
      green:
        type: number
        format: float
      blue:
        type: number
        format: float
      alpha:
        type: number
        format: float
  v1ColumnCardinalityRequest:
    type: object
    properties:
      instanceId:
        type: string
        title: Required
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1ColumnCardinalityResponse:
    type: object
    properties:
      categoricalSummary:
        $ref: '#/definitions/v1CategoricalSummary'
        title: Not optional, not null
  v1ColumnDescriptiveStatisticsRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1ColumnDescriptiveStatisticsResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
  v1ColumnNullCountRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1ColumnNullCountResponse:
    type: object
    properties:
      count:
        type: number
        format: double
        title: Not optional, not null
  v1ColumnNumericHistogramRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
      columnName:
        type: string
      histogramMethod:
        $ref: '#/definitions/v1HistogramMethod'
      priority:
        type: integer
        format: int32
  v1ColumnNumericHistogramResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
  v1ColumnRollupIntervalRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1ColumnRollupIntervalResponse:
    type: object
    properties:
      start:
        type: string
        format: date-time
        title: Minimum timestamp
      end:
        type: string
        format: date-time
        title: Maximum timestamp
      interval:
        $ref: '#/definitions/v1TimeGrain'
        title: Human friendly time grain that is still bounded by (min, max), ie 'minute' time grain for an hour time range
  v1ColumnRugHistogramRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
      columnName:
        type: string
      priority:
        type: integer
        format: int32
  v1ColumnRugHistogramResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
  v1ColumnTimeGrainRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1ColumnTimeGrainResponse:
    type: object
    properties:
      timeGrain:
        $ref: '#/definitions/v1TimeGrain'
  v1ColumnTimeRangeRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
      columnName:
        type: string
      priority:
        type: integer
        format: int32
  v1ColumnTimeRangeResponse:
    type: object
    properties:
      timeRangeSummary:
        $ref: '#/definitions/v1TimeRangeSummary'
  v1ColumnTimeSeriesRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      measures:
        type: array
        items:
          type: object
          $ref: '#/definitions/ColumnTimeSeriesRequestBasicMeasure'
        title: Optional. Defaults to [count(*)]
      timestampColumnName:
        type: string
        title: Required
      timeRange:
        $ref: '#/definitions/v1TimeSeriesTimeRange'
        title: Optional. Defaults to [min, max)
      pixels:
        type: integer
        format: int32
        title: Optional. Spark is not calculated if ommitted. See http://www.vldb.org/pvldb/vol7/p797-jugel.pdf
      sampleSize:
        type: integer
        format: int32
        title: Unused
      priority:
        type: integer
        format: int32
      timeZone:
        type: string
        title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
  v1ColumnTimeSeriesResponse:
    type: object
    properties:
      rollup:
        $ref: '#/definitions/v1TimeSeriesResponse'
  v1ColumnTopKRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      columnName:
        type: string
        title: Required
      agg:
        type: string
        title: default is count(*)
      k:
        type: integer
        format: int32
        title: default is 50
      priority:
        type: integer
        format: int32
  v1ColumnTopKResponse:
    type: object
    properties:
      categoricalSummary:
        $ref: '#/definitions/v1CategoricalSummary'
  v1Component:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ComponentSpec'
      state:
        $ref: '#/definitions/v1ComponentState'
  v1ComponentSpec:
    type: object
    properties:
      displayName:
        type: string
      description:
        type: string
      renderer:
        type: string
      rendererProperties:
        type: object
      input:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ComponentVariable'
      output:
        $ref: '#/definitions/v1ComponentVariable'
      definedInCanvas:
        type: boolean
  v1ComponentState:
    type: object
    properties:
      validSpec:
        $ref: '#/definitions/v1ComponentSpec'
  v1ComponentVariable:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      defaultValue: {}
  v1Condition:
    type: object
    properties:
      op:
        $ref: '#/definitions/v1Operation'
      exprs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Expression'
  v1Connector:
    type: object
    properties:
      type:
        type: string
        description: Type of the connector. One of the infra driver supported.
      name:
        type: string
        title: Name of the connector
      config:
        type: object
        additionalProperties:
          type: string
        title: Config for the connector
      templatedProperties:
        type: array
        items:
          type: string
        title: Properties in config that use templating
      provision:
        type: boolean
        title: Provision settings if its a managed connector
      provisionArgs:
        type: object
      configFromVariables:
        type: object
        additionalProperties:
          type: string
        title: 'DEPRECATED: config_from_variables stores configs whose value is a variable. This is only set for configs obtained from `connector.yaml`'
  v1ConnectorDriver:
    type: object
    properties:
      name:
        type: string
        title: Name is the name of the connector
      configProperties:
        type: array
        items:
          type: object
          $ref: '#/definitions/ConnectorDriverProperty'
        title: Properties for configuring the connector
      sourceProperties:
        type: array
        items:
          type: object
          $ref: '#/definitions/ConnectorDriverProperty'
        title: Properties that can be provided to the connector when using it as a source
      displayName:
        type: string
        title: Pretty display name for use in UIs
      description:
        type: string
        title: Human readable description of the connector
      implementsRegistry:
        type: boolean
        title: Capabilities supported by the connector
      implementsCatalog:
        type: boolean
      implementsRepo:
        type: boolean
      implementsAdmin:
        type: boolean
      implementsAi:
        type: boolean
      implementsSqlStore:
        type: boolean
      implementsOlap:
        type: boolean
      implementsObjectStore:
        type: boolean
      implementsFileStore:
        type: boolean
      implementsNotifier:
        type: boolean
      implementsWarehouse:
        type: boolean
    description: ConnectorDriver represents a connector driver available in the runtime.
  v1ConnectorSpec:
    type: object
    properties:
      driver:
        type: string
      properties:
        type: object
        additionalProperties:
          type: string
      templatedProperties:
        type: array
        items:
          type: string
      provision:
        type: boolean
      provisionArgs:
        type: object
      propertiesFromVariables:
        type: object
        additionalProperties:
          type: string
        description: |-
          DEPRECATED: properties_from_variables stores properties whose value is a variable.
          NOTE : properties_from_variables and properties both should be used to get all properties.
  v1ConnectorState:
    type: object
    properties:
      specHash:
        type: string
  v1ConnectorV2:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ConnectorSpec'
      state:
        $ref: '#/definitions/v1ConnectorState'
  v1CreateDirectoryResponse:
    type: object
    title: Response message for RuntimeService.CreateDirectory
  v1CreateInstanceRequest:
    type: object
    properties:
      instanceId:
        type: string
      environment:
        type: string
      olapConnector:
        type: string
      repoConnector:
        type: string
      adminConnector:
        type: string
      aiConnector:
        type: string
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Connector'
      variables:
        type: object
        additionalProperties:
          type: string
      annotations:
        type: object
        additionalProperties:
          type: string
      embedCatalog:
        type: boolean
      watchRepo:
        type: boolean
    description: |-
      Request message for RuntimeService.CreateInstance.
      See message Instance for field descriptions.
  v1CreateInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.CreateInstance
  v1CreateTriggerResponse:
    type: object
  v1DeleteFileResponse:
    type: object
    title: Response message for RuntimeService.DeleteFile
  v1DeleteInstanceResponse:
    type: object
    title: Response message for RuntimeService.DeleteInstance
  v1DirEntry:
    type: object
    properties:
      path:
        type: string
      isDir:
        type: boolean
  v1EditInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.EditInstance
  v1Example:
    type: object
    properties:
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
    description: Example contains metadata about an example project that is available for unpacking.
  v1Explore:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ExploreSpec'
      state:
        $ref: '#/definitions/v1ExploreState'
  v1ExploreComparisonMode:
    type: string
    enum:
      - EXPLORE_COMPARISON_MODE_UNSPECIFIED
      - EXPLORE_COMPARISON_MODE_NONE
      - EXPLORE_COMPARISON_MODE_TIME
      - EXPLORE_COMPARISON_MODE_DIMENSION
    default: EXPLORE_COMPARISON_MODE_UNSPECIFIED
  v1ExploreComparisonTimeRange:
    type: object
    properties:
      offset:
        type: string
        description: ISO 8601 duration string to use as an offset from the base time range.
      range:
        type: string
        description: |-
          ISO 8601 duration string for the duration of the comparison time range.
          If not specified, it should fallback to the range of the base time range.
  v1ExplorePreset:
    type: object
    properties:
      dimensions:
        type: array
        items:
          type: string
        description: Dimensions to show. If `dimensions_selector` is set, this will only be set in `state.valid_spec`.
      dimensionsSelector:
        $ref: '#/definitions/v1FieldSelector'
        description: Dynamic selector for `dimensions`. Will be processed during validation, so it will always be empty in `state.valid_spec`.
      measures:
        type: array
        items:
          type: string
        description: Measures to show. If `measures_selector` is set, this will only be set in `state.valid_spec`.
      measuresSelector:
        $ref: '#/definitions/v1FieldSelector'
        description: Dynamic selector for `measures`. Will be processed during validation, so it will always be empty in `state.valid_spec`.
      where:
        $ref: '#/definitions/v1Expression'
      timeRange:
        type: string
        description: |-
          Time range for the explore.
          It corresponds to the `range` property of the explore's `time_ranges`.
          If not found in `time_ranges`, it should be added to the list.
      timezone:
        type: string
      timeGrain:
        type: string
      selectTimeRange:
        type: string
      comparisonMode:
        $ref: '#/definitions/v1ExploreComparisonMode'
        description: Comparison mode.
      compareTimeRange:
        type: string
      comparisonDimension:
        type: string
        description: If comparison_mode is EXPLORE_COMPARISON_MODE_DIMENSION, this indicates the dimension to use.
      view:
        $ref: '#/definitions/v1ExploreWebView'
      exploreSortBy:
        type: string
      exploreSortAsc:
        type: boolean
      exploreSortType:
        $ref: '#/definitions/v1ExploreSortType'
      exploreExpandedDimension:
        type: string
      timeDimensionMeasure:
        type: string
      timeDimensionChartType:
        type: string
      timeDimensionPin:
        type: boolean
      pivotRows:
        type: array
        items:
          type: string
      pivotCols:
        type: array
        items:
          type: string
      pivotSortBy:
        type: string
      pivotSortAsc:
        type: boolean
  v1ExploreSortType:
    type: string
    enum:
      - EXPLORE_SORT_TYPE_UNSPECIFIED
      - EXPLORE_SORT_TYPE_VALUE
      - EXPLORE_SORT_TYPE_PERCENT
      - EXPLORE_SORT_TYPE_DELTA_PERCENT
      - EXPLORE_SORT_TYPE_DELTA_ABSOLUTE
      - EXPLORE_SORT_TYPE_DIMENSION
    default: EXPLORE_SORT_TYPE_UNSPECIFIED
  v1ExploreSpec:
    type: object
    properties:
      displayName:
        type: string
        title: User-facing name
      description:
        type: string
        title: User-facing description
      metricsView:
        type: string
        title: The metrics view the explore is based on
      dimensions:
        type: array
        items:
          type: string
        description: Dimensions to show. If `dimensions_selector` is set, this will only be set in `state.valid_spec`.
      dimensionsSelector:
        $ref: '#/definitions/v1FieldSelector'
        description: Dynamic selector for `dimensions`. Will be processed during validation, so it will always be empty in `state.valid_spec`.
      measures:
        type: array
        items:
          type: string
        description: Measures to show. If `measures_selector` is set, this will only be set in `state.valid_spec`.
      measuresSelector:
        $ref: '#/definitions/v1FieldSelector'
        description: Dynamic selector for `measures`. Will be processed during validation, so it will always be empty in `state.valid_spec`.
      theme:
        type: string
        title: Theme to use
      embeddedTheme:
        $ref: '#/definitions/v1ThemeSpec'
      timeRanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ExploreTimeRange'
        description: |-
          List of selectable time ranges with comparison time ranges.
          If the list is empty, a default list should be shown.
      timeZones:
        type: array
        items:
          type: string
        description: |-
          List of selectable time zones.
          If the list is empty, a default list should be shown.
          The values should be valid IANA location identifiers.
      defaultPreset:
        $ref: '#/definitions/v1ExplorePreset'
        description: Preset UI state to show by default.
      embedsHidePivot:
        type: boolean
        description: If true, the pivot tab will be hidden when the explore is embedded.
      securityRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SecurityRule'
        description: |-
          Security for the explore dashboard.
          These are not currently parsed from YAML, but will be derived from the parent metrics view.
      banner:
        type: string
        description: Banner text that can be displayed in Rill Cloud.
  v1ExploreState:
    type: object
    properties:
      validSpec:
        $ref: '#/definitions/v1ExploreSpec'
  v1ExploreTimeRange:
    type: object
    properties:
      range:
        type: string
        title: ISO 8601 duration string for the time range
      comparisonTimeRanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ExploreComparisonTimeRange'
        title: Comparison time ranges available for this time range
  v1ExploreWebView:
    type: string
    enum:
      - EXPLORE_WEB_VIEW_UNSPECIFIED
      - EXPLORE_WEB_VIEW_EXPLORE
      - EXPLORE_WEB_VIEW_TIME_DIMENSION
      - EXPLORE_WEB_VIEW_PIVOT
      - EXPLORE_WEB_VIEW_CANVAS
    default: EXPLORE_WEB_VIEW_UNSPECIFIED
  v1ExportFormat:
    type: string
    enum:
      - EXPORT_FORMAT_UNSPECIFIED
      - EXPORT_FORMAT_CSV
      - EXPORT_FORMAT_XLSX
      - EXPORT_FORMAT_PARQUET
    default: EXPORT_FORMAT_UNSPECIFIED
  v1ExportReportResponse:
    type: object
    properties:
      downloadUrlPath:
        type: string
  v1ExportResponse:
    type: object
    properties:
      downloadUrlPath:
        type: string
  v1Expression:
    type: object
    properties:
      ident:
        type: string
      val: {}
      cond:
        $ref: '#/definitions/v1Condition'
      subquery:
        $ref: '#/definitions/v1Subquery'
  v1FieldSelector:
    type: object
    properties:
      invert:
        type: boolean
        description: Invert the result such that all fields *except* the selected fields are returned.
      all:
        type: boolean
        description: Select all fields.
      fields:
        $ref: '#/definitions/v1StringListValue'
        description: Select specific fields by name.
      regex:
        type: string
        description: Select fields by a regular expression.
      duckdbExpression:
        type: string
        description: Select fields by a DuckDB SQL SELECT expression. For example "* EXCLUDE (city)".
    description: |-
      FieldSelector describes logic for selecting a list of fields.
      It is useful for dynamically evaluating fields when the list of potential fields is not known at parse time.
  v1FileEvent:
    type: string
    enum:
      - FILE_EVENT_UNSPECIFIED
      - FILE_EVENT_WRITE
      - FILE_EVENT_DELETE
    default: FILE_EVENT_UNSPECIFIED
    description: FileEvent describes a file change.
  v1GCSGetCredentialsInfoResponse:
    type: object
    properties:
      exist:
        type: boolean
      projectId:
        type: string
  v1GCSListBucketsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      buckets:
        type: array
        items:
          type: string
  v1GCSListObjectsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GCSObject'
  v1GCSObject:
    type: object
    properties:
      name:
        type: string
      modifiedOn:
        type: string
        format: date-time
      size:
        type: string
        format: int64
      isDir:
        type: boolean
  v1GenerateMetricsViewFileResponse:
    type: object
    properties:
      aiSucceeded:
        type: boolean
        description: Indicates if AI-based generation succeeded. If it failed, it falls back to the simpler heuristic approach.
    title: Response message for RuntimeService.GenerateMetricsViewFile
  v1GenerateRendererResponse:
    type: object
    properties:
      renderer:
        type: string
      rendererProperties:
        type: object
  v1GenerateResolverResponse:
    type: object
    properties:
      resolver:
        type: string
      resolverProperties:
        type: object
  v1GetExploreResponse:
    type: object
    properties:
      explore:
        $ref: '#/definitions/v1Resource'
      metricsView:
        $ref: '#/definitions/v1Resource'
  v1GetFileResponse:
    type: object
    properties:
      blob:
        type: string
      updatedOn:
        type: string
        format: date-time
    title: Response message for RuntimeService.GetFile
  v1GetInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.GetInstance
  v1GetLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Log'
  v1GetModelPartitionsResponse:
    type: object
    properties:
      partitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ModelPartition'
      nextPageToken:
        type: string
  v1GetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/v1Resource'
  v1HealthResponse:
    type: object
    properties:
      limiterError:
        type: string
      connCacheError:
        type: string
      metastoreError:
        type: string
      networkError:
        type: string
      instancesHealth:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1InstanceHealth'
  v1HistogramMethod:
    type: string
    enum:
      - HISTOGRAM_METHOD_UNSPECIFIED
      - HISTOGRAM_METHOD_FD
      - HISTOGRAM_METHOD_DIAGNOSTIC
    default: HISTOGRAM_METHOD_UNSPECIFIED
  v1Instance:
    type: object
    properties:
      instanceId:
        type: string
      environment:
        type: string
      olapConnector:
        type: string
      repoConnector:
        type: string
      adminConnector:
        type: string
      aiConnector:
        type: string
      createdOn:
        type: string
        format: date-time
      updatedOn:
        type: string
        format: date-time
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Connector'
      projectConnectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Connector'
      variables:
        type: object
        additionalProperties:
          type: string
      projectVariables:
        type: object
        additionalProperties:
          type: string
      featureFlags:
        type: object
        additionalProperties:
          type: boolean
      annotations:
        type: object
        additionalProperties:
          type: string
      embedCatalog:
        type: boolean
      watchRepo:
        type: boolean
    description: |-
      Instance represents a single data project, meaning one set of code artifacts,
      one connection to an OLAP datastore (DuckDB, Druid), and one catalog of related
      metadata (such as reconciliation state). Instances are the unit of isolation within
      the runtime. They enable one runtime deployment to serve not only multiple data
      projects, but also multiple tenants. On local, the runtime will usually have
      just a single instance.
  v1InstanceHealth:
    type: object
    properties:
      controllerError:
        type: string
      olapError:
        type: string
      repoError:
        type: string
      metricsViewErrors:
        type: object
        additionalProperties:
          type: string
      parseErrorCount:
        type: integer
        format: int32
      reconcileErrorCount:
        type: integer
        format: int32
  v1InstanceHealthResponse:
    type: object
    properties:
      instanceHealth:
        $ref: '#/definitions/v1InstanceHealth'
  v1IssueDevJWTRequest:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      groups:
        type: array
        items:
          type: string
      admin:
        type: boolean
      attributes:
        type: object
        description: |-
          Additional arbitrary attributes to include in the JWT.
          They take precedence if they collide with name, email, groups or admin.
    title: Request message for RuntimeService.IssueDevJWT
  v1IssueDevJWTResponse:
    type: object
    properties:
      jwt:
        type: string
    title: Response message for RuntimeService.IssueDevJWT
  v1ListConnectorDriversResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConnectorDriver'
    title: Response message for RuntimeService.ListConnectorDrivers
  v1ListExamplesResponse:
    type: object
    properties:
      examples:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Example'
    title: Response message for RuntimeService.ListExamples
  v1ListFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DirEntry'
    title: Response message for RuntimeService.ListFiles
  v1ListInstancesResponse:
    type: object
    properties:
      instances:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Instance'
      nextPageToken:
        type: string
    title: Response message for RuntimeService.ListInstances
  v1ListNotifierConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Connector'
        description: 'Note: In this list, the Connector.config property will always be empty.'
    title: Response message for RuntimeService.ListNotifierConnectors
  v1ListResourcesResponse:
    type: object
    properties:
      resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Resource'
  v1Log:
    type: object
    properties:
      level:
        $ref: '#/definitions/v1LogLevel'
      time:
        type: string
        format: date-time
      message:
        type: string
      jsonPayload:
        type: string
  v1LogLevel:
    type: string
    enum:
      - LOG_LEVEL_UNSPECIFIED
      - LOG_LEVEL_DEBUG
      - LOG_LEVEL_INFO
      - LOG_LEVEL_WARN
      - LOG_LEVEL_ERROR
      - LOG_LEVEL_FATAL
    default: LOG_LEVEL_UNSPECIFIED
  v1MapType:
    type: object
    properties:
      keyType:
        $ref: '#/definitions/runtimev1Type'
      valueType:
        $ref: '#/definitions/runtimev1Type'
    title: MapType is a complex type for mapping keys to values
  v1MetricsViewAggregationDimension:
    type: object
    properties:
      name:
        type: string
        title: Required
      timeGrain:
        $ref: '#/definitions/v1TimeGrain'
        title: Optional
      timeZone:
        type: string
        title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
      alias:
        type: string
  v1MetricsViewAggregationMeasure:
    type: object
    properties:
      name:
        type: string
        title: Required
      builtinMeasure:
        $ref: '#/definitions/v1BuiltinMeasure'
        title: Optional
      builtinMeasureArgs:
        type: array
        items: {}
        title: Required if BUILTIN_MEASURE_COUNT_DISTINCT
      filter:
        $ref: '#/definitions/v1Expression'
      count:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeCount'
      countDistinct:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeCountDistinct'
      comparisonValue:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeComparisonValue'
      comparisonDelta:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeComparisonDelta'
      comparisonRatio:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeComparisonRatio'
      percentOfTotal:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputePercentOfTotal'
      uri:
        $ref: '#/definitions/v1MetricsViewAggregationMeasureComputeURI'
  v1MetricsViewAggregationMeasureComputeComparisonDelta:
    type: object
    properties:
      measure:
        type: string
  v1MetricsViewAggregationMeasureComputeComparisonRatio:
    type: object
    properties:
      measure:
        type: string
  v1MetricsViewAggregationMeasureComputeComparisonValue:
    type: object
    properties:
      measure:
        type: string
  v1MetricsViewAggregationMeasureComputeCount:
    type: object
  v1MetricsViewAggregationMeasureComputeCountDistinct:
    type: object
    properties:
      dimension:
        type: string
  v1MetricsViewAggregationMeasureComputePercentOfTotal:
    type: object
    properties:
      measure:
        type: string
  v1MetricsViewAggregationMeasureComputeURI:
    type: object
    properties:
      dimension:
        type: string
  v1MetricsViewAggregationRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsView:
        type: string
        title: Required
      dimensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewAggregationDimension'
        title: Required
      measures:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewAggregationMeasure'
        title: Required
      sort:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewAggregationSort'
        title: Optional. Defaults to unsorted
      timeRange:
        $ref: '#/definitions/v1TimeRange'
        title: Optional. Defaults to unbounded
      comparisonTimeRange:
        $ref: '#/definitions/v1TimeRange'
        title: Optional, if omitted than the request prepares an aggregation without a comparison
      timeStart:
        type: string
        format: date-time
        title: Deprecated in favor of time_range
      timeEnd:
        type: string
        format: date-time
        title: Deprecated in favor of time_range
      pivotOn:
        type: array
        items:
          type: string
        title: Optional. List of dimensions/measures. No pivot is done if ommitted
      aliases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonMeasureAlias'
        title: Optional
      where:
        $ref: '#/definitions/v1Expression'
        title: Optional
      whereSql:
        type: string
        description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
      having:
        $ref: '#/definitions/v1Expression'
        title: Optional
      havingSql:
        type: string
        description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
      limit:
        type: string
        format: int64
        title: Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
      offset:
        type: string
        format: int64
        title: Optional. Defaults to 0
      priority:
        type: integer
        format: int32
        title: Optional
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        description: Deprecated. should be removed once UI is moved to use new filters
        title: Optional
      exact:
        type: boolean
  v1MetricsViewAggregationResponse:
    type: object
    properties:
      schema:
        $ref: '#/definitions/v1StructType'
        title: Not optional, not null
      data:
        type: array
        items:
          type: object
        title: Not optional, not null
  v1MetricsViewAggregationSort:
    type: object
    properties:
      name:
        type: string
        title: Required. Dimension or measure name
      desc:
        type: boolean
        title: Optional
  v1MetricsViewColumn:
    type: object
    properties:
      name:
        type: string
        title: Not optional, not null
      type:
        type: string
        title: Not optional, not null
      nullable:
        type: boolean
        title: Not optional, not null
  v1MetricsViewComparisonMeasureAlias:
    type: object
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/v1MetricsViewComparisonMeasureType'
      alias:
        type: string
  v1MetricsViewComparisonMeasureType:
    type: string
    enum:
      - METRICS_VIEW_COMPARISON_MEASURE_TYPE_UNSPECIFIED
      - METRICS_VIEW_COMPARISON_MEASURE_TYPE_BASE_VALUE
      - METRICS_VIEW_COMPARISON_MEASURE_TYPE_COMPARISON_VALUE
      - METRICS_VIEW_COMPARISON_MEASURE_TYPE_ABS_DELTA
      - METRICS_VIEW_COMPARISON_MEASURE_TYPE_REL_DELTA
    default: METRICS_VIEW_COMPARISON_MEASURE_TYPE_UNSPECIFIED
  v1MetricsViewComparisonRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsViewName:
        type: string
      dimension:
        $ref: '#/definitions/v1MetricsViewAggregationDimension'
        title: Required
      measures:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewAggregationMeasure'
        title: Required
      comparisonMeasures:
        type: array
        items:
          type: string
        title: |-
          Measures that should be compared
          Optional. Defaults to all measures
      sort:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonSort'
        title: Required
      timeRange:
        $ref: '#/definitions/v1TimeRange'
        title: Optional
      comparisonTimeRange:
        $ref: '#/definitions/v1TimeRange'
        title: Optional, if omitted than the request prepares the toplist without a comparison
      where:
        $ref: '#/definitions/v1Expression'
        title: Optional
      whereSql:
        type: string
        description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
      having:
        $ref: '#/definitions/v1Expression'
        title: Optional
      havingSql:
        type: string
        description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
      aliases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonMeasureAlias'
        title: Optional
      limit:
        type: string
        format: int64
        title: Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
      offset:
        type: string
        format: int64
        title: Optional. Defaults to 0
      priority:
        type: integer
        format: int32
        title: Optional
      exact:
        type: boolean
        title: Optional, defaults to false
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        description: Deprecated. should be removed once UI is moved to use new filters
        title: Optional
    title: Request message for QueryService.MetricsViewComparison
  v1MetricsViewComparisonResponse:
    type: object
    properties:
      rows:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonRow'
        title: Not optional, not null
    title: Response message for QueryService.MetricsViewComparison
  v1MetricsViewComparisonRow:
    type: object
    properties:
      dimensionValue:
        title: Not optional, not null
      measureValues:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonValue'
        title: Not optional, not null
  v1MetricsViewComparisonSort:
    type: object
    properties:
      name:
        type: string
        title: Required
      desc:
        type: boolean
        title: Optional, defaults to false
      type:
        $ref: '#/definitions/v1MetricsViewComparisonSortType'
        title: Deprecated. Present for backwards compatibility for older reports
      sortType:
        $ref: '#/definitions/v1MetricsViewComparisonMeasureType'
  v1MetricsViewComparisonSortType:
    type: string
    enum:
      - METRICS_VIEW_COMPARISON_SORT_TYPE_UNSPECIFIED
      - METRICS_VIEW_COMPARISON_SORT_TYPE_BASE_VALUE
      - METRICS_VIEW_COMPARISON_SORT_TYPE_COMPARISON_VALUE
      - METRICS_VIEW_COMPARISON_SORT_TYPE_ABS_DELTA
      - METRICS_VIEW_COMPARISON_SORT_TYPE_REL_DELTA
    default: METRICS_VIEW_COMPARISON_SORT_TYPE_UNSPECIFIED
    title: Present for backwards compatibility
  v1MetricsViewComparisonValue:
    type: object
    properties:
      measureName:
        type: string
        title: Not optional, not null
      baseValue:
        title: Can be null
      comparisonValue:
        title: Can be null
      deltaAbs:
        title: Can be null
      deltaRel:
        title: Can be null
  v1MetricsViewFilter:
    type: object
    properties:
      include:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewFilterCond'
      exclude:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewFilterCond'
  v1MetricsViewRowsRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsViewName:
        type: string
      timeStart:
        type: string
        format: date-time
        title: Optional, defaults to min
      timeEnd:
        type: string
        format: date-time
        title: Optional, defaults to max
      timeGranularity:
        $ref: '#/definitions/v1TimeGrain'
        title: Optional, doesn't prepend the timestamp rollup column if ommitted
      where:
        $ref: '#/definitions/v1Expression'
        title: Optional
      sort:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewSort'
        title: Optional
      limit:
        type: integer
        format: int32
        title: Optional
      offset:
        type: string
        format: int64
        title: Optional
      priority:
        type: integer
        format: int32
      timeZone:
        type: string
        title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        title: Deprecated. should be removed once UI is moved to use new filters
  v1MetricsViewRowsResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
        title: Not optional, not null
      data:
        type: array
        items:
          type: object
        title: Not optional, not null
  v1MetricsViewSchemaResponse:
    type: object
    properties:
      schema:
        $ref: '#/definitions/v1StructType'
  v1MetricsViewSearchResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSearchResponseSearchResult'
  v1MetricsViewSort:
    type: object
    properties:
      name:
        type: string
        title: Required
      ascending:
        type: boolean
        title: Optional, defaults to false
  v1MetricsViewSpec:
    type: object
    properties:
      connector:
        type: string
        title: Connector containing the table
      database:
        type: string
        title: Name of the database where table is located (optional)
      databaseSchema:
        type: string
        title: Name of the database schema where table is located (optional)
      table:
        type: string
        title: Name of the table the metrics view is based on
      model:
        type: string
        description: Name of the model the metrics view is based on. Either table or model should be set.
      displayName:
        type: string
        title: User-facing name
      description:
        type: string
        title: User-facing description
      timeDimension:
        type: string
        title: Name of the primary time dimension, used for rendering time series
      smallestTimeGrain:
        $ref: '#/definitions/v1TimeGrain'
        description: |-
          The smallest time grain that can be queried for.
          This can be useful to set if the time_dimension is not available below a certain granularity.
      watermarkExpression:
        type: string
        description: Expression to evaluate a watermark for the metrics view. If not set, the watermark defaults to max(time_dimension).
      dimensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecDimensionV2'
        title: Dimensions in the metrics view
      measures:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecMeasureV2'
        title: Measures in the metrics view
      securityRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1SecurityRule'
        title: Security for the metrics view
      firstDayOfWeek:
        type: integer
        format: int64
        description: ISO 8601 weekday number to use as the base for time aggregations by week. Defaults to 1 (Monday).
      firstMonthOfYear:
        type: integer
        format: int64
        description: Month number to use as the base for time aggregations by year. Defaults to 1 (January).
      defaultDimensions:
        type: array
        items:
          type: string
        description: |-
          List of selected dimensions by defaults.
          Deprecated: Now defined in the Explore resource.
      defaultMeasures:
        type: array
        items:
          type: string
        description: |-
          List of selected measures by defaults.
          Deprecated: Now defined in the Explore resource.
      defaultTimeRange:
        type: string
        description: |-
          Default time range for the dashboard. It should be a valid ISO 8601 duration string.
          Deprecated: Now defined in the Explore resource.
      defaultComparisonMode:
        $ref: '#/definitions/MetricsViewSpecComparisonMode'
        description: |-
          Selected default comparison mode.
          Deprecated: Now defined in the Explore resource.
      defaultComparisonDimension:
        type: string
        description: |-
          If comparison mode is dimension then this determines which is the default dimension.
          Deprecated: Now defined in the Explore resource.
      defaultTheme:
        type: string
        description: |-
          Default theme to apply.
          Deprecated: Now defined in the Explore resource.
      availableTimeRanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewSpecAvailableTimeRange'
        description: |-
          List of available time ranges with comparison ranges that would replace the default list.
          Deprecated: Now defined in the Explore resource.
      availableTimeZones:
        type: array
        items:
          type: string
        description: |-
          Available time zones list preferred time zones using IANA location identifiers.
          Deprecated: Now defined in the Explore resource.
      cacheEnabled:
        type: boolean
        description: Cache controls for the metrics view.
      cacheKeySql:
        type: string
      cacheKeyTtlSeconds:
        type: string
        format: int64
  v1MetricsViewState:
    type: object
    properties:
      validSpec:
        $ref: '#/definitions/v1MetricsViewSpec'
        description: Valid spec is a (potentially previous) version of the spec that is known to currently be valid.
      streaming:
        type: boolean
        description: |-
          Streaming is true if the underlying data may change without the metrics view's spec/state version changing.
          It's set to true if the metrics view is based on an externally managed table.
  v1MetricsViewTimeRangeResponse:
    type: object
    properties:
      timeRangeSummary:
        $ref: '#/definitions/v1TimeRangeSummary'
        title: Not optional, not null
  v1MetricsViewTimeRangesResponse:
    type: object
    properties:
      timeRanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeRange'
  v1MetricsViewTimeSeriesRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsViewName:
        type: string
      measureNames:
        type: array
        items:
          type: string
      timeStart:
        type: string
        format: date-time
        title: Optional. Defaults to min
      timeEnd:
        type: string
        format: date-time
        title: Optional. Defaults to max
      timeGranularity:
        $ref: '#/definitions/v1TimeGrain'
        title: Required
      where:
        $ref: '#/definitions/v1Expression'
        title: Optional
      whereSql:
        type: string
        description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
      having:
        $ref: '#/definitions/v1Expression'
        title: Optional
      havingSql:
        type: string
        description: Optional. If both having and having_sql are set, both will be applied with an AND between them.
      timeZone:
        type: string
        title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
      priority:
        type: integer
        format: int32
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        title: Deprecated. should be removed once UI is moved to use new filters
  v1MetricsViewTimeSeriesResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
        title: Not optional, not null
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
        title: Not optional, not null
  v1MetricsViewToplistRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsViewName:
        type: string
      dimensionName:
        type: string
      measureNames:
        type: array
        items:
          type: string
      timeStart:
        type: string
        format: date-time
      timeEnd:
        type: string
        format: date-time
      limit:
        type: string
        format: int64
      offset:
        type: string
        format: int64
      sort:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewSort'
      where:
        $ref: '#/definitions/v1Expression'
      whereSql:
        type: string
      having:
        $ref: '#/definitions/v1Expression'
      havingSql:
        type: string
      priority:
        type: integer
        format: int32
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        title: Deprecated. should be removed once UI is moved to use new filters
    title: Deprecated, use MetricsViewComparisonRequest without a comparison time range
  v1MetricsViewToplistResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
        title: Not optional, not null
      data:
        type: array
        items:
          type: object
        title: Not optional, not null
  v1MetricsViewTotalsRequest:
    type: object
    properties:
      instanceId:
        type: string
      metricsViewName:
        type: string
      measureNames:
        type: array
        items:
          type: string
      timeStart:
        type: string
        format: date-time
        title: Optional. Defaults to min
      timeEnd:
        type: string
        format: date-time
        title: Optional. Defaults to max
      where:
        $ref: '#/definitions/v1Expression'
        title: Optional
      whereSql:
        type: string
        description: Optional. If both where and where_sql are set, both will be applied with an AND between them.
      priority:
        type: integer
        format: int32
      filter:
        $ref: '#/definitions/v1MetricsViewFilter'
        title: Deprecated. should be removed once UI is moved to use new filters
  v1MetricsViewTotalsResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
        title: Not optional, not null
      data:
        type: object
        title: Not optional, not null
  v1MetricsViewV2:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1MetricsViewSpec'
      state:
        $ref: '#/definitions/v1MetricsViewState'
  v1Migration:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1MigrationSpec'
      state:
        $ref: '#/definitions/v1MigrationState'
  v1MigrationSpec:
    type: object
    properties:
      connector:
        type: string
      sql:
        type: string
      version:
        type: integer
        format: int64
  v1MigrationState:
    type: object
    properties:
      version:
        type: integer
        format: int64
  v1ModelPartition:
    type: object
    properties:
      key:
        type: string
      data:
        type: object
      watermark:
        type: string
        format: date-time
      executedOn:
        type: string
        format: date-time
      error:
        type: string
      elapsedMs:
        type: integer
        format: int64
  v1ModelSpec:
    type: object
    properties:
      refreshSchedule:
        $ref: '#/definitions/v1Schedule'
      timeoutSeconds:
        type: integer
        format: int64
      incremental:
        type: boolean
      incrementalStateResolver:
        type: string
      incrementalStateResolverProperties:
        type: object
      partitionsResolver:
        type: string
      partitionsResolverProperties:
        type: object
      partitionsWatermarkField:
        type: string
      partitionsConcurrencyLimit:
        type: integer
        format: int64
      inputConnector:
        type: string
      inputProperties:
        type: object
      stageConnector:
        type: string
        description: stage_connector is optional.
      stageProperties:
        type: object
      outputConnector:
        type: string
      outputProperties:
        type: object
      trigger:
        type: boolean
      triggerFull:
        type: boolean
  v1ModelState:
    type: object
    properties:
      executorConnector:
        type: string
        description: executor_connector is the ModelExecutor that produced the model's result.
      resultConnector:
        type: string
        description: result_connector is the connector where the model's result is stored.
      resultProperties:
        type: object
        description: result_properties are returned by the executor and contains metadata about the result.
      resultTable:
        type: string
        description: result_table contains the model's result table for SQL models. It is a convenience field that can also be derived from result_properties.
      specHash:
        type: string
        description: spec_hash is a hash of those parts of the spec that affect the model's result.
      refsHash:
        type: string
        description: refs_hash is a hash of the model's refs current state. It is used to determine if the model's refs have changed.
      refreshedOn:
        type: string
        format: date-time
        description: refreshed_on is the time the model was last executed.
      incrementalState:
        type: object
        description: incremental_state contains the result of the most recent invocation of the model's incremental state resolver.
      incrementalStateSchema:
        $ref: '#/definitions/v1StructType'
        description: incremental_state_schema contains a schema for the data in incremental_state.
      partitionsModelId:
        type: string
        description: partitions_model_id is a randomly generated ID used to store the model's partitions in the CatalogStore.
      partitionsHaveErrors:
        type: boolean
        description: partitions_have_errors is true if one or more partitions failed to execute.
  v1ModelV2:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ModelSpec'
      state:
        $ref: '#/definitions/v1ModelState'
  v1Notifier:
    type: object
    properties:
      connector:
        type: string
      properties:
        type: object
  v1NumericHistogramBins:
    type: object
    properties:
      bins:
        type: array
        items:
          type: object
          $ref: '#/definitions/NumericHistogramBinsBin'
    title: All fields are not null
  v1NumericOutliers:
    type: object
    properties:
      outliers:
        type: array
        items:
          type: object
          $ref: '#/definitions/NumericOutliersOutlier'
    title: All fields are not null
  v1NumericStatistics:
    type: object
    properties:
      min:
        type: number
        format: double
      max:
        type: number
        format: double
      mean:
        type: number
        format: double
      q25:
        type: number
        format: double
      q50:
        type: number
        format: double
      q75:
        type: number
        format: double
      sd:
        type: number
        format: double
    title: All fields are not null
  v1NumericSummary:
    type: object
    properties:
      numericHistogramBins:
        $ref: '#/definitions/v1NumericHistogramBins'
      numericStatistics:
        $ref: '#/definitions/v1NumericStatistics'
      numericOutliers:
        $ref: '#/definitions/v1NumericOutliers'
  v1OLAPGetTableResponse:
    type: object
    properties:
      schema:
        $ref: '#/definitions/v1StructType'
      unsupportedColumns:
        type: object
        additionalProperties:
          type: string
        title: unsupported_columns are columns having datatypes which are not supported by Rill
      view:
        type: boolean
  v1OLAPListTablesResponse:
    type: object
    properties:
      tables:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TableInfo'
  v1Operation:
    type: string
    enum:
      - OPERATION_UNSPECIFIED
      - OPERATION_EQ
      - OPERATION_NEQ
      - OPERATION_LT
      - OPERATION_LTE
      - OPERATION_GT
      - OPERATION_GTE
      - OPERATION_OR
      - OPERATION_AND
      - OPERATION_IN
      - OPERATION_NIN
      - OPERATION_LIKE
      - OPERATION_NLIKE
    default: OPERATION_UNSPECIFIED
  v1ParseError:
    type: object
    properties:
      message:
        type: string
      filePath:
        type: string
      startLocation:
        $ref: '#/definitions/v1CharLocation'
      external:
        type: boolean
  v1PingResponse:
    type: object
    properties:
      version:
        type: string
        title: Runtime version
      time:
        type: string
        format: date-time
        title: Runtime server time
    title: Response message for RuntimeService.Ping
  v1ProfileColumn:
    type: object
    properties:
      name:
        type: string
        title: Not optional, not null
      type:
        type: string
        title: Not optional, not null
      largestStringLength:
        type: integer
        format: int32
        title: Unused
  v1ProjectParser:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ProjectParserSpec'
      state:
        $ref: '#/definitions/v1ProjectParserState'
  v1ProjectParserSpec:
    type: object
  v1ProjectParserState:
    type: object
    properties:
      parseErrors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ParseError'
      currentCommitSha:
        type: string
      currentCommitOn:
        type: string
        format: date-time
      watching:
        type: boolean
  v1PullTrigger:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1PullTriggerSpec'
      state:
        $ref: '#/definitions/v1PullTriggerState'
    description: 'DEPRECATED (2024-08-28): Use a RefreshTrigger that targets the project parser instead.'
  v1PullTriggerSpec:
    type: object
  v1PullTriggerState:
    type: object
  v1PutFileResponse:
    type: object
    properties:
      filePath:
        type: string
        title: 'TODO: Redundant, should be removed (but frontend currently uses it)'
    title: Response message for RuntimeService.PutFile
  v1Query:
    type: object
    properties:
      metricsViewAggregationRequest:
        $ref: '#/definitions/v1MetricsViewAggregationRequest'
      metricsViewToplistRequest:
        $ref: '#/definitions/v1MetricsViewToplistRequest'
      metricsViewComparisonRequest:
        $ref: '#/definitions/v1MetricsViewComparisonRequest'
      metricsViewTimeSeriesRequest:
        $ref: '#/definitions/v1MetricsViewTimeSeriesRequest'
      metricsViewTotalsRequest:
        $ref: '#/definitions/v1MetricsViewTotalsRequest'
      metricsViewRowsRequest:
        $ref: '#/definitions/v1MetricsViewRowsRequest'
      columnRollupIntervalRequest:
        $ref: '#/definitions/v1ColumnRollupIntervalRequest'
      columnTopKRequest:
        $ref: '#/definitions/v1ColumnTopKRequest'
      columnNullCountRequest:
        $ref: '#/definitions/v1ColumnNullCountRequest'
      columnDescriptiveStatisticsRequest:
        $ref: '#/definitions/v1ColumnDescriptiveStatisticsRequest'
      columnTimeGrainRequest:
        $ref: '#/definitions/v1ColumnTimeGrainRequest'
      columnNumericHistogramRequest:
        $ref: '#/definitions/v1ColumnNumericHistogramRequest'
      columnRugHistogramRequest:
        $ref: '#/definitions/v1ColumnRugHistogramRequest'
      columnTimeRangeRequest:
        $ref: '#/definitions/v1ColumnTimeRangeRequest'
      columnCardinalityRequest:
        $ref: '#/definitions/v1ColumnCardinalityRequest'
      columnTimeSeriesRequest:
        $ref: '#/definitions/v1ColumnTimeSeriesRequest'
      tableCardinalityRequest:
        $ref: '#/definitions/v1TableCardinalityRequest'
      tableColumnsRequest:
        $ref: '#/definitions/v1TableColumnsRequest'
      tableRowsRequest:
        $ref: '#/definitions/v1TableRowsRequest'
  v1QueryBatchResponse:
    type: object
    properties:
      index:
        type: integer
        format: int64
      result:
        $ref: '#/definitions/v1QueryResult'
      error:
        type: string
  v1QueryResolverResponse:
    type: object
    properties:
      schema:
        $ref: '#/definitions/v1StructType'
      data:
        type: array
        items:
          type: object
  v1QueryResponse:
    type: object
    properties:
      meta:
        $ref: '#/definitions/v1StructType'
      data:
        type: array
        items:
          type: object
  v1QueryResult:
    type: object
    properties:
      metricsViewAggregationResponse:
        $ref: '#/definitions/v1MetricsViewAggregationResponse'
      metricsViewToplistResponse:
        $ref: '#/definitions/v1MetricsViewToplistResponse'
      metricsViewComparisonResponse:
        $ref: '#/definitions/v1MetricsViewComparisonResponse'
      metricsViewTimeSeriesResponse:
        $ref: '#/definitions/v1MetricsViewTimeSeriesResponse'
      metricsViewTotalsResponse:
        $ref: '#/definitions/v1MetricsViewTotalsResponse'
      metricsViewRowsResponse:
        $ref: '#/definitions/v1MetricsViewRowsResponse'
      columnRollupIntervalResponse:
        $ref: '#/definitions/v1ColumnRollupIntervalResponse'
      columnTopKResponse:
        $ref: '#/definitions/v1ColumnTopKResponse'
      columnNullCountResponse:
        $ref: '#/definitions/v1ColumnNullCountResponse'
      columnDescriptiveStatisticsResponse:
        $ref: '#/definitions/v1ColumnDescriptiveStatisticsResponse'
      columnTimeGrainResponse:
        $ref: '#/definitions/v1ColumnTimeGrainResponse'
      columnNumericHistogramResponse:
        $ref: '#/definitions/v1ColumnNumericHistogramResponse'
      columnRugHistogramResponse:
        $ref: '#/definitions/v1ColumnRugHistogramResponse'
      columnTimeRangeResponse:
        $ref: '#/definitions/v1ColumnTimeRangeResponse'
      columnCardinalityResponse:
        $ref: '#/definitions/v1ColumnCardinalityResponse'
      columnTimeSeriesResponse:
        $ref: '#/definitions/v1ColumnTimeSeriesResponse'
      tableCardinalityResponse:
        $ref: '#/definitions/v1TableCardinalityResponse'
      tableColumnsResponse:
        $ref: '#/definitions/v1TableColumnsResponse'
      tableRowsResponse:
        $ref: '#/definitions/v1TableRowsResponse'
  v1ReconcileStatus:
    type: string
    enum:
      - RECONCILE_STATUS_UNSPECIFIED
      - RECONCILE_STATUS_IDLE
      - RECONCILE_STATUS_PENDING
      - RECONCILE_STATUS_RUNNING
    default: RECONCILE_STATUS_UNSPECIFIED
  v1RefreshModelTrigger:
    type: object
    properties:
      model:
        type: string
        description: The model to refresh.
      full:
        type: boolean
        description: |-
          If true, the current table and state will be dropped before refreshing.
          For non-incremental models, this is equivalent to a normal refresh.
      partitions:
        type: array
        items:
          type: string
        description: Keys of specific partitions to refresh.
      allErroredPartitions:
        type: boolean
        description: If true, it will refresh all partitions that errored on their last execution.
  v1RefreshTrigger:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1RefreshTriggerSpec'
      state:
        $ref: '#/definitions/v1RefreshTriggerState'
  v1RefreshTriggerSpec:
    type: object
    properties:
      resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResourceName'
        description: |-
          Resources to refresh. The refreshable types are sources, models, alerts, reports, and the project parser.
          If a model is specified, a normal incremental refresh is triggered. Use the "models" field to trigger other kinds of model refreshes.
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1RefreshModelTrigger'
        description: Models to refresh. These are specified separately to enable more fine-grained configuration.
  v1RefreshTriggerState:
    type: object
  v1RenameFileResponse:
    type: object
    title: Response message for RuntimeService.RenameFile
  v1Report:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ReportSpec'
      state:
        $ref: '#/definitions/v1ReportState'
  v1ReportExecution:
    type: object
    properties:
      adhoc:
        type: boolean
      errorMessage:
        type: string
      reportTime:
        type: string
        format: date-time
      startedOn:
        type: string
        format: date-time
      finishedOn:
        type: string
        format: date-time
  v1ReportSpec:
    type: object
    properties:
      displayName:
        type: string
      trigger:
        type: boolean
      refreshSchedule:
        $ref: '#/definitions/v1Schedule'
      timeoutSeconds:
        type: integer
        format: int64
      queryName:
        type: string
      queryArgsJson:
        type: string
      exportLimit:
        type: string
        format: uint64
      exportFormat:
        $ref: '#/definitions/v1ExportFormat'
      notifiers:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Notifier'
      annotations:
        type: object
        additionalProperties:
          type: string
      watermarkInherit:
        type: boolean
        description: If true, will use the lowest watermark of its refs instead of the trigger time.
      intervalsIsoDuration:
        type: string
      intervalsLimit:
        type: integer
        format: int32
      intervalsCheckUnclosed:
        type: boolean
  v1ReportState:
    type: object
    properties:
      nextRunOn:
        type: string
        format: date-time
      currentExecution:
        $ref: '#/definitions/v1ReportExecution'
      executionHistory:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReportExecution'
      executionCount:
        type: integer
        format: int64
  v1ResolveCanvasResponse:
    type: object
    properties:
      canvas:
        $ref: '#/definitions/v1Resource'
        description: The canvas resource.
      resolvedComponents:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Resource'
        description: |-
          All the component resources referenced by the canvas.
          The resources state.valid_spec.renderer_properties will have templating resolved for the provided args.
          (Corresponds to calling the ResolveComponent API for each component referenced in the canvas spec).
      referencedMetricsViews:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Resource'
        description: All the metrics view resources referenced in the components' renderer_properties.metrics_view field.
  v1ResolveComponentResponse:
    type: object
    properties:
      rendererProperties:
        type: object
        title: Renderer properties with templating resolved for the provided args
  v1Resource:
    type: object
    properties:
      meta:
        $ref: '#/definitions/v1ResourceMeta'
      projectParser:
        $ref: '#/definitions/v1ProjectParser'
        description: Well-known types only, for now. If required, we can add support for a google.protobuf.Any later.
      source:
        $ref: '#/definitions/v1SourceV2'
      model:
        $ref: '#/definitions/v1ModelV2'
      metricsView:
        $ref: '#/definitions/v1MetricsViewV2'
      explore:
        $ref: '#/definitions/v1Explore'
      migration:
        $ref: '#/definitions/v1Migration'
      report:
        $ref: '#/definitions/v1Report'
      alert:
        $ref: '#/definitions/v1Alert'
      pullTrigger:
        $ref: '#/definitions/v1PullTrigger'
      refreshTrigger:
        $ref: '#/definitions/v1RefreshTrigger'
      bucketPlanner:
        $ref: '#/definitions/v1BucketPlanner'
      theme:
        $ref: '#/definitions/v1Theme'
      component:
        $ref: '#/definitions/v1Component'
      canvas:
        $ref: '#/definitions/v1Canvas'
      api:
        $ref: '#/definitions/v1API'
      connector:
        $ref: '#/definitions/v1ConnectorV2'
  v1ResourceEvent:
    type: string
    enum:
      - RESOURCE_EVENT_UNSPECIFIED
      - RESOURCE_EVENT_WRITE
      - RESOURCE_EVENT_DELETE
    default: RESOURCE_EVENT_UNSPECIFIED
  v1ResourceMeta:
    type: object
    properties:
      name:
        $ref: '#/definitions/v1ResourceName'
      refs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ResourceName'
      owner:
        $ref: '#/definitions/v1ResourceName'
      filePaths:
        type: array
        items:
          type: string
      hidden:
        type: boolean
      version:
        type: string
        format: int64
      specVersion:
        type: string
        format: int64
      stateVersion:
        type: string
        format: int64
      createdOn:
        type: string
        format: date-time
      specUpdatedOn:
        type: string
        format: date-time
      stateUpdatedOn:
        type: string
        format: date-time
      deletedOn:
        type: string
        format: date-time
      reconcileStatus:
        $ref: '#/definitions/v1ReconcileStatus'
      reconcileError:
        type: string
      reconcileOn:
        type: string
        format: date-time
      renamedFrom:
        $ref: '#/definitions/v1ResourceName'
  v1ResourceName:
    type: object
    properties:
      kind:
        type: string
      name:
        type: string
  v1S3GetBucketMetadataResponse:
    type: object
    properties:
      region:
        type: string
  v1S3GetCredentialsInfoResponse:
    type: object
    properties:
      exist:
        type: boolean
      provider:
        type: string
  v1S3ListBucketsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      buckets:
        type: array
        items:
          type: string
  v1S3ListObjectsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1S3Object'
  v1S3Object:
    type: object
    properties:
      name:
        type: string
      modifiedOn:
        type: string
        format: date-time
      size:
        type: string
        format: int64
      isDir:
        type: boolean
  v1Schedule:
    type: object
    properties:
      refUpdate:
        type: boolean
      disable:
        type: boolean
      cron:
        type: string
      tickerSeconds:
        type: integer
        format: int64
      timeZone:
        type: string
  v1SecurityRule:
    type: object
    properties:
      access:
        $ref: '#/definitions/v1SecurityRuleAccess'
      fieldAccess:
        $ref: '#/definitions/v1SecurityRuleFieldAccess'
      rowFilter:
        $ref: '#/definitions/v1SecurityRuleRowFilter'
  v1SecurityRuleAccess:
    type: object
    properties:
      condition:
        type: string
      allow:
        type: boolean
  v1SecurityRuleFieldAccess:
    type: object
    properties:
      condition:
        type: string
      allow:
        type: boolean
      fields:
        type: array
        items:
          type: string
      allFields:
        type: boolean
  v1SecurityRuleRowFilter:
    type: object
    properties:
      condition:
        type: string
      sql:
        type: string
        title: Raw SQL expression to apply to the underlying table
      expression:
        $ref: '#/definitions/v1Expression'
        title: Regular query expression referencing dimension names
  v1SourceSpec:
    type: object
    properties:
      sourceConnector:
        type: string
      sinkConnector:
        type: string
      properties:
        type: object
      refreshSchedule:
        $ref: '#/definitions/v1Schedule'
      timeoutSeconds:
        type: integer
        format: int64
      stageChanges:
        type: boolean
        title: Fields not derived from code files
      streamIngestion:
        type: boolean
      trigger:
        type: boolean
  v1SourceState:
    type: object
    properties:
      connector:
        type: string
      table:
        type: string
      specHash:
        type: string
      refreshedOn:
        type: string
        format: date-time
  v1SourceV2:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1SourceSpec'
      state:
        $ref: '#/definitions/v1SourceState'
  v1StringListValue:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
  v1StructType:
    type: object
    properties:
      fields:
        type: array
        items:
          type: object
          $ref: '#/definitions/StructTypeField'
    title: StructType is a type composed of ordered, named and typed sub-fields
  v1Subquery:
    type: object
    properties:
      dimension:
        type: string
      measures:
        type: array
        items:
          type: string
      where:
        $ref: '#/definitions/v1Expression'
      having:
        $ref: '#/definitions/v1Expression'
  v1TableCardinalityRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
        title: Required
      priority:
        type: integer
        format: int32
  v1TableCardinalityResponse:
    type: object
    properties:
      cardinality:
        type: string
        format: int64
        title: Not optional, not null
  v1TableColumnsRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
      priority:
        type: integer
        format: int32
  v1TableColumnsResponse:
    type: object
    properties:
      profileColumns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ProfileColumn'
      unsupportedColumns:
        type: object
        additionalProperties:
          type: string
  v1TableInfo:
    type: object
    properties:
      database:
        type: string
      databaseSchema:
        type: string
      isDefaultDatabase:
        type: boolean
      isDefaultDatabaseSchema:
        type: boolean
      name:
        type: string
      hasUnsupportedDataTypes:
        type: boolean
        title: has_unsupported_data_types indicates if the underlying table has any column with an unsupported OLAP engine datatype
  v1TableRowsRequest:
    type: object
    properties:
      instanceId:
        type: string
      connector:
        type: string
      database:
        type: string
      databaseSchema:
        type: string
      tableName:
        type: string
      limit:
        type: integer
        format: int32
      priority:
        type: integer
        format: int32
  v1TableRowsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
  v1Theme:
    type: object
    properties:
      spec:
        $ref: '#/definitions/v1ThemeSpec'
      state:
        $ref: '#/definitions/v1ThemeState'
  v1ThemeSpec:
    type: object
    properties:
      primaryColor:
        $ref: '#/definitions/v1Color'
      secondaryColor:
        $ref: '#/definitions/v1Color'
      primaryColorRaw:
        type: string
      secondaryColorRaw:
        type: string
  v1ThemeState:
    type: object
  v1TimeGrain:
    type: string
    enum:
      - TIME_GRAIN_UNSPECIFIED
      - TIME_GRAIN_MILLISECOND
      - TIME_GRAIN_SECOND
      - TIME_GRAIN_MINUTE
      - TIME_GRAIN_HOUR
      - TIME_GRAIN_DAY
      - TIME_GRAIN_WEEK
      - TIME_GRAIN_MONTH
      - TIME_GRAIN_QUARTER
      - TIME_GRAIN_YEAR
    default: TIME_GRAIN_UNSPECIFIED
  v1TimeRange:
    type: object
    properties:
      start:
        type: string
        format: date-time
        title: Optional. Defaults to min
      end:
        type: string
        format: date-time
        title: Optional. Defaults to max
      isoDuration:
        type: string
        title: Optional, ie PT1M
      isoOffset:
        type: string
        title: Optional, ie PT1M
      roundToGrain:
        $ref: '#/definitions/v1TimeGrain'
      timeZone:
        type: string
        title: Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
      expression:
        type: string
        description: |-
          Optional. Rill format time range. Should only be used for alerts and reports.
          For dashboard call ResolveTimeRanges.
    title: 2 of the (start, end, iso_duration) should be set
  v1TimeRangeSummary:
    type: object
    properties:
      min:
        type: string
        format: date-time
        title: Not optional, not null
      max:
        type: string
        format: date-time
        title: Not optional, not null
      watermark:
        type: string
        format: date-time
        title: Not optional, not null
  v1TimeSeriesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
        title: Not optional, not null
      spark:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
        title: Not optional, not null, empty if 'pixels' is not specified
      sampleSize:
        type: integer
        format: int32
        title: Not optional, not null, unused
  v1TimeSeriesTimeRange:
    type: object
    properties:
      start:
        type: string
        format: date-time
        title: Optional. Defaults to min
      end:
        type: string
        format: date-time
        title: Optional. Defaults to max
      interval:
        $ref: '#/definitions/v1TimeGrain'
        title: Optional. Defaults to the most human friendly for [min, max) range, ie 'minute' for hour range
    title: Either [start, end] or interval should be specified
  v1TimeSeriesValue:
    type: object
    properties:
      ts:
        type: string
        format: date-time
        title: Not optional, not null
      bin:
        type: number
        format: double
        title: 0-based. Can be NaN if timestamps are the same. (Used for spark data only.)
      records:
        type: object
        title: Not optional, not null
  v1TopK:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/TopKEntry'
        title: Not optional, not null
  v1UnpackEmptyResponse:
    type: object
    title: Response message for RuntimeService.UnpackEmpty
  v1UnpackExampleResponse:
    type: object
    title: Response message for RuntimeService.UnpackExample
  v1WatchFilesResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/v1FileEvent'
      path:
        type: string
      isDir:
        type: boolean
    title: Response message for RuntimeService.WatchFiles
  v1WatchLogsResponse:
    type: object
    properties:
      log:
        $ref: '#/definitions/v1Log'
  v1WatchResourcesResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/v1ResourceEvent'
      name:
        $ref: '#/definitions/v1ResourceName'
      resource:
        $ref: '#/definitions/v1Resource'
