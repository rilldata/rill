name: Claude Review (Manual Apply)

on:
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare:
    if: contains(github.event.comment.body, '/claude apply')
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.get_pr.outputs.pr_number }}
      head_ref: ${{ steps.get_pr.outputs.head_ref }}
      head_repo: ${{ steps.get_pr.outputs.head_repo }}
      is_fork: ${{ steps.get_pr.outputs.is_fork }}
    steps:
      - name: Get PR metadata
        id: get_pr
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });
            core.setOutput('pr_number', String(prNumber));
            core.setOutput('head_ref', pr.data.head.ref);
            core.setOutput('head_repo', pr.data.head.repo.full_name);
            const isFork = pr.data.head.repo.full_name !== `${context.repo.owner}/${context.repo.repo}`;
            core.setOutput('is_fork', String(isFork));

  apply_changes:
    needs: prepare
    if: needs.prepare.outputs.is_fork == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prepare.outputs.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install anthropic PyGithub

      - name: Generate & apply Claude patch
        id: apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ needs.prepare.outputs.pr_number }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CLAUDE_MODEL: ${{ vars.CLAUDE_MODEL }}
        run: |
          python .github/scripts/claude_apply.py

      - name: Commit & push (if changes)
        run: |
          git config user.name "claude-bot"
          git config user.email "actions@github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Apply fixes from inline comments via Claude"
            git push origin HEAD:${{ needs.prepare.outputs.head_ref }}
          fi

      - name: Post summary comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = Number('${{ needs.prepare.outputs.pr_number }}');
            const body = `✅ Claude processed feedback and attempted fixes.\n\n- Branch: \`${{ needs.prepare.outputs.head_ref }}\`\n- Outcome: ${{ steps.apply.outcome }}\n\nIf something looks off, you can push follow-ups or comment \`/claude apply\` again.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body,
            });

  # Friendly note on forks
  skip_forks:
    needs: prepare
    if: needs.prepare.outputs.is_fork == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number('${{ needs.prepare.outputs.pr_number }}'),
              body: '⚠️ `/claude apply` is disabled for forked PRs. Please switch to a same-repo branch or elevate permissions with care.',
            });
