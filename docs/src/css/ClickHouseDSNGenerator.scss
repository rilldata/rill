.container {
  border: 1px solid var(--ifm-color-emphasis-200);
  border-radius: 8px;
  padding: 1rem 1.25rem;
  margin: 1rem 0;
  background: var(--ifm-background-surface-color);
  box-shadow: var(--ifm-global-shadow-lw);
  transition: box-shadow 0.2s ease, border-color 0.2s ease, transform 0.06s ease;
}

.formSection h4 {
  margin-top: 0;
  margin-bottom: 0.75rem;
  color: var(--ifm-heading-color);
  font-size: 1rem;
  font-weight: 600;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 0.75rem 1rem;
  margin-bottom: 0.75rem;
}

.inputGroup {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.inputGroup label {
  font-weight: 600;
  color: var(--ifm-color-content);
  font-size: 0.85rem;
}

.inputGroup input[type="text"],
.inputGroup input[type="password"] {
  width: 100%;
  height: 2.25rem;
  padding: 0 0.625rem;
  border: 1px solid var(--ifm-color-emphasis-300);
  border-radius: 6px;
  font-family: var(--ifm-font-family-base);
  font-size: 0.9rem;
  background: var(--ifm-background-color);
  color: var(--ifm-color-content);
  transition: border-color 0.15s ease, box-shadow 0.15s ease, background-color 0.15s ease;
}

.inputGroup input[type="text"]::placeholder,
.inputGroup input[type="password"]::placeholder {
  color: var(--ifm-color-emphasis-600);
}

.inputGroup input[type="text"]:hover,
.inputGroup input[type="password"]:hover {
  border-color: var(--ifm-color-emphasis-400);
}

.inputGroup input[type="text"]:focus,
.inputGroup input[type="password"]:focus {
  outline: none;
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 2px var(--ifm-color-primary-lightest);
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin: 0.5rem 0 1rem;
}

.checkbox {
  display: flex;
  align-items: center;
  font-size: 0.9rem;
  color: var(--ifm-color-content);
  cursor: pointer;
}

.checkbox input[type="checkbox"],
.checkbox input[type="radio"] {
  margin-right: 0.5rem;
  cursor: pointer;
}

.outputHeaderLabel {
  font-weight: 600;
  color: var(--ifm-color-content);
  font-size: 0.85rem;
  margin-bottom: 0.25rem;
}

.segmentedControl {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.5rem;
  width: 100%;
}

.segmentOption {
  width: 100%;
}

.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.segmentLabel {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 2.25rem;
  border: 1px solid var(--ifm-color-emphasis-300);
  background: var(--ifm-background-color);
  color: var(--ifm-color-content);
  border-radius: 8px;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  transition: box-shadow 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
}

.segmentLabel:hover {
  border-color: var(--ifm-color-emphasis-400);
}

.selected {
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 2px var(--ifm-background-color), var(--ifm-global-shadow-lw);
}

.outputSection {
  border-top: 1px solid var(--ifm-color-emphasis-200);
  padding-top: 0.75rem;
}

.outputHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.outputHeader span {
  font-weight: 600;
  color: var(--ifm-color-content);
  font-size: 0.9rem;
}

.copyButton {
  padding: 0.375rem 0.75rem;
  background: var(--ifm-color-primary);
  color: var(--ifm-font-color-base-inverse);
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: 600;
  transition: background-color 0.2s ease, transform 0.05s ease;
}

.copyButton:hover:not(:disabled) {
  background: var(--ifm-color-primary-dark);
}

.copyButton:active:not(:disabled) {
  transform: translateY(1px);
}

.copyButton:disabled {
  background: var(--ifm-color-emphasis-300);
  color: var(--ifm-color-emphasis-700);
  cursor: not-allowed;
}

.copyButton.copied {
  background: var(--ifm-color-success);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .formGrid {
    grid-template-columns: 1fr;
  }
  
  .outputHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .copyButton {
    align-self: flex-end;
  }
} 