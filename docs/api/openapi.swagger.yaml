components:
    schemas:
        ListGithubUserReposResponseRepo:
            properties:
                defaultBranch:
                    type: string
                description:
                    type: string
                name:
                    type: string
                owner:
                    type: string
                remote:
                    type: string
            type: object
        protobufAny:
            additionalProperties: {}
            properties:
                '@type':
                    type: string
            type: object
        protobufNullValue:
            default: NULL_VALUE
            description: |-
                `NullValue` is a singleton enumeration to represent the null value for the
                `Value` type union.

                The JSON representation for `NullValue` is JSON `null`.

                 - NULL_VALUE: Null value.
            enum:
                - NULL_VALUE
            type: string
        rpcStatus:
            properties:
                code:
                    format: int32
                    type: integer
                details:
                    items:
                        $ref: '#/components/schemas/protobufAny'
                    type: array
                message:
                    type: string
            type: object
        runtimev1Operation:
            default: OPERATION_UNSPECIFIED
            enum:
                - OPERATION_UNSPECIFIED
                - OPERATION_EQ
                - OPERATION_NEQ
                - OPERATION_LT
                - OPERATION_LTE
                - OPERATION_GT
                - OPERATION_GTE
                - OPERATION_OR
                - OPERATION_AND
                - OPERATION_IN
                - OPERATION_NIN
                - OPERATION_LIKE
                - OPERATION_NLIKE
            type: string
        v1AddOrganizationMemberUserResponse:
            properties:
                pendingSignup:
                    type: boolean
            type: object
        v1AddOrganizationMemberUsergroupResponse:
            type: object
        v1AddProjectMemberUserResponse:
            properties:
                pendingSignup:
                    type: boolean
            type: object
        v1AddProjectMemberUsergroupResponse:
            type: object
        v1AddUsergroupMemberUserResponse:
            type: object
        v1AlertOptions:
            properties:
                displayName:
                    type: string
                emailRecipients:
                    items:
                        type: string
                    type: array
                intervalDuration:
                    type: string
                metricsViewName:
                    type: string
                queryArgsJson:
                    description: 'DEPRECATED: Use resolver and resolver_properties instead.'
                    type: string
                queryName:
                    description: 'DEPRECATED: Use resolver and resolver_properties instead.'
                    type: string
                refreshCron:
                    type: string
                refreshTimeZone:
                    type: string
                renotify:
                    type: boolean
                renotifyAfterSeconds:
                    format: int64
                    type: integer
                resolver:
                    type: string
                resolverProperties:
                    type: object
                slackChannels:
                    items:
                        type: string
                    type: array
                slackUsers:
                    items:
                        type: string
                    type: array
                slackWebhooks:
                    items:
                        type: string
                    type: array
                webOpenPath:
                    description: Annotation for the subpath of <UI host>/org/project to open for the report.
                    type: string
                webOpenState:
                    description: Annotation for the base64-encoded UI state to open for the report.
                    type: string
            type: object
        v1ApproveProjectAccessResponse:
            type: object
        v1BillingIssue:
            properties:
                createdOn:
                    format: date-time
                    type: string
                eventTime:
                    format: date-time
                    type: string
                level:
                    $ref: '#/components/schemas/v1BillingIssueLevel'
                metadata:
                    $ref: '#/components/schemas/v1BillingIssueMetadata'
                org:
                    type: string
                type:
                    $ref: '#/components/schemas/v1BillingIssueType'
            type: object
        v1BillingIssueLevel:
            default: BILLING_ISSUE_LEVEL_UNSPECIFIED
            enum:
                - BILLING_ISSUE_LEVEL_UNSPECIFIED
                - BILLING_ISSUE_LEVEL_WARNING
                - BILLING_ISSUE_LEVEL_ERROR
            type: string
        v1BillingIssueMetadata:
            properties:
                neverSubscribed:
                    $ref: '#/components/schemas/v1BillingIssueMetadataNeverSubscribed'
                noBillableAddress:
                    $ref: '#/components/schemas/v1BillingIssueMetadataNoBillableAddress'
                noPaymentMethod:
                    $ref: '#/components/schemas/v1BillingIssueMetadataNoPaymentMethod'
                onTrial:
                    $ref: '#/components/schemas/v1BillingIssueMetadataOnTrial'
                paymentFailed:
                    $ref: '#/components/schemas/v1BillingIssueMetadataPaymentFailed'
                subscriptionCancelled:
                    $ref: '#/components/schemas/v1BillingIssueMetadataSubscriptionCancelled'
                trialEnded:
                    $ref: '#/components/schemas/v1BillingIssueMetadataTrialEnded'
            type: object
        v1BillingIssueMetadataNeverSubscribed:
            type: object
        v1BillingIssueMetadataNoBillableAddress:
            type: object
        v1BillingIssueMetadataNoPaymentMethod:
            type: object
        v1BillingIssueMetadataOnTrial:
            properties:
                endDate:
                    format: date-time
                    type: string
                gracePeriodEndDate:
                    format: date-time
                    type: string
            type: object
        v1BillingIssueMetadataPaymentFailed:
            properties:
                invoices:
                    items:
                        $ref: '#/components/schemas/v1BillingIssueMetadataPaymentFailedMeta'
                    type: array
            type: object
        v1BillingIssueMetadataPaymentFailedMeta:
            properties:
                amountDue:
                    type: string
                currency:
                    type: string
                dueDate:
                    format: date-time
                    type: string
                failedOn:
                    format: date-time
                    type: string
                gracePeriodEndDate:
                    format: date-time
                    type: string
                invoiceId:
                    type: string
                invoiceNumber:
                    type: string
                invoiceUrl:
                    type: string
            type: object
        v1BillingIssueMetadataSubscriptionCancelled:
            properties:
                endDate:
                    format: date-time
                    type: string
            type: object
        v1BillingIssueMetadataTrialEnded:
            properties:
                endDate:
                    format: date-time
                    type: string
                gracePeriodEndDate:
                    format: date-time
                    type: string
            type: object
        v1BillingIssueType:
            default: BILLING_ISSUE_TYPE_UNSPECIFIED
            enum:
                - BILLING_ISSUE_TYPE_UNSPECIFIED
                - BILLING_ISSUE_TYPE_ON_TRIAL
                - BILLING_ISSUE_TYPE_TRIAL_ENDED
                - BILLING_ISSUE_TYPE_NO_PAYMENT_METHOD
                - BILLING_ISSUE_TYPE_NO_BILLABLE_ADDRESS
                - BILLING_ISSUE_TYPE_PAYMENT_FAILED
                - BILLING_ISSUE_TYPE_SUBSCRIPTION_CANCELLED
                - BILLING_ISSUE_TYPE_NEVER_SUBSCRIBED
            type: string
        v1BillingPlan:
            properties:
                default:
                    type: boolean
                description:
                    type: string
                displayName:
                    type: string
                id:
                    type: string
                name:
                    type: string
                planType:
                    $ref: '#/components/schemas/v1BillingPlanType'
                public:
                    title: TODO expose pricing information
                    type: boolean
                quotas:
                    $ref: '#/components/schemas/v1Quotas'
                trialPeriodDays:
                    format: int64
                    type: integer
            type: object
        v1BillingPlanType:
            default: BILLING_PLAN_TYPE_UNSPECIFIED
            enum:
                - BILLING_PLAN_TYPE_UNSPECIFIED
                - BILLING_PLAN_TYPE_TRIAL
                - BILLING_PLAN_TYPE_TEAM
                - BILLING_PLAN_TYPE_MANAGED
                - BILLING_PLAN_TYPE_ENTERPRISE
            type: string
        v1Bookmark:
            properties:
                createdOn:
                    format: date-time
                    type: string
                data:
                    format: byte
                    type: string
                default:
                    type: boolean
                description:
                    type: string
                displayName:
                    type: string
                id:
                    type: string
                projectId:
                    type: string
                resourceKind:
                    type: string
                resourceName:
                    type: string
                shared:
                    type: boolean
                updatedOn:
                    format: date-time
                    type: string
                urlSearch:
                    type: string
                userId:
                    type: string
            type: object
        v1CancelBillingSubscriptionResponse:
            type: object
        v1CompleteRequest:
            properties:
                messages:
                    items:
                        $ref: '#/components/schemas/v1CompletionMessage'
                    type: array
                outputJsonSchema:
                    title: Optional output JSON schema
                    type: string
                tools:
                    items:
                        $ref: '#/components/schemas/v1Tool'
                    title: Optional list of tools that the AI can use during completion
                    type: array
            type: object
        v1CompleteResponse:
            properties:
                message:
                    $ref: '#/components/schemas/v1CompletionMessage'
            type: object
        v1CompletionMessage:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/v1ContentBlock'
                    type: array
                data:
                    title: Deprecated in favor of content
                    type: string
                role:
                    type: string
            title: Completion message for AI API calls
            type: object
        v1Condition:
            properties:
                exprs:
                    items:
                        $ref: '#/components/schemas/v1Expression'
                    type: array
                op:
                    $ref: '#/components/schemas/runtimev1Operation'
            type: object
        v1ConnectProjectToGithubResponse:
            type: object
        v1ContentBlock:
            properties:
                text:
                    type: string
                toolCall:
                    $ref: '#/components/schemas/v1ToolCall'
                toolResult:
                    $ref: '#/components/schemas/v1ToolResult'
            title: Content block within a message
            type: object
        v1CreateAlertResponse:
            properties:
                name:
                    type: string
            type: object
        v1CreateAssetResponse:
            properties:
                assetId:
                    type: string
                signedUrl:
                    type: string
                signingHeaders:
                    additionalProperties:
                        type: string
                    type: object
            type: object
        v1CreateBookmarkRequest:
            properties:
                default:
                    type: boolean
                description:
                    type: string
                displayName:
                    type: string
                projectId:
                    type: string
                resourceKind:
                    type: string
                resourceName:
                    type: string
                shared:
                    type: boolean
                urlSearch:
                    type: string
            type: object
        v1CreateBookmarkResponse:
            properties:
                bookmark:
                    $ref: '#/components/schemas/v1Bookmark'
            type: object
        v1CreateDeploymentResponse:
            properties:
                deployment:
                    $ref: '#/components/schemas/v1Deployment'
            type: object
        v1CreateManagedGitRepoResponse:
            properties:
                defaultBranch:
                    type: string
                password:
                    type: string
                passwordExpiresAt:
                    format: date-time
                    type: string
                remote:
                    type: string
                username:
                    type: string
            type: object
        v1CreateOrganizationRequest:
            properties:
                description:
                    type: string
                displayName:
                    type: string
                name:
                    type: string
            type: object
        v1CreateOrganizationResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
            type: object
        v1CreateProjectResponse:
            properties:
                project:
                    $ref: '#/components/schemas/v1Project'
            type: object
        v1CreateProjectWhitelistedDomainResponse:
            type: object
        v1CreateReportResponse:
            properties:
                name:
                    type: string
            type: object
        v1CreateServiceResponse:
            properties:
                service:
                    $ref: '#/components/schemas/v1Service'
            type: object
        v1CreateUsergroupResponse:
            properties:
                usergroup:
                    $ref: '#/components/schemas/v1Usergroup'
            type: object
        v1CreateWhitelistedDomainResponse:
            type: object
        v1DeleteAlertResponse:
            type: object
        v1DeleteDeploymentResponse:
            properties:
                deploymentId:
                    type: string
            type: object
        v1DeleteOrganizationResponse:
            type: object
        v1DeleteProjectResponse:
            properties:
                id:
                    type: string
            type: object
        v1DeleteReportResponse:
            type: object
        v1DeleteServiceResponse:
            properties:
                service:
                    $ref: '#/components/schemas/v1Service'
            type: object
        v1DeleteUserResponse:
            type: object
        v1DeleteUsergroupResponse:
            type: object
        v1DenyProjectAccessResponse:
            type: object
        v1Deployment:
            properties:
                branch:
                    type: string
                createdOn:
                    format: date-time
                    type: string
                environment:
                    type: string
                id:
                    type: string
                ownerUserId:
                    type: string
                projectId:
                    type: string
                runtimeHost:
                    type: string
                runtimeInstanceId:
                    type: string
                status:
                    $ref: '#/components/schemas/v1DeploymentStatus'
                statusMessage:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1DeploymentStatus:
            default: DEPLOYMENT_STATUS_UNSPECIFIED
            enum:
                - DEPLOYMENT_STATUS_UNSPECIFIED
                - DEPLOYMENT_STATUS_PENDING
                - DEPLOYMENT_STATUS_OK
                - DEPLOYMENT_STATUS_ERROR
                - DEPLOYMENT_STATUS_STOPPED
            type: string
        v1EditAlertResponse:
            type: object
        v1EditReportResponse:
            type: object
        v1EditUsergroupResponse:
            type: object
        v1ExportFormat:
            default: EXPORT_FORMAT_UNSPECIFIED
            enum:
                - EXPORT_FORMAT_UNSPECIFIED
                - EXPORT_FORMAT_CSV
                - EXPORT_FORMAT_XLSX
                - EXPORT_FORMAT_PARQUET
            type: string
        v1Expression:
            properties:
                cond:
                    $ref: '#/components/schemas/v1Condition'
                ident:
                    type: string
                subquery:
                    $ref: '#/components/schemas/v1Subquery'
                val: {}
            type: object
        v1GenerateAlertYAMLResponse:
            properties:
                yaml:
                    type: string
            type: object
        v1GenerateReportYAMLResponse:
            properties:
                yaml:
                    type: string
            type: object
        v1GetAlertMetaResponse:
            properties:
                queryForAttributes:
                    type: object
                recipientUrls:
                    additionalProperties:
                        $ref: '#/components/schemas/v1GetAlertMetaResponseURLs'
                    type: object
            type: object
        v1GetAlertMetaResponseURLs:
            properties:
                editUrl:
                    type: string
                openUrl:
                    type: string
                unsubscribeUrl:
                    type: string
            type: object
        v1GetAlertYAMLResponse:
            properties:
                yaml:
                    type: string
            type: object
        v1GetBillingProjectCredentialsRequest:
            properties:
                org:
                    type: string
            type: object
        v1GetBillingProjectCredentialsResponse:
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                runtimeHost:
                    type: string
                ttlSeconds:
                    format: int64
                    type: integer
            type: object
        v1GetBillingSubscriptionResponse:
            properties:
                billingPortalUrl:
                    type: string
                organization:
                    $ref: '#/components/schemas/v1Organization'
                subscription:
                    $ref: '#/components/schemas/v1Subscription'
            type: object
        v1GetBookmarkResponse:
            properties:
                bookmark:
                    $ref: '#/components/schemas/v1Bookmark'
            type: object
        v1GetCloneCredentialsResponse:
            properties:
                archiveDownloadUrl:
                    title: either archive_download_url or git related details will be set
                    type: string
                gitManagedRepo:
                    type: boolean
                gitPassword:
                    type: string
                gitPasswordExpiresAt:
                    format: date-time
                    type: string
                gitProdBranch:
                    type: string
                gitRepoUrl:
                    type: string
                gitSubpath:
                    type: string
                gitUsername:
                    type: string
            type: object
        v1GetCurrentMagicAuthTokenResponse:
            properties:
                token:
                    $ref: '#/components/schemas/v1MagicAuthToken'
            type: object
        v1GetCurrentUserResponse:
            properties:
                preferences:
                    $ref: '#/components/schemas/v1UserPreferences'
                user:
                    $ref: '#/components/schemas/v1User'
            type: object
        v1GetDeploymentCredentialsResponse:
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                runtimeHost:
                    type: string
                ttlSeconds:
                    format: int64
                    type: integer
            type: object
        v1GetDeploymentResponse:
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                runtimeHost:
                    type: string
                ttlSeconds:
                    format: int64
                    type: integer
            type: object
        v1GetGithubRepoStatusResponse:
            properties:
                defaultBranch:
                    type: string
                grantAccessUrl:
                    type: string
                hasAccess:
                    type: boolean
            type: object
        v1GetGithubUserStatusResponse:
            properties:
                accessToken:
                    type: string
                account:
                    type: string
                grantAccessUrl:
                    type: string
                hasAccess:
                    type: boolean
                organizationInstallationPermissions:
                    additionalProperties:
                        $ref: '#/components/schemas/v1GithubPermission'
                    type: object
                orgs:
                    description: 'DEPRECATED: Use organization_installation_permissions instead.'
                    items:
                        type: string
                    type: array
                userInstallationPermission:
                    $ref: '#/components/schemas/v1GithubPermission'
            type: object
        v1GetIFrameResponse:
            properties:
                accessToken:
                    type: string
                iframeSrc:
                    type: string
                instanceId:
                    type: string
                runtimeHost:
                    type: string
                ttlSeconds:
                    format: int64
                    type: integer
            type: object
        v1GetOrganizationNameForDomainResponse:
            properties:
                name:
                    type: string
            type: object
        v1GetOrganizationResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
                permissions:
                    $ref: '#/components/schemas/v1OrganizationPermissions'
            type: object
        v1GetPaymentsPortalURLResponse:
            properties:
                url:
                    type: string
            type: object
        v1GetProjectAccessRequestResponse:
            properties:
                email:
                    type: string
            type: object
        v1GetProjectByIDResponse:
            properties:
                project:
                    $ref: '#/components/schemas/v1Project'
            type: object
        v1GetProjectResponse:
            properties:
                jwt:
                    type: string
                prodDeployment:
                    $ref: '#/components/schemas/v1Deployment'
                project:
                    $ref: '#/components/schemas/v1Project'
                projectPermissions:
                    $ref: '#/components/schemas/v1ProjectPermissions'
            type: object
        v1GetProjectVariablesResponse:
            properties:
                variables:
                    items:
                        $ref: '#/components/schemas/v1ProjectVariable'
                    type: array
                variablesMap:
                    additionalProperties:
                        type: string
                    description: |-
                        Deprecated: Populated for backwards compatibility.
                        (Renamed from "variables" to "variables_map").
                    type: object
            type: object
        v1GetRepoMetaResponse:
            properties:
                archiveCreatedOn:
                    description: The creation time of the archive returned from archive_download_url.
                    format: date-time
                    type: string
                archiveDownloadUrl:
                    description: Signed URL for downloading a tarball of project files. If this is set, the git_* fields will be empty (and vice versa).
                    type: string
                archiveId:
                    description: A stable ID for the archive returned from archive_download_url.
                    type: string
                expiresOn:
                    description: How long the returned config is valid for. Clients should call GetRepoMeta again after this time.
                    format: date-time
                    type: string
                gitBranch:
                    description: The branch to use for the deployment.
                    type: string
                gitEditBranch:
                    description: |-
                        A unique branch name generated for temporary/ephemeral use in edit mode where files may be mutated.
                        This enables checkpointing progress across hibernations and also more easily pinning to a specific commit of the base branch to delay conflict resolution.
                    type: string
                gitSubpath:
                    description: Optional subpath within the Git repository to use as the project root.
                    type: string
                gitUrl:
                    description: |-
                        Git remote for cloning (and maybe pushing) a Git repository.
                        The URL uses HTTPS with embedded username/password.
                    type: string
                lastUpdatedOn:
                    description: When the returned config was last modified. This covers all fields in the response except the ephemeral credentials embedded in git_url and archive_download_url.
                    format: date-time
                    type: string
            type: object
        v1GetReportMetaResponse:
            properties:
                recipientUrls:
                    additionalProperties:
                        $ref: '#/components/schemas/v1GetReportMetaResponseURLs'
                    type: object
            type: object
        v1GetReportMetaResponseURLs:
            properties:
                editUrl:
                    type: string
                exportUrl:
                    type: string
                openUrl:
                    type: string
                unsubscribeUrl:
                    type: string
            type: object
        v1GetServiceResponse:
            properties:
                projectMemberships:
                    items:
                        $ref: '#/components/schemas/v1ProjectMemberService'
                    title: All projects that the service is a member of
                    type: array
                service:
                    $ref: '#/components/schemas/v1OrganizationMemberService'
            type: object
        v1GetUserResponse:
            properties:
                user:
                    $ref: '#/components/schemas/v1User'
            type: object
        v1GetUsergroupResponse:
            properties:
                nextPageToken:
                    type: string
                usergroup:
                    $ref: '#/components/schemas/v1Usergroup'
            type: object
        v1GithubPermission:
            default: GITHUB_PERMISSION_UNSPECIFIED
            enum:
                - GITHUB_PERMISSION_UNSPECIFIED
                - GITHUB_PERMISSION_READ
                - GITHUB_PERMISSION_WRITE
            type: string
        v1HibernateProjectResponse:
            type: object
        v1IssueMagicAuthTokenResponse:
            properties:
                token:
                    type: string
                url:
                    type: string
            type: object
        v1IssueRepresentativeAuthTokenRequest:
            properties:
                email:
                    type: string
                ttlMinutes:
                    format: int64
                    type: string
            type: object
        v1IssueRepresentativeAuthTokenResponse:
            properties:
                token:
                    type: string
            type: object
        v1IssueServiceAuthTokenResponse:
            properties:
                token:
                    type: string
            type: object
        v1IssueUserAuthTokenResponse:
            properties:
                token:
                    description: Newly issued auth token.
                    type: string
            type: object
        v1LeaveOrganizationResponse:
            type: object
        v1ListBookmarksResponse:
            properties:
                bookmarks:
                    items:
                        $ref: '#/components/schemas/v1Bookmark'
                    type: array
            type: object
        v1ListDeploymentsResponse:
            properties:
                deployments:
                    items:
                        $ref: '#/components/schemas/v1Deployment'
                    type: array
            type: object
        v1ListGithubUserReposResponse:
            properties:
                repos:
                    items:
                        $ref: '#/components/schemas/ListGithubUserReposResponseRepo'
                    type: array
            type: object
        v1ListMagicAuthTokensResponse:
            properties:
                nextPageToken:
                    type: string
                tokens:
                    items:
                        $ref: '#/components/schemas/v1MagicAuthToken'
                    type: array
            type: object
        v1ListOrganizationBillingIssuesResponse:
            properties:
                issues:
                    items:
                        $ref: '#/components/schemas/v1BillingIssue'
                    type: array
            type: object
        v1ListOrganizationInvitesResponse:
            properties:
                invites:
                    items:
                        $ref: '#/components/schemas/v1OrganizationInvite'
                    type: array
                nextPageToken:
                    type: string
                totalCount:
                    format: int64
                    title: Total number of invites in the organization
                    type: integer
            type: object
        v1ListOrganizationMemberUsergroupsResponse:
            properties:
                members:
                    items:
                        $ref: '#/components/schemas/v1MemberUsergroup'
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1ListOrganizationMemberUsersResponse:
            properties:
                members:
                    items:
                        $ref: '#/components/schemas/v1OrganizationMemberUser'
                    type: array
                nextPageToken:
                    type: string
                totalCount:
                    format: int64
                    title: Total number of members in the organization
                    type: integer
            type: object
        v1ListOrganizationsResponse:
            properties:
                nextPageToken:
                    type: string
                organizations:
                    items:
                        $ref: '#/components/schemas/v1Organization'
                    type: array
            type: object
        v1ListProjectInvitesResponse:
            properties:
                invites:
                    items:
                        $ref: '#/components/schemas/v1ProjectInvite'
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1ListProjectMemberServicesResponse:
            properties:
                services:
                    items:
                        $ref: '#/components/schemas/v1ProjectMemberService'
                    type: array
            type: object
        v1ListProjectMemberUsergroupsResponse:
            properties:
                members:
                    items:
                        $ref: '#/components/schemas/v1MemberUsergroup'
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1ListProjectMemberUsersResponse:
            properties:
                members:
                    items:
                        $ref: '#/components/schemas/v1ProjectMemberUser'
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1ListProjectWhitelistedDomainsResponse:
            properties:
                domains:
                    items:
                        $ref: '#/components/schemas/v1WhitelistedDomain'
                    type: array
            type: object
        v1ListProjectsForFingerprintResponse:
            properties:
                projects:
                    items:
                        $ref: '#/components/schemas/v1Project'
                    type: array
                unauthorizedProject:
                    description: unauthorized_project is the name of a project that matches the git_remote+sub_path but the caller does not have access to.
                    type: string
            type: object
        v1ListProjectsForOrganizationAndUserResponse:
            properties:
                nextPageToken:
                    type: string
                projects:
                    items:
                        $ref: '#/components/schemas/v1Project'
                    type: array
            type: object
        v1ListProjectsForOrganizationResponse:
            properties:
                nextPageToken:
                    type: string
                projects:
                    items:
                        $ref: '#/components/schemas/v1Project'
                    type: array
            type: object
        v1ListProjectsForUserByNameResponse:
            properties:
                projects:
                    items:
                        $ref: '#/components/schemas/v1Project'
                    type: array
            type: object
        v1ListPublicBillingPlansResponse:
            properties:
                plans:
                    items:
                        $ref: '#/components/schemas/v1BillingPlan'
                    type: array
            type: object
        v1ListRolesResponse:
            properties:
                organizationRoles:
                    items:
                        $ref: '#/components/schemas/v1OrganizationRole'
                    type: array
                projectRoles:
                    items:
                        $ref: '#/components/schemas/v1ProjectRole'
                    type: array
            type: object
        v1ListServiceAuthTokensResponse:
            properties:
                tokens:
                    items:
                        $ref: '#/components/schemas/v1ServiceToken'
                    type: array
            type: object
        v1ListServicesResponse:
            properties:
                services:
                    items:
                        $ref: '#/components/schemas/v1OrganizationMemberService'
                    type: array
            type: object
        v1ListSuperusersResponse:
            properties:
                users:
                    items:
                        $ref: '#/components/schemas/v1User'
                    type: array
            type: object
        v1ListUserAuthTokensResponse:
            properties:
                nextPageToken:
                    description: Page token for the next page of results. If empty, there are no more pages.
                    type: string
                tokens:
                    description: List of auth tokens for the user.
                    items:
                        $ref: '#/components/schemas/v1UserAuthToken'
                    type: array
            type: object
        v1ListUsergroupMemberUsersResponse:
            properties:
                members:
                    items:
                        $ref: '#/components/schemas/v1UsergroupMemberUser'
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1ListUsergroupsForOrganizationAndUserResponse:
            properties:
                nextPageToken:
                    type: string
                usergroups:
                    items:
                        $ref: '#/components/schemas/v1Usergroup'
                    type: array
            type: object
        v1ListWhitelistedDomainsResponse:
            properties:
                domains:
                    items:
                        $ref: '#/components/schemas/v1WhitelistedDomain'
                    type: array
            type: object
        v1MagicAuthToken:
            properties:
                attributes:
                    type: object
                createdByUserEmail:
                    type: string
                createdByUserId:
                    type: string
                createdOn:
                    format: date-time
                    type: string
                displayName:
                    type: string
                expiresOn:
                    format: date-time
                    type: string
                fields:
                    items:
                        type: string
                    type: array
                filter:
                    $ref: '#/components/schemas/v1Expression'
                id:
                    type: string
                projectId:
                    type: string
                resourceName:
                    type: string
                resourceType:
                    type: string
                resources:
                    items:
                        $ref: '#/components/schemas/v1ResourceName'
                    type: array
                state:
                    type: string
                token:
                    type: string
                url:
                    type: string
                usedOn:
                    format: date-time
                    type: string
            type: object
        v1MemberUsergroup:
            properties:
                createdOn:
                    format: date-time
                    type: string
                groupId:
                    type: string
                groupManaged:
                    type: boolean
                groupName:
                    type: string
                roleName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
                usersCount:
                    format: int64
                    type: integer
            type: object
        v1Organization:
            properties:
                billingCustomerId:
                    type: string
                billingEmail:
                    type: string
                billingPlanDisplayName:
                    type: string
                billingPlanName:
                    type: string
                createdOn:
                    format: date-time
                    type: string
                customDomain:
                    type: string
                defaultProjectRoleId:
                    type: string
                description:
                    type: string
                displayName:
                    type: string
                faviconUrl:
                    type: string
                id:
                    type: string
                logoUrl:
                    type: string
                name:
                    title: Globally unique
                    type: string
                paymentCustomerId:
                    type: string
                quotas:
                    $ref: '#/components/schemas/v1OrganizationQuotas'
                thumbnailUrl:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1OrganizationInvite:
            properties:
                email:
                    type: string
                invitedBy:
                    type: string
                roleName:
                    type: string
            type: object
        v1OrganizationMemberService:
            properties:
                attributes:
                    type: object
                createdOn:
                    format: date-time
                    type: string
                hasProjectRoles:
                    description: True if the user has a project role in any project in the organization.
                    type: boolean
                id:
                    type: string
                name:
                    type: string
                orgId:
                    type: string
                orgName:
                    type: string
                roleName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1OrganizationMemberUser:
            properties:
                createdOn:
                    format: date-time
                    type: string
                projectsCount:
                    format: int64
                    type: integer
                roleName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
                userEmail:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userPhotoUrl:
                    type: string
                usergroupsCount:
                    format: int64
                    type: integer
            type: object
        v1OrganizationPermissions:
            properties:
                admin:
                    type: boolean
                createProjects:
                    type: boolean
                guest:
                    type: boolean
                manageOrg:
                    type: boolean
                manageOrgAdmins:
                    type: boolean
                manageOrgMembers:
                    type: boolean
                manageProjects:
                    type: boolean
                readOrg:
                    type: boolean
                readOrgMembers:
                    type: boolean
                readProjects:
                    type: boolean
            type: object
        v1OrganizationQuotas:
            properties:
                deployments:
                    format: int32
                    type: integer
                outstandingInvites:
                    format: int32
                    type: integer
                projects:
                    format: int32
                    type: integer
                slotsPerDeployment:
                    format: int32
                    type: integer
                slotsTotal:
                    format: int32
                    type: integer
                storageLimitBytesPerDeployment:
                    format: int64
                    type: string
            type: object
        v1OrganizationRole:
            properties:
                id:
                    type: string
                name:
                    type: string
                permissions:
                    $ref: '#/components/schemas/v1OrganizationPermissions'
            type: object
        v1PingResponse:
            properties:
                time:
                    format: date-time
                    type: string
                version:
                    type: string
            type: object
        v1Project:
            properties:
                annotations:
                    additionalProperties:
                        type: string
                    type: object
                archiveAssetId:
                    type: string
                createdByUserId:
                    type: string
                createdOn:
                    format: date-time
                    type: string
                description:
                    type: string
                devSlots:
                    format: int64
                    type: string
                directoryName:
                    type: string
                frontendUrl:
                    description: 'Note: Does NOT incorporate the parent org''s custom domain.'
                    type: string
                gitRemote:
                    type: string
                id:
                    type: string
                managedGitId:
                    description: managed_git_id is set if the project is connected to a rill-managed git repo.
                    type: string
                name:
                    title: Unique in organization
                    type: string
                orgId:
                    type: string
                orgName:
                    type: string
                prodBranch:
                    type: string
                prodDeploymentId:
                    type: string
                prodSlots:
                    format: int64
                    type: string
                prodTtlSeconds:
                    format: int64
                    type: string
                prodVersion:
                    type: string
                provisioner:
                    type: string
                public:
                    type: boolean
                subpath:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1ProjectInvite:
            properties:
                email:
                    type: string
                invitedBy:
                    type: string
                orgRoleName:
                    type: string
                roleName:
                    type: string
            type: object
        v1ProjectMemberService:
            properties:
                attributes:
                    type: object
                createdOn:
                    format: date-time
                    type: string
                id:
                    type: string
                name:
                    type: string
                orgId:
                    type: string
                orgName:
                    type: string
                orgRoleName:
                    type: string
                projectId:
                    type: string
                projectName:
                    type: string
                projectRoleName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1ProjectMemberUser:
            properties:
                createdOn:
                    format: date-time
                    type: string
                orgRoleName:
                    type: string
                roleName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
                userEmail:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userPhotoUrl:
                    type: string
            type: object
        v1ProjectPermissions:
            properties:
                admin:
                    type: boolean
                createAlerts:
                    type: boolean
                createBookmarks:
                    type: boolean
                createMagicAuthTokens:
                    type: boolean
                createReports:
                    type: boolean
                manageAlerts:
                    type: boolean
                manageBookmarks:
                    type: boolean
                manageDev:
                    type: boolean
                manageMagicAuthTokens:
                    type: boolean
                manageProd:
                    type: boolean
                manageProject:
                    type: boolean
                manageProjectAdmins:
                    type: boolean
                manageProjectMembers:
                    type: boolean
                manageProvisionerResources:
                    type: boolean
                manageReports:
                    type: boolean
                readDev:
                    type: boolean
                readDevStatus:
                    type: boolean
                readProd:
                    type: boolean
                readProdStatus:
                    type: boolean
                readProject:
                    type: boolean
                readProjectMembers:
                    type: boolean
                readProvisionerResources:
                    type: boolean
            type: object
        v1ProjectRole:
            properties:
                id:
                    type: string
                name:
                    type: string
                permissions:
                    $ref: '#/components/schemas/v1ProjectPermissions'
            type: object
        v1ProjectVariable:
            properties:
                createdOn:
                    description: Timestamp when the variable was created.
                    format: date-time
                    type: string
                environment:
                    description: |-
                        Environment the variable is set for.
                        If empty, the variable is shared for all environments.
                    type: string
                id:
                    description: Internal ID.
                    type: string
                name:
                    description: Variable name (case insensitive).
                    type: string
                updatedByUserId:
                    description: User ID that most recently updated the variable. May be empty.
                    type: string
                updatedOn:
                    description: Timestamp when the variable was last updated.
                    format: date-time
                    type: string
                value:
                    description: Variable value.
                    type: string
            type: object
        v1ProvisionResponse:
            properties:
                resource:
                    $ref: '#/components/schemas/v1ProvisionerResource'
            type: object
        v1ProvisionerResource:
            properties:
                args:
                    type: object
                config:
                    type: object
                deploymentId:
                    type: string
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
            type: object
        v1PullVirtualRepoResponse:
            properties:
                files:
                    description: List of virtual files ordered by update time, most recent last.
                    items:
                        $ref: '#/components/schemas/v1VirtualFile'
                    type: array
                nextPageToken:
                    description: Next page token for pagination.
                    type: string
            type: object
        v1Quotas:
            properties:
                deployments:
                    type: string
                outstandingInvites:
                    type: string
                projects:
                    type: string
                slotsPerDeployment:
                    type: string
                slotsTotal:
                    type: string
                storageLimitBytesPerDeployment:
                    type: string
            type: object
        v1RecordEventsRequest:
            properties:
                events:
                    items:
                        type: object
                    type: array
            type: object
        v1RecordEventsResponse:
            type: object
        v1RedeployProjectResponse:
            type: object
        v1RemoveBookmarkResponse:
            type: object
        v1RemoveOrganizationMemberServiceResponse:
            type: object
        v1RemoveOrganizationMemberUserResponse:
            type: object
        v1RemoveOrganizationMemberUsergroupResponse:
            type: object
        v1RemoveProjectMemberServiceResponse:
            type: object
        v1RemoveProjectMemberUserResponse:
            type: object
        v1RemoveProjectMemberUsergroupResponse:
            type: object
        v1RemoveProjectWhitelistedDomainResponse:
            type: object
        v1RemoveUsergroupMemberUserResponse:
            type: object
        v1RemoveWhitelistedDomainResponse:
            type: object
        v1RenameUsergroupResponse:
            type: object
        v1RenewBillingSubscriptionResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
                subscription:
                    $ref: '#/components/schemas/v1Subscription'
            type: object
        v1ReportOptions:
            properties:
                canvas:
                    type: string
                displayName:
                    type: string
                emailRecipients:
                    items:
                        type: string
                    type: array
                explore:
                    title: either canvas or explore should be set
                    type: string
                exportFormat:
                    $ref: '#/components/schemas/v1ExportFormat'
                exportIncludeHeader:
                    type: boolean
                exportLimit:
                    format: uint64
                    type: string
                filter:
                    $ref: '#/components/schemas/v1Expression'
                intervalDuration:
                    type: string
                queryArgsJson:
                    type: string
                queryName:
                    type: string
                refreshCron:
                    type: string
                refreshTimeZone:
                    type: string
                slackChannels:
                    items:
                        type: string
                    type: array
                slackUsers:
                    items:
                        type: string
                    type: array
                slackWebhooks:
                    items:
                        type: string
                    type: array
                webOpenMode:
                    title: |-
                        web_open_mode is used to determine how to create or disable open link for the report
                        - send "recipient" for older reports (old behaviour)
                        - send "creator" for reports that should be opened with creators permissions
                        - send "none" for reports that should not be opened or older reports which do not have any web_open_path
                        - send "filtered" for reports that should be opened with creators permissions but with locked filters
                    type: string
                webOpenPath:
                    description: Annotation for the subpath of <UI host>/org/project to open for the report.
                    type: string
                webOpenState:
                    description: Annotation for the base64-encoded UI state to open for the report.
                    type: string
            type: object
        v1RequestProjectAccessResponse:
            type: object
        v1ResourceName:
            properties:
                name:
                    type: string
                type:
                    type: string
            type: object
        v1RevokeCurrentAuthTokenResponse:
            type: object
        v1RevokeMagicAuthTokenResponse:
            type: object
        v1RevokeRepresentativeAuthTokensResponse:
            type: object
        v1RevokeServiceAuthTokenResponse:
            type: object
        v1RevokeUserAuthTokenResponse:
            type: object
        v1SearchProjectNamesResponse:
            properties:
                names:
                    items:
                        type: string
                    type: array
                nextPageToken:
                    type: string
            type: object
        v1SearchProjectUsersResponse:
            properties:
                nextPageToken:
                    type: string
                users:
                    items:
                        $ref: '#/components/schemas/v1User'
                    type: array
            type: object
        v1SearchUsersResponse:
            properties:
                nextPageToken:
                    type: string
                users:
                    items:
                        $ref: '#/components/schemas/v1User'
                    type: array
            type: object
        v1Service:
            properties:
                attributes:
                    type: object
                createdOn:
                    format: date-time
                    type: string
                id:
                    type: string
                name:
                    type: string
                orgId:
                    type: string
                orgName:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1ServiceToken:
            properties:
                createdOn:
                    format: date-time
                    type: string
                expiresOn:
                    format: date-time
                    type: string
                id:
                    type: string
                prefix:
                    type: string
            type: object
        v1SetOrganizationMemberServiceRoleResponse:
            type: object
        v1SetOrganizationMemberUserRoleResponse:
            type: object
        v1SetOrganizationMemberUsergroupRoleResponse:
            type: object
        v1SetProjectMemberServiceRoleResponse:
            type: object
        v1SetProjectMemberUserRoleResponse:
            type: object
        v1SetProjectMemberUsergroupRoleResponse:
            type: object
        v1SetSuperuserRequest:
            properties:
                email:
                    type: string
                superuser:
                    type: boolean
            type: object
        v1SetSuperuserResponse:
            type: object
        v1StartDeploymentResponse:
            properties:
                deployment:
                    $ref: '#/components/schemas/v1Deployment'
            type: object
        v1StopDeploymentResponse:
            properties:
                deploymentId:
                    type: string
            type: object
        v1Subquery:
            properties:
                dimension:
                    type: string
                having:
                    $ref: '#/components/schemas/v1Expression'
                measures:
                    items:
                        type: string
                    type: array
                where:
                    $ref: '#/components/schemas/v1Expression'
            type: object
        v1Subscription:
            properties:
                currentBillingCycleEndDate:
                    format: date-time
                    type: string
                currentBillingCycleStartDate:
                    format: date-time
                    type: string
                endDate:
                    format: date-time
                    type: string
                id:
                    type: string
                plan:
                    $ref: '#/components/schemas/v1BillingPlan'
                startDate:
                    format: date-time
                    type: string
                trialEndDate:
                    format: date-time
                    type: string
            type: object
        v1SudoDeleteOrganizationBillingIssueResponse:
            type: object
        v1SudoExtendTrialRequest:
            properties:
                days:
                    format: int32
                    type: integer
                org:
                    type: string
            type: object
        v1SudoExtendTrialResponse:
            properties:
                trialEnd:
                    format: date-time
                    type: string
            type: object
        v1SudoGetResourceResponse:
            properties:
                deployment:
                    $ref: '#/components/schemas/v1Deployment'
                instance:
                    $ref: '#/components/schemas/v1Deployment'
                org:
                    $ref: '#/components/schemas/v1Organization'
                project:
                    $ref: '#/components/schemas/v1Project'
                user:
                    $ref: '#/components/schemas/v1User'
            type: object
        v1SudoIssueRuntimeManagerTokenRequest:
            properties:
                host:
                    type: string
            type: object
        v1SudoIssueRuntimeManagerTokenResponse:
            properties:
                token:
                    type: string
            type: object
        v1SudoTriggerBillingRepairRequest:
            type: object
        v1SudoTriggerBillingRepairResponse:
            type: object
        v1SudoUpdateAnnotationsRequest:
            properties:
                annotations:
                    additionalProperties:
                        type: string
                    type: object
                org:
                    type: string
                project:
                    type: string
            type: object
        v1SudoUpdateAnnotationsResponse:
            properties:
                project:
                    $ref: '#/components/schemas/v1Project'
            type: object
        v1SudoUpdateOrganizationBillingCustomerRequest:
            properties:
                billingCustomerId:
                    type: string
                org:
                    type: string
                paymentCustomerId:
                    type: string
            type: object
        v1SudoUpdateOrganizationBillingCustomerResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
                subscription:
                    $ref: '#/components/schemas/v1Subscription'
            type: object
        v1SudoUpdateOrganizationCustomDomainRequest:
            properties:
                customDomain:
                    type: string
                name:
                    type: string
            type: object
        v1SudoUpdateOrganizationCustomDomainResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
            type: object
        v1SudoUpdateOrganizationQuotasRequest:
            properties:
                deployments:
                    format: int32
                    type: integer
                org:
                    type: string
                outstandingInvites:
                    format: int32
                    type: integer
                projects:
                    format: int32
                    type: integer
                slotsPerDeployment:
                    format: int32
                    type: integer
                slotsTotal:
                    format: int32
                    type: integer
                storageLimitBytesPerDeployment:
                    format: int64
                    type: string
            type: object
        v1SudoUpdateOrganizationQuotasResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
            type: object
        v1SudoUpdateUserQuotasRequest:
            properties:
                email:
                    type: string
                singleuserOrgs:
                    format: int32
                    type: integer
                trialOrgs:
                    format: int32
                    type: integer
            type: object
        v1SudoUpdateUserQuotasResponse:
            properties:
                user:
                    $ref: '#/components/schemas/v1User'
            type: object
        v1Tool:
            properties:
                description:
                    title: A human-readable description of the tool
                    type: string
                inputSchema:
                    title: JSON Schema defining the expected parameters for the tool (as JSON string)
                    type: string
                name:
                    title: The name of the tool
                    type: string
            title: Tool represents a tool definition for AI usage
            type: object
        v1ToolCall:
            properties:
                id:
                    type: string
                input:
                    type: object
                name:
                    type: string
            title: Tool call specification
            type: object
        v1ToolResult:
            properties:
                content:
                    type: string
                id:
                    type: string
                isError:
                    type: boolean
            title: Tool execution result
            type: object
        v1TriggerReconcileResponse:
            type: object
        v1TriggerRedeployRequest:
            properties:
                deploymentId:
                    type: string
                org:
                    title: |-
                        It's sufficient to pass org/project name OR deployment_id.
                        (To enable rehydrating hibernated projects.)
                    type: string
                project:
                    type: string
            type: object
        v1TriggerRedeployResponse:
            type: object
        v1TriggerRefreshSourcesResponse:
            type: object
        v1TriggerReportResponse:
            type: object
        v1UnsubscribeAlertResponse:
            type: object
        v1UnsubscribeReportResponse:
            type: object
        v1UpdateBillingSubscriptionResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
                subscription:
                    $ref: '#/components/schemas/v1Subscription'
            type: object
        v1UpdateBookmarkRequest:
            properties:
                bookmarkId:
                    type: string
                default:
                    type: boolean
                description:
                    type: string
                displayName:
                    type: string
                shared:
                    type: boolean
                urlSearch:
                    type: string
            type: object
        v1UpdateBookmarkResponse:
            type: object
        v1UpdateOrganizationResponse:
            properties:
                organization:
                    $ref: '#/components/schemas/v1Organization'
            type: object
        v1UpdateProjectResponse:
            properties:
                project:
                    $ref: '#/components/schemas/v1Project'
            type: object
        v1UpdateProjectVariablesResponse:
            properties:
                variables:
                    description: Variables that were created or updated by the request.
                    items:
                        $ref: '#/components/schemas/v1ProjectVariable'
                    type: array
            type: object
        v1UpdateServiceResponse:
            properties:
                service:
                    $ref: '#/components/schemas/v1Service'
            type: object
        v1UpdateUserPreferencesRequest:
            properties:
                preferences:
                    $ref: '#/components/schemas/v1UserPreferences'
            type: object
        v1UpdateUserPreferencesResponse:
            properties:
                preferences:
                    $ref: '#/components/schemas/v1UserPreferences'
            type: object
        v1User:
            properties:
                createdOn:
                    format: date-time
                    type: string
                displayName:
                    type: string
                email:
                    type: string
                id:
                    type: string
                photoUrl:
                    type: string
                quotas:
                    $ref: '#/components/schemas/v1UserQuotas'
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1UserAuthToken:
            properties:
                authClientDisplayName:
                    type: string
                authClientId:
                    type: string
                createdOn:
                    format: date-time
                    type: string
                displayName:
                    type: string
                expiresOn:
                    format: date-time
                    type: string
                id:
                    type: string
                prefix:
                    type: string
                representingUserId:
                    type: string
                usedOn:
                    format: date-time
                    type: string
            type: object
        v1UserPreferences:
            properties:
                timeZone:
                    type: string
            type: object
        v1UserQuotas:
            properties:
                singleuserOrgs:
                    format: int32
                    type: integer
                trialOrgs:
                    format: int32
                    type: integer
            type: object
        v1Usergroup:
            properties:
                createdOn:
                    format: date-time
                    type: string
                groupDescription:
                    type: string
                groupId:
                    type: string
                groupName:
                    type: string
                managed:
                    type: boolean
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1UsergroupMemberUser:
            properties:
                createdOn:
                    format: date-time
                    type: string
                updatedOn:
                    format: date-time
                    type: string
                userEmail:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userPhotoUrl:
                    type: string
            type: object
        v1VirtualFile:
            properties:
                data:
                    format: byte
                    type: string
                deleted:
                    type: boolean
                path:
                    type: string
                updatedOn:
                    format: date-time
                    type: string
            type: object
        v1WhitelistedDomain:
            properties:
                domain:
                    type: string
                role:
                    type: string
            type: object
externalDocs:
    description: Rill API Documentation
    url: https://docs.rilldata.com
info:
    description: Rill Admin API enables programmatic management of Rill Cloud resources, including organizations, projects, and user access. It provides endpoints for creating, updating, and deleting these resources, as well as managing authentication and permissions.
    title: Rill Admin API
    version: v0.74.3
openapi: 3.0.3
paths:
    /v1/ai/complete:
        post:
            operationId: AIService_Complete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1CompleteRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CompleteResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: Complete sends the messages of a chat to the AI and asks it to generate a new message.
    /v1/billing/metrics-project-credentials:
        post:
            operationId: AdminService_GetBillingProjectCredentials
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1GetBillingProjectCredentialsRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetBillingProjectCredentialsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetBillingProjectCredentials returns credentials for the configured cloud metrics project filtered by request organization
    /v1/billing/plans:
        get:
            operationId: AdminService_ListPublicBillingPlans
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListPublicBillingPlansResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListPublicBillingPlans lists all public billing plans
    /v1/deployments/{deploymentId}:
        delete:
            operationId: AdminService_DeleteDeployment
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteDeploymentResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteDeployment deletes a deployment.
    /v1/deployments/{deploymentId}/credentials:
        post:
            operationId: AdminService_GetDeployment
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                accessTokenTtlSeconds:
                                    format: int64
                                    type: integer
                                attributes:
                                    type: object
                                userEmail:
                                    type: string
                                userId:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetDeploymentResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetDeployment returns runtime info and access token on behalf of a specific user, or alternatively for a raw set of JWT attributes
    /v1/deployments/{deploymentId}/provision:
        post:
            operationId: AdminService_Provision
            parameters:
                - description: |-
                    Deployment to provision a resource for.
                    If it's blank and the request is made with a deployment access token, the deployment is inferred from the token.
                  in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                args:
                                    description: Arguments for the provisioner call.
                                    type: object
                                name:
                                    description: |-
                                        Name of the resource to provision.
                                        It forms a unique key together with deployment and type, which is used to de-duplicate provision requests.
                                    type: string
                                type:
                                    description: Type of resource to provision.
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ProvisionResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                Provision provisions a new resource for a deployment.
                If an existing resource matches the request, it will be returned without provisioning a new resource.
    /v1/deployments/{deploymentId}/reconcile:
        post:
            operationId: AdminService_TriggerReconcile
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1TriggerReconcileResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                TriggerReconcile triggers reconcile for the project's prod deployment.
                DEPRECATED: Clients should call CreateTrigger directly on the deployed runtime instead.
    /v1/deployments/{deploymentId}/refresh:
        post:
            operationId: AdminService_TriggerRefreshSources
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                sources:
                                    items:
                                        type: string
                                    type: array
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1TriggerRefreshSourcesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                TriggerRefreshSources refresh the source for production deployment.
                DEPRECATED: Clients should call CreateTrigger directly on the deployed runtime instead.
    /v1/deployments/{deploymentId}/start:
        post:
            operationId: AdminService_StartDeployment
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1StartDeploymentResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: StartDeployment starts a deployment.
    /v1/deployments/{deploymentId}/stop:
        post:
            operationId: AdminService_StopDeployment
            parameters:
                - in: path
                  name: deploymentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1StopDeploymentResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: StopDeployment stops a deployment.
    /v1/github/repositories:
        get:
            operationId: AdminService_GetGithubRepoStatus
            parameters:
                - in: query
                  name: remote
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetGithubRepoStatusResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                GetGithubRepoRequest returns info about a Github repo based on the caller's installations.
                If the caller has not granted access to the repository, instructions for granting access are returned.
    /v1/github/user:
        get:
            operationId: AdminService_GetGithubUserStatus
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetGithubUserStatusResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                GetGithubUserStatus returns info about a Github user account based on the caller's installations.
                If we don't have access to user's personal account tokens or it is expired, instructions for granting access are returned.
    /v1/github/user/repositories:
        get:
            operationId: AdminService_ListGithubUserRepos
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListGithubUserReposResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
    /v1/magic-tokens/{tokenId}:
        delete:
            operationId: AdminService_RevokeMagicAuthToken
            parameters:
                - in: path
                  name: tokenId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RevokeMagicAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RevokeMagicAuthToken revokes a magic auth token.
    /v1/magic-tokens/current:
        get:
            operationId: AdminService_GetCurrentMagicAuthToken
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetCurrentMagicAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetCurrentMagicAuthToken returns information about the current magic auth token.
    /v1/organization-for-domain/{domain}:
        get:
            operationId: AdminService_GetOrganizationNameForDomain
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetOrganizationNameForDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                GetOrganizationNameForDomain finds the org name for a custom domain.
                If the application detects it is running on a non-default domain, it can use this to find the org to present.
                It can be called without being authenticated.
    /v1/orgs:
        get:
            operationId: AdminService_ListOrganizations
            parameters:
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListOrganizationsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListOrganizations lists all the organizations currently managed by the admin
        post:
            operationId: AdminService_CreateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1CreateOrganizationRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateOrganization creates a new organization
    /v1/orgs/{org}:
        delete:
            operationId: AdminService_DeleteOrganization
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteOrganization deletes an organization
        get:
            operationId: AdminService_GetOrganization
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetOrganization returns information about a specific organization
        patch:
            operationId: AdminService_UpdateOrganization
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                billingEmail:
                                    type: string
                                defaultProjectRole:
                                    type: string
                                description:
                                    type: string
                                displayName:
                                    type: string
                                faviconAssetId:
                                    type: string
                                logoAssetId:
                                    type: string
                                newName:
                                    type: string
                                thumbnailAssetId:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateOrganization deletes an organizations
    /v1/orgs/{org}/billing/issues:
        get:
            operationId: AdminService_ListOrganizationBillingIssues
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListOrganizationBillingIssuesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListOrganizationBillingIssues lists all the billing issues for the organization
    /v1/orgs/{org}/billing/payments/portal-url:
        get:
            operationId: AdminService_GetPaymentsPortalURL
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: returnUrl
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetPaymentsPortalURLResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetPaymentsPortalURL returns the URL for the billing session to collect payment method
    /v1/orgs/{org}/billing/subscriptions:
        delete:
            operationId: AdminService_CancelBillingSubscription
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CancelBillingSubscriptionResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CancelBillingSubscription cancels the billing subscription for the organization
        get:
            operationId: AdminService_GetBillingSubscription
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetBillingSubscriptionResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetBillingSubscription lists the subscription for the organization
        patch:
            operationId: AdminService_UpdateBillingSubscription
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                planName:
                                    type: string
                                superuserForceAccess:
                                    type: boolean
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateBillingSubscriptionResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateBillingSubscription updates the billing plan for the organization
    /v1/orgs/{org}/billing/subscriptions/renew:
        post:
            operationId: AdminService_RenewBillingSubscription
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                planName:
                                    type: string
                                superuserForceAccess:
                                    type: boolean
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RenewBillingSubscriptionResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RenewBillingSubscription renews the billing plan for the organization once cancelled
    /v1/orgs/{org}/create-managed-git-repo:
        put:
            operationId: AdminService_CreateManagedGitRepo
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    description: "name of the repo to create. \nNote: The final name will be suffixed with a random string to ensure uniqueness."
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateManagedGitRepoResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateManagedGitRepo creates a new rill managed git repo for the organization.
    /v1/orgs/{org}/create_asset:
        post:
            operationId: AdminService_CreateAsset
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                estimatedSizeBytes:
                                    format: int64
                                    type: string
                                extension:
                                    title: Eg. ".tar.gz"
                                    type: string
                                name:
                                    title: Eg. "rilldata__project_name"
                                    type: string
                                public:
                                    type: boolean
                                type:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateAssetResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateAsset returns a one time signed URL using which any asset can be uploaded.
    /v1/orgs/{org}/invites:
        get:
            operationId: AdminService_ListOrganizationInvites
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListOrganizationInvitesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListOrganizationInvites lists all the org invites
    /v1/orgs/{org}/members:
        get:
            operationId: AdminService_ListOrganizationMemberUsers
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Optionally filter by role
                  in: query
                  name: role
                  schema:
                    type: string
                - description: Optionally include counts
                  in: query
                  name: includeCounts
                  schema:
                    type: boolean
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
                - description: Optional search pattern to filter users by email or display name
                  in: query
                  name: searchPattern
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListOrganizationMemberUsersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListOrganizationMemberUsers lists all the org members
        post:
            operationId: AdminService_AddOrganizationMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                role:
                                    type: string
                                superuserForceAccess:
                                    type: boolean
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1AddOrganizationMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: AddOrganizationMemberUser adds a user to the organization
    /v1/orgs/{org}/members/{email}:
        delete:
            operationId: AdminService_RemoveOrganizationMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveOrganizationMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveOrganizationMemberUser removes member from the organization
        put:
            operationId: AdminService_SetOrganizationMemberUserRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                                superuserForceAccess:
                                    type: boolean
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetOrganizationMemberUserRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetOrganizationMemberUserRole sets the role for the member
    /v1/orgs/{org}/members/current:
        delete:
            operationId: AdminService_LeaveOrganization
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1LeaveOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: LeaveOrganization removes the current user from the organization
    /v1/orgs/{org}/project/{project}/usergroups:
        get:
            operationId: AdminService_ListProjectMemberUsergroups
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - description: Optionally filter by role
                  in: query
                  name: role
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectMemberUsergroupsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectMemberUsergroups lists the project's user groups
    /v1/orgs/{org}/projects:
        get:
            operationId: AdminService_ListProjectsForOrganization
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectsForOrganizationResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectsForOrganization lists all the projects currently available for given organizations.
        post:
            operationId: AdminService_CreateProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                archiveAssetId:
                                    description: archive_asset_id is set for projects whose project files are not stored in github but are managed by rill.
                                    type: string
                                description:
                                    type: string
                                directoryName:
                                    description: |-
                                        directory_name should be the most recently observed local directory name for the project.
                                        See ListProjectsForFingerprint for more context.
                                    type: string
                                gitRemote:
                                    description: |-
                                        git_remote is set for projects whose project files are stored in Git.
                                        It currently only supports Github remotes. It should be a HTTPS remote ending in .git for github.com.
                                        Either git_remote or archive_asset_id should be set.
                                    type: string
                                prodBranch:
                                    type: string
                                prodSlots:
                                    format: int64
                                    type: string
                                prodVersion:
                                    type: string
                                project:
                                    type: string
                                provisioner:
                                    type: string
                                public:
                                    type: boolean
                                skipDeploy:
                                    type: boolean
                                subpath:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateProject creates a new project
    /v1/orgs/{org}/projects-for-user:
        get:
            operationId: AdminService_ListProjectsForOrganizationAndUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: userId
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectsForOrganizationAndUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                ListProjectsForOrganizationAndUser lists all the projects that an organization member user has access to.
                It does not include projects that the user has access to through a usergroup.
    /v1/orgs/{org}/projects/{project}:
        delete:
            operationId: AdminService_DeleteProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteProject deletes an project
        get:
            operationId: AdminService_GetProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: accessTokenTtlSeconds
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
                - in: query
                  name: issueSuperuserToken
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetProject returns information about a specific project
        patch:
            operationId: AdminService_UpdateProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                archiveAssetId:
                                    type: string
                                description:
                                    type: string
                                directoryName:
                                    type: string
                                gitRemote:
                                    type: string
                                newName:
                                    type: string
                                prodBranch:
                                    type: string
                                prodSlots:
                                    format: int64
                                    type: string
                                prodTtlSeconds:
                                    format: int64
                                    type: string
                                prodVersion:
                                    type: string
                                provisioner:
                                    type: string
                                public:
                                    type: boolean
                                subpath:
                                    type: string
                                superuserForceAccess:
                                    type: boolean
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateProject updates a project
    /v1/orgs/{org}/projects/{project}/alerts:
        post:
            operationId: AdminService_CreateAlert
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1AlertOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateAlertResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateAlert adds a virtual file for an alert, triggers a reconcile, and waits for the alert to be added to the runtime catalog
    /v1/orgs/{org}/projects/{project}/alerts/-/yaml:
        post:
            operationId: AdminService_GenerateAlertYAML
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1AlertOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GenerateAlertYAMLResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GenerateAlertYAML generates YAML for an alert to be copied into a project's Git repository
    /v1/orgs/{org}/projects/{project}/alerts/{name}:
        delete:
            operationId: AdminService_DeleteAlert
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteAlertResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteAlert deletes the virtual file for a UI-managed alert, triggers a reconcile, and waits for the alert to be deleted in the runtime
        put:
            operationId: AdminService_EditAlert
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1AlertOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1EditAlertResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: EditAlert edits a virtual file for a UI-managed alert, triggers a reconcile, and waits for the alert to be updated in the runtime
    /v1/orgs/{org}/projects/{project}/alerts/{name}/unsubscribe:
        post:
            operationId: AdminService_UnsubscribeAlert
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                slackUser:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UnsubscribeAlertResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UnsubscribeAlert removes the calling user from a alert's recipients list
    /v1/orgs/{org}/projects/{project}/alerts/{name}/yaml:
        get:
            operationId: AdminService_GetAlertYAML
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetAlertYAMLResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GenerateAlertYAML generates YAML for an alert to be copied into a project's Git repository
    /v1/orgs/{org}/projects/{project}/clone-credentials:
        get:
            operationId: AdminService_GetCloneCredentials
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetCloneCredentialsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetCloneCredentials returns credentials and other details for a project's Git repository or archive path if git repo is not configured.
    /v1/orgs/{org}/projects/{project}/connect-to-github:
        post:
            operationId: AdminService_ConnectProjectToGithub
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                remote:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ConnectProjectToGithubResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                Connects a rill managed project to github.
                Replaces the contents of the remote repo with the contents of the project.
    /v1/orgs/{org}/projects/{project}/credentials:
        post:
            operationId: AdminService_GetDeploymentCredentials
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                attributes:
                                    type: object
                                branch:
                                    type: string
                                ttlSeconds:
                                    format: int64
                                    type: integer
                                userEmail:
                                    type: string
                                userId:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetDeploymentCredentialsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                GetDeploymentCredentials returns runtime info and access token on behalf of a specific user, or alternatively for a raw set of JWT attributes
                DEPRECATED: Clients should call GetDeployment instead.
    /v1/orgs/{org}/projects/{project}/deployments:
        get:
            operationId: AdminService_ListDeployments
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: environment
                  schema:
                    type: string
                - in: query
                  name: userId
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListDeploymentsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListDeployments lists deployments for a project.
        post:
            operationId: AdminService_CreateDeployment
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                environment:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateDeploymentResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateDeployment creates a new deployment for a project.
    /v1/orgs/{org}/projects/{project}/hibernate:
        post:
            operationId: AdminService_HibernateProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1HibernateProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: HibernateProject hibernates a project by tearing down its deployments.
    /v1/orgs/{org}/projects/{project}/iframe:
        post:
            operationId: AdminService_GetIFrame
            parameters:
                - description: Org that owns the project to embed.
                  in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Project that has the resource(s) to embed.
                  in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            description: GetIFrameRequest is the request payload for AdminService.GetIFrame.
                            properties:
                                attributes:
                                    description: If set, will use the provided attributes outright.
                                    type: object
                                branch:
                                    description: Branch to embed. If not set, the production branch is used.
                                    type: string
                                kind:
                                    description: 'Deprecated: Alias for `type`.'
                                    type: string
                                navigation:
                                    description: Navigation denotes whether navigation between different resources should be enabled in the embed.
                                    type: boolean
                                query:
                                    additionalProperties:
                                        type: string
                                    description: 'DEPRECATED: Additional parameters to set outright in the generated URL query.'
                                    type: object
                                resource:
                                    description: Name of the resource to embed. This should identify a resource that is valid for embedding, such as a dashboard or component.
                                    type: string
                                state:
                                    description: Blob containing UI state for rendering the initial embed. Not currently supported.
                                    type: string
                                theme:
                                    description: Theme to use for the embedded resource.
                                    type: string
                                ttlSeconds:
                                    description: TTL for the iframe's access token. If not set, defaults to 24 hours.
                                    format: int64
                                    type: integer
                                type:
                                    description: Type of resource to embed. If not set, defaults to "rill.runtime.v1.Explore".
                                    type: string
                                userEmail:
                                    description: If set, will generate attributes corresponding to a user with this email.
                                    type: string
                                userId:
                                    description: If set, will use the attributes of the user with this ID.
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetIFrameResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetIFrame returns the iframe URL for the given project
    /v1/orgs/{org}/projects/{project}/invites:
        get:
            operationId: AdminService_ListProjectInvites
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectInvitesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectInvites lists all the project invites
    /v1/orgs/{org}/projects/{project}/members:
        get:
            operationId: AdminService_ListProjectMemberUsers
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - description: Optionally filter by role
                  in: query
                  name: role
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectMemberUsersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectMemberUsers lists all the project members
        post:
            operationId: AdminService_AddProjectMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1AddProjectMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: AddProjectMemberUser adds a member to the project
    /v1/orgs/{org}/projects/{project}/members/{email}:
        delete:
            operationId: AdminService_RemoveProjectMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveProjectMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveProjectMemberUser removes member from the project
        put:
            operationId: AdminService_SetProjectMemberUserRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetProjectMemberUserRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetProjectMemberUserRole sets the role for the member
    /v1/orgs/{org}/projects/{project}/redeploy:
        post:
            operationId: AdminService_RedeployProject
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RedeployProjectResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                RedeployProject creates a new production deployment for a project.
                If the project currently has another production deployment, the old deployment will be deprovisioned.
                This RPC can be used to redeploy a project that has been hibernated.
    /v1/orgs/{org}/projects/{project}/reports:
        post:
            operationId: AdminService_CreateReport
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1ReportOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateReportResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateReport adds a virtual file for a report, triggers a reconcile, and waits for the report to be added to the runtime catalog
    /v1/orgs/{org}/projects/{project}/reports/-/yaml:
        post:
            operationId: AdminService_GenerateReportYAML
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1ReportOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GenerateReportYAMLResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GenerateReportYAML generates YAML for a scheduled report to be copied into a project's Git repository
    /v1/orgs/{org}/projects/{project}/reports/{name}:
        delete:
            operationId: AdminService_DeleteReport
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteReportResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteReport deletes the virtual file for a UI-managed report, triggers a reconcile, and waits for the report to be deleted in the runtime
        put:
            operationId: AdminService_EditReport
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                options:
                                    $ref: '#/components/schemas/v1ReportOptions'
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1EditReportResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: EditReport edits a virtual file for a UI-managed report, triggers a reconcile, and waits for the report to be updated in the runtime
    /v1/orgs/{org}/projects/{project}/reports/{name}/trigger:
        post:
            operationId: AdminService_TriggerReport
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1TriggerReportResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: TriggerReport triggers an ad-hoc report run
    /v1/orgs/{org}/projects/{project}/reports/{name}/unsubscribe:
        post:
            operationId: AdminService_UnsubscribeReport
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                slackUser:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UnsubscribeReportResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UnsubscribeReport removes the calling user from a reports recipients list
    /v1/orgs/{org}/projects/{project}/request-access:
        post:
            operationId: AdminService_RequestProjectAccess
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RequestProjectAccessResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
    /v1/orgs/{org}/projects/{project}/services:
        get:
            operationId: AdminService_ListProjectMemberServices
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectMemberServicesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectMemberServices returns all the services for the project for an organization
    /v1/orgs/{org}/projects/{project}/services/{name}:
        delete:
            operationId: AdminService_RemoveProjectMemberService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveProjectMemberServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveProjectMemberService removes the service from the project
    /v1/orgs/{org}/projects/{project}/services/{name}/role:
        put:
            operationId: AdminService_SetProjectMemberServiceRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetProjectMemberServiceRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetProjectMemberServiceRole updates the project role for the service
    /v1/orgs/{org}/projects/{project}/tokens/magic:
        get:
            operationId: AdminService_ListMagicAuthTokens
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListMagicAuthTokensResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListMagicAuthTokens lists all the magic auth tokens for a specific project.
        post:
            operationId: AdminService_IssueMagicAuthToken
            parameters:
                - description: Org that owns the project.
                  in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Project to create the magic auth token in.
                  in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                displayName:
                                    description: Optional display name to store with the token.
                                    type: string
                                fields:
                                    description: |-
                                        Optional list of fields to limit access to. If empty, no field access rule will be added.
                                        This will be translated to a rill.runtime.v1.SecurityRuleFieldAccess, which currently applies to dimension and measure names for explores and metrics views.
                                    items:
                                        type: string
                                    type: array
                                filter:
                                    $ref: '#/components/schemas/v1Expression'
                                resourceName:
                                    description: Name of the resource to grant access to.
                                    type: string
                                resourceType:
                                    description: Type of resource to grant access to.
                                    type: string
                                resources:
                                    description: list of resources to grant access to.
                                    items:
                                        $ref: '#/components/schemas/v1ResourceName'
                                    type: array
                                state:
                                    description: Optional state to store with the token. Can be fetched with GetCurrentMagicAuthToken.
                                    type: string
                                ttlMinutes:
                                    description: TTL for the token in minutes. Set to 0 for no expiry. Defaults to no expiry.
                                    format: int64
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1IssueMagicAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: IssueMagicAuthToken creates a "magic" auth token that provides limited access to a specific filtered dashboard in a specific project.
    /v1/orgs/{org}/projects/{project}/usergroups/{usergroup}/roles:
        delete:
            operationId: AdminService_RemoveProjectMemberUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveProjectMemberUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveProjectMemberUsergroup revokes the project-level role for the user group
        post:
            operationId: AdminService_AddProjectMemberUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1AddProjectMemberUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: AddProjectMemberUsergroupRole adds the role for the user group
        put:
            operationId: AdminService_SetProjectMemberUsergroupRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetProjectMemberUsergroupRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetProjectMemberUsergroupRole sets the role for the user group
    /v1/orgs/{org}/projects/{project}/users/search:
        get:
            operationId: AdminService_SearchProjectUsers
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: query
                  name: emailQuery
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SearchProjectUsersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SearchProjectUsers returns users who has access to to a project (including org members that have access through a usergroup)
    /v1/orgs/{org}/projects/{project}/variables:
        get:
            operationId: AdminService_GetProjectVariables
            parameters:
                - description: Org the project belongs to.
                  in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Project to get variables for.
                  in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - description: |-
                    Environment to get the variables for.
                    If empty, only variables shared across all environments are returned.
                  in: query
                  name: environment
                  schema:
                    type: string
                - description: |-
                    If true, return variable values for all environments.
                    Can't be used together with the "environment" option.
                  in: query
                  name: forAllEnvironments
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetProjectVariablesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetProjectVariables returns project variables.
        put:
            operationId: AdminService_UpdateProjectVariables
            parameters:
                - description: Org the project belongs to.
                  in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Project to update variables for.
                  in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                environment:
                                    description: |-
                                        Environment to set the variables for.
                                        If empty, the variable(s) will be used as defaults for all environments.
                                    type: string
                                unsetVariables:
                                    description: Variables to delete.
                                    items:
                                        type: string
                                    type: array
                                variables:
                                    additionalProperties:
                                        type: string
                                    description: |-
                                        New variable values.
                                        It is NOT NECESSARY to pass all variables, existing variables not included in the request will be left unchanged.
                                    type: object
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateProjectVariablesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateProjectVariables updates variables for a project.
    /v1/orgs/{org}/projects/{project}/whitelisted:
        get:
            operationId: AdminService_ListProjectWhitelistedDomains
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectWhitelistedDomainsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListWhitelistedDomains lists all the whitelisted domains of the project
        post:
            operationId: AdminService_CreateProjectWhitelistedDomain
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                domain:
                                    type: string
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateProjectWhitelistedDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateProjectWhitelistedDomain adds a domain to the project's whitelisted
    /v1/orgs/{org}/projects/{project}/whitelisted/{domain}:
        delete:
            operationId: AdminService_RemoveProjectWhitelistedDomain
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: project
                  required: true
                  schema:
                    type: string
                - in: path
                  name: domain
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveProjectWhitelistedDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveProjectWhitelistedDomain removes a domain from the project's whitelisted
    /v1/orgs/{org}/services:
        get:
            operationId: AdminService_ListServices
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListServicesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListService returns all the services per organization
        post:
            operationId: AdminService_CreateService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                attributes:
                                    type: object
                                name:
                                    type: string
                                orgRoleName:
                                    title: Optional org role to assign
                                    type: string
                                project:
                                    title: Optional project to assign role to
                                    type: string
                                projectRoleName:
                                    title: Optional project role to assign
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateService creates a new service per organization
    /v1/orgs/{org}/services/{name}:
        delete:
            operationId: AdminService_DeleteService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteService deletes a service per organization
        get:
            operationId: AdminService_GetService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetService returns information about a specific service
        patch:
            operationId: AdminService_UpdateService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                attributes:
                                    type: object
                                newName:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateService updates a service per organization
    /v1/orgs/{org}/services/{name}/role:
        delete:
            operationId: AdminService_RemoveOrganizationMemberService
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveOrganizationMemberServiceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveOrganizationMemberService removes the organization role for the service
        put:
            operationId: AdminService_SetOrganizationMemberServiceRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetOrganizationMemberServiceRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetOrganizationMemberServiceRole sets or updates the role of the service in the organization
    /v1/orgs/{org}/services/{serviceName}/tokens:
        get:
            operationId: AdminService_ListServiceAuthTokens
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: serviceName
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListServiceAuthTokensResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListServiceAuthTokens lists all the service auth tokens
        post:
            operationId: AdminService_IssueServiceAuthToken
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: serviceName
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1IssueServiceAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: IssueServiceAuthToken issues an access token for a service
    /v1/orgs/{org}/usergroups:
        get:
            operationId: AdminService_ListOrganizationMemberUsergroups
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - description: Optionally filter by role
                  in: query
                  name: role
                  schema:
                    type: string
                - description: Optionally include counts
                  in: query
                  name: includeCounts
                  schema:
                    type: boolean
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListOrganizationMemberUsergroupsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListOrganizationMemberUsergroups lists the org's user groups
        post:
            operationId: AdminService_CreateUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateUsergroup creates a user group in the organization
    /v1/orgs/{org}/usergroups-for-user:
        get:
            operationId: AdminService_ListUsergroupsForOrganizationAndUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: query
                  name: userId
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListUsergroupsForOrganizationAndUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListUsergroupsForOrganizationAndUser lists the user groups that an organization member user has access to.
    /v1/orgs/{org}/usergroups/{usergroup}:
        delete:
            operationId: AdminService_DeleteUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteUsergroup deletes the user group from the organization
        get:
            operationId: AdminService_GetUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetUsergroups returns the user group details
        post:
            operationId: AdminService_RenameUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RenameUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RenameUsergroup renames the user group
        put:
            operationId: AdminService_EditUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1EditUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: EditUsergroup renames the user group
    /v1/orgs/{org}/usergroups/{usergroup}/members:
        get:
            operationId: AdminService_ListUsergroupMemberUsers
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListUsergroupMemberUsersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListUsergroupMemberUsers lists all the user group members
    /v1/orgs/{org}/usergroups/{usergroup}/members/{email}:
        delete:
            operationId: AdminService_RemoveUsergroupMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveUsergroupMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveUsergroupMemberUser removes member from the user group
        put:
            operationId: AdminService_AddUsergroupMemberUser
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1AddUsergroupMemberUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: AddUsergroupMemberUser adds a member to the user group
    /v1/orgs/{org}/usergroups/{usergroup}/role:
        delete:
            operationId: AdminService_RemoveOrganizationMemberUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveOrganizationMemberUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveOrganizationMemberUsergroup revokes the organization-level role for the user group
        post:
            operationId: AdminService_AddOrganizationMemberUsergroup
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1AddOrganizationMemberUsergroupResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: AddOrganizationMemberUsergroupRole adds the role for the user group
        put:
            operationId: AdminService_SetOrganizationMemberUsergroupRole
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: usergroup
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetOrganizationMemberUsergroupRoleResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetOrganizationMemberUsergroupRole sets the role for the user group
    /v1/orgs/{org}/whitelisted:
        get:
            operationId: AdminService_ListWhitelistedDomains
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListWhitelistedDomainsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListWhitelistedDomains lists all the whitelisted domains for the organization
        post:
            operationId: AdminService_CreateWhitelistedDomain
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                domain:
                                    type: string
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateWhitelistedDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateWhitelistedDomain adds a domain to the whitelist
    /v1/orgs/{org}/whitelisted/{domain}:
        delete:
            operationId: AdminService_RemoveWhitelistedDomain
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: domain
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveWhitelistedDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveWhitelistedDomain removes a domain from the whitelist list
    /v1/ping:
        get:
            operationId: AdminService_Ping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1PingResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: Ping returns information about the server
    /v1/project-access-request/{id}:
        get:
            operationId: AdminService_GetProjectAccessRequest
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetProjectAccessRequestResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
    /v1/project-access-request/{id}/approve:
        post:
            operationId: AdminService_ApproveProjectAccess
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                role:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ApproveProjectAccessResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
    /v1/project-access-request/{id}/deny:
        post:
            operationId: AdminService_DenyProjectAccess
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DenyProjectAccessResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
    /v1/projects:
        get:
            operationId: AdminService_ListProjectsForUserByName
            parameters:
                - in: query
                  name: name
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectsForUserByNameResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListProjectsForUserByName returns projects matching a name accessible by the logged in user
    /v1/projects-for-fingerprint:
        get:
            operationId: AdminService_ListProjectsForFingerprint
            parameters:
                - in: query
                  name: directoryName
                  schema:
                    type: string
                - in: query
                  name: gitRemote
                  schema:
                    type: string
                - in: query
                  name: subPath
                  schema:
                    type: string
                - in: query
                  name: rillMgdGitRemote
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListProjectsForFingerprintResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                ListProjectsForFingerprint lists all projects the current user has access to that match the provided local project details.
                This can be used to produce a short list of cloud projects that are likely to have been deployed from a local project.
    /v1/projects/-/redeploy:
        post:
            operationId: AdminService_TriggerRedeploy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1TriggerRedeployRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1TriggerRedeployResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                TriggerRedeploy is similar to RedeployProject.
                DEPRECATED: Use RedeployProject instead.
    /v1/projects/{id}:
        get:
            operationId: AdminService_GetProjectByID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetProjectByIDResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetProject returns information about a specific project
    /v1/projects/{projectId}/alerts/meta:
        post:
            operationId: AdminService_GetAlertMeta
            parameters:
                - in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                alert:
                                    type: string
                                annotations:
                                    additionalProperties:
                                        type: string
                                    type: object
                                anonRecipients:
                                    type: boolean
                                emailRecipients:
                                    items:
                                        type: string
                                    type: array
                                ownerId:
                                    type: string
                                queryForUserEmail:
                                    type: string
                                queryForUserId:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetAlertMetaResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetAlertMeta returns metadata for checking an alert. It's currently only called by the alert reconciler in the runtime.
    /v1/projects/{projectId}/repo/meta:
        get:
            operationId: AdminService_GetRepoMeta
            parameters:
                - description: The project ID to get repository metadata for.
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetRepoMetaResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetRepoMeta returns credentials and other metadata for accessing a project's repo
    /v1/projects/{projectId}/repo/virtual:
        get:
            operationId: AdminService_PullVirtualRepo
            parameters:
                - description: The project ID to pull virtual files for.
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: |-
                    The environment to pull virtual files for.
                    It is optional. If the call is made with a deployment access token, it defaults to the environment of the deployment. Otherwise, it defaults to "prod".
                  in: query
                  name: environment
                  schema:
                    type: string
                - description: Page size for pagination.
                  in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - description: Page token for pagination.
                  in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1PullVirtualRepoResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: PullVirtualRepo fetches files from a project's virtual repo
    /v1/projects/{projectId}/reports/meta:
        post:
            operationId: AdminService_GetReportMeta
            parameters:
                - in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                accessibleFields:
                                    items:
                                        type: string
                                    type: array
                                anonRecipients:
                                    type: boolean
                                emailRecipients:
                                    items:
                                        type: string
                                    type: array
                                executionTime:
                                    format: date-time
                                    type: string
                                ownerId:
                                    type: string
                                report:
                                    type: string
                                resources:
                                    items:
                                        $ref: '#/components/schemas/v1ResourceName'
                                    type: array
                                webOpenMode:
                                    type: string
                                whereFilterJson:
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetReportMetaResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetReportMeta returns metadata for generating a report. It's currently only called by the report reconciler in the runtime.
    /v1/roles:
        get:
            operationId: AdminService_ListRoles
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListRolesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListRoles lists all the roles available for orgs and projects.
    /v1/services/tokens/{tokenId}:
        delete:
            operationId: AdminService_RevokeServiceAuthToken
            parameters:
                - in: path
                  name: tokenId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RevokeServiceAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RevokeServiceAuthToken revoke a service's access token
    /v1/superuser/billing/repair:
        post:
            operationId: AdminService_SudoTriggerBillingRepair
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoTriggerBillingRepairRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoTriggerBillingRepairResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoTriggerBillingRepair triggers billing repair jobs for orgs that doesn't have billing info and puts them on trial
    /v1/superuser/deployments/manager-token:
        post:
            operationId: AdminService_SudoIssueRuntimeManagerToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoIssueRuntimeManagerTokenRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoIssueRuntimeManagerTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoIssueRuntimeManagerToken returns a runtime JWT with full manager permissions for a runtime.
    /v1/superuser/members:
        get:
            operationId: AdminService_ListSuperusers
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListSuperusersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListSuperusers lists all the superusers
        post:
            operationId: AdminService_SetSuperuser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SetSuperuserRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SetSuperuserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SetSuperuser adds/remove a superuser
    /v1/superuser/organization/billing/customer_id:
        patch:
            operationId: AdminService_SudoUpdateOrganizationBillingCustomer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoUpdateOrganizationBillingCustomerRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoUpdateOrganizationBillingCustomerResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoUpdateOrganizationBillingCustomer update the billing customer for the organization
    /v1/superuser/organization/custom-domain:
        patch:
            operationId: AdminService_SudoUpdateOrganizationCustomDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoUpdateOrganizationCustomDomainRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoUpdateOrganizationCustomDomainResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                SudoUpdateOrganizationCustomDomain updates the custom domain for an organization.
                It only updates the custom domain in the database, which is used to ensure correct redirects.
                The DNS records and ingress TLS must be configured separately.
    /v1/superuser/organization/trial/extend:
        post:
            operationId: AdminService_SudoExtendTrial
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoExtendTrialRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoExtendTrialResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoExtendTrial extends the trial period for an organization
    /v1/superuser/organizations/{org}/billing/issues/{type}:
        delete:
            operationId: AdminService_SudoDeleteOrganizationBillingIssue
            parameters:
                - in: path
                  name: org
                  required: true
                  schema:
                    type: string
                - in: path
                  name: type
                  required: true
                  schema:
                    enum:
                        - BILLING_ISSUE_TYPE_UNSPECIFIED
                        - BILLING_ISSUE_TYPE_ON_TRIAL
                        - BILLING_ISSUE_TYPE_TRIAL_ENDED
                        - BILLING_ISSUE_TYPE_NO_PAYMENT_METHOD
                        - BILLING_ISSUE_TYPE_NO_BILLABLE_ADDRESS
                        - BILLING_ISSUE_TYPE_PAYMENT_FAILED
                        - BILLING_ISSUE_TYPE_SUBSCRIPTION_CANCELLED
                        - BILLING_ISSUE_TYPE_NEVER_SUBSCRIBED
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoDeleteOrganizationBillingIssueResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoDeleteOrganizationBillingIssue deletes a billing issue of a type for the organization
    /v1/superuser/projects/annotations:
        patch:
            operationId: AdminService_SudoUpdateAnnotations
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoUpdateAnnotationsRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoUpdateAnnotationsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoUpdateAnnotations endpoint for superusers to update project annotations
    /v1/superuser/projects/search:
        get:
            operationId: AdminService_SearchProjectNames
            parameters:
                - in: query
                  name: namePattern
                  schema:
                    type: string
                - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
                  in: query
                  name: annotations
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SearchProjectNamesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SearchProjectNames returns project names matching the pattern
    /v1/superuser/quotas/organization:
        patch:
            operationId: AdminService_SudoUpdateOrganizationQuotas
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoUpdateOrganizationQuotasRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoUpdateOrganizationQuotasResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoUpdateOrganizationQuotas update the quotas available for orgs
    /v1/superuser/quotas/user:
        patch:
            operationId: AdminService_SudoUpdateUserQuotas
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1SudoUpdateUserQuotasRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoUpdateUserQuotasResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoUpdateUserQuotas update the quotas for users
    /v1/superuser/resource:
        get:
            operationId: AdminService_SudoGetResource
            parameters:
                - in: query
                  name: userId
                  schema:
                    type: string
                - in: query
                  name: orgId
                  schema:
                    type: string
                - in: query
                  name: projectId
                  schema:
                    type: string
                - in: query
                  name: deploymentId
                  schema:
                    type: string
                - in: query
                  name: instanceId
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SudoGetResourceResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: SudoGetResource returns details about a resource by ID lookup
    /v1/telemetry/events:
        post:
            operationId: TelemetryService_RecordEvents
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1RecordEventsRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RecordEventsResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                RecordEvents sends a batch of telemetry events.
                The events must conform to the schema described in rill/runtime/pkg/activity/README.md.
    /v1/tokens/current:
        delete:
            operationId: AdminService_RevokeCurrentAuthToken
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RevokeCurrentAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                RevokeCurrentAuthToken revoke the current auth token.
                Deprecated: Use RevokeUserAuthToken with ID set to "current" instead.
    /v1/tokens/represent:
        post:
            operationId: AdminService_IssueRepresentativeAuthToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1IssueRepresentativeAuthTokenRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1IssueRepresentativeAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                IssueRepresentativeAuthToken returns the temporary token for given email.
                Deprecated: Use IssueUserAuthToken with the represent_email option instead.
    /v1/users:
        get:
            operationId: AdminService_GetUser
            parameters:
                - in: query
                  name: email
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetUser returns user by email
    /v1/users/-/tokens/{tokenId}:
        delete:
            operationId: AdminService_RevokeUserAuthToken
            parameters:
                - description: |-
                    ID of the auth token to revoke.
                    Set to "current" to revoke the current auth token.
                  in: path
                  name: tokenId
                  required: true
                  schema:
                    type: string
                - description: Flag for superusers to override normal access checks.
                  in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RevokeUserAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                RevokeUserAuthToken revokes a user access token.
                You can optionally pass "current" instead of the token ID to revoke the current token.
    /v1/users/-/tokens/representing/{email}:
        delete:
            operationId: AdminService_RevokeRepresentativeAuthTokens
            parameters:
                - description: Email of the user being represented.
                  in: path
                  name: email
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RevokeRepresentativeAuthTokensResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: "RevokeRepresentativeAuthTokens revokes all active tokens created by the current user to act on behalf of the specified user. \nThis is primarily used for \"unassume\" flows."
    /v1/users/{email}:
        delete:
            operationId: AdminService_DeleteUser
            parameters:
                - in: path
                  name: email
                  required: true
                  schema:
                    type: string
                - in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1DeleteUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: DeleteUser deletes the user from the organization by email
    /v1/users/{userId}/tokens:
        get:
            operationId: AdminService_ListUserAuthTokens
            parameters:
                - description: User ID to list auth tokens for. Set to "current" to list auth tokens for the current user.
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
                - description: Page size for pagination. If not set, a default page size will be used.
                  in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - description: Page token for pagination. If set, the first page of results will be returned.
                  in: query
                  name: pageToken
                  schema:
                    type: string
                - description: Flag for superusers to override normal access checks.
                  in: query
                  name: superuserForceAccess
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListUserAuthTokensResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                ListUserAuthTokens lists the current user's auth tokens.
                You can optionally pass "current" instead of the user ID to list the current user's tokens.
        post:
            operationId: AdminService_IssueUserAuthToken
            parameters:
                - description: |-
                    User ID to issue the auth token for.
                    Set to "current" to issue an auth token for the current user.
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                clientId:
                                    description: Client ID to issue the token for.
                                    type: string
                                displayName:
                                    description: Optional display name for the auth token.
                                    type: string
                                representEmail:
                                    description: |-
                                        Optional email of another user to assume the identity of.
                                        This is only allowed for superusers.
                                    type: string
                                superuserForceAccess:
                                    description: Flag for superusers to override normal access checks.
                                    type: boolean
                                ttlMinutes:
                                    description: Optional TTL for the auth token in minutes. Set to 0 for no expiry. Defaults to no expiry.
                                    format: int64
                                    type: string
                            type: object
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1IssueUserAuthTokenResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: |-
                IssueUserAuthToken issues an access token for the current user.
                You can optionally pass "current" instead of the user ID to issue a token for the current user.
    /v1/users/bookmarks:
        get:
            operationId: AdminService_ListBookmarks
            parameters:
                - in: query
                  name: projectId
                  schema:
                    type: string
                - in: query
                  name: resourceKind
                  schema:
                    type: string
                - in: query
                  name: resourceName
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1ListBookmarksResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: ListBookmarks lists all the bookmarks for the user and global ones for dashboard
        post:
            operationId: AdminService_CreateBookmark
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1CreateBookmarkRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1CreateBookmarkResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: CreateBookmark creates a bookmark for the given user or for all users for the dashboard
        put:
            operationId: AdminService_UpdateBookmark
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1UpdateBookmarkRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateBookmarkResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateBookmark updates a bookmark for the given user for the given project
    /v1/users/bookmarks/{bookmarkId}:
        delete:
            operationId: AdminService_RemoveBookmark
            parameters:
                - in: path
                  name: bookmarkId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1RemoveBookmarkResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: RemoveBookmark removes the bookmark for the given user or all users
        get:
            operationId: AdminService_GetBookmark
            parameters:
                - in: path
                  name: bookmarkId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetBookmarkResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetBookmark returns the bookmark for the given user for the given project
    /v1/users/current:
        get:
            operationId: AdminService_GetCurrentUser
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1GetCurrentUserResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetCurrentUser returns the currently authenticated user (if any)
    /v1/users/preferences:
        put:
            operationId: AdminService_UpdateUserPreferences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/v1UpdateUserPreferencesRequest'
                required: true
                x-originalParamName: body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1UpdateUserPreferencesResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: UpdateUserPreferences updates the preferences for the user
    /v1/users/search:
        get:
            operationId: AdminService_SearchUsers
            parameters:
                - in: query
                  name: emailPattern
                  schema:
                    type: string
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageToken
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/v1SearchUsersResponse'
                    description: A successful response.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rpcStatus'
                    description: An unexpected error response.
            summary: GetUsersByEmail returns users by email
