openapi: 3.1.0
info: {}
paths:
  /v1/billing/metrics-project-credentials:
    post:
      tags:
        - AdminService
      summary: GetBillingProjectCredentials
      description: GetBillingProjectCredentials returns credentials for the configured cloud metrics project filtered by request organization
      operationId: rill.admin.v1.AdminService.GetBillingProjectCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.GetBillingProjectCredentialsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetBillingProjectCredentialsResponse'
  /v1/billing/plans:
    get:
      tags:
        - AdminService
      summary: ListPublicBillingPlans
      description: ListPublicBillingPlans lists all public billing plans
      operationId: rill.admin.v1.AdminService.ListPublicBillingPlans
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListPublicBillingPlansResponse'
  /v1/deployments/{deployment_id}:
    delete:
      tags:
        - AdminService
      summary: DeleteDeployment
      description: DeleteDeployment deletes a deployment.
      operationId: rill.admin.v1.AdminService.DeleteDeployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteDeploymentResponse'
  /v1/deployments/{deployment_id}/credentials:
    post:
      tags:
        - AdminService
      summary: GetDeployment
      description: GetDeployment returns runtime info and access token on behalf of a specific user, or alternatively for a raw set of JWT attributes
      operationId: rill.admin.v1.AdminService.GetDeployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetDeploymentResponse'
  /v1/deployments/{deployment_id}/provision:
    post:
      tags:
        - AdminService
      summary: Provision
      description: |-
        Provision provisions a new resource for a deployment.
         If an existing resource matches the request, it will be returned without provisioning a new resource.
      operationId: rill.admin.v1.AdminService.Provision
      parameters:
        - name: deployment_id
          in: path
          description: |-
            Deployment to provision a resource for.
             If it's blank and the request is made with a deployment access token, the deployment is inferred from the token.
          required: true
          schema:
            type: string
            title: deployment_id
            description: |-
              Deployment to provision a resource for.
               If it's blank and the request is made with a deployment access token, the deployment is inferred from the token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  title: type
                  description: Type of resource to provision.
                name:
                  type: string
                  title: name
                  description: |-
                    Name of the resource to provision.
                     It forms a unique key together with deployment and type, which is used to de-duplicate provision requests.
                args:
                  title: args
                  description: Arguments for the provisioner call.
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: ProvisionRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ProvisionResponse'
  /v1/deployments/{deployment_id}/reconcile:
    post:
      tags:
        - AdminService
      summary: TriggerReconcile
      description: |-
        TriggerReconcile triggers reconcile for the project's prod deployment.
         DEPRECATED: Clients should call CreateTrigger directly on the deployed runtime instead.
      operationId: rill.admin.v1.AdminService.TriggerReconcile
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.TriggerReconcileResponse'
  /v1/deployments/{deployment_id}/refresh:
    post:
      tags:
        - AdminService
      summary: TriggerRefreshSources
      description: |-
        TriggerRefreshSources refresh the source for production deployment.
         DEPRECATED: Clients should call CreateTrigger directly on the deployed runtime instead.
      operationId: rill.admin.v1.AdminService.TriggerRefreshSources
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sources:
                  type: array
                  items:
                    type: string
                  title: sources
              title: TriggerRefreshSourcesRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.TriggerRefreshSourcesResponse'
  /v1/deployments/{deployment_id}/start:
    post:
      tags:
        - AdminService
      summary: StartDeployment
      description: StartDeployment starts a deployment.
      operationId: rill.admin.v1.AdminService.StartDeployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.StartDeploymentResponse'
  /v1/deployments/{deployment_id}/stop:
    post:
      tags:
        - AdminService
      summary: StopDeployment
      description: StopDeployment stops a deployment.
      operationId: rill.admin.v1.AdminService.StopDeployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
            title: deployment_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.StopDeploymentResponse'
  /v1/github/repositories:
    get:
      tags:
        - AdminService
      summary: GetGithubRepoStatus
      description: |-
        GetGithubRepoRequest returns info about a Github repo based on the caller's installations.
         If the caller has not granted access to the repository, instructions for granting access are returned.
      operationId: rill.admin.v1.AdminService.GetGithubRepoStatus
      parameters:
        - name: remote
          in: query
          schema:
            type: string
            title: remote
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetGithubRepoStatusResponse'
  /v1/github/user:
    get:
      tags:
        - AdminService
      summary: GetGithubUserStatus
      description: |-
        GetGithubUserStatus returns info about a Github user account based on the caller's installations.
         If we don't have access to user's personal account tokens or it is expired, instructions for granting access are returned.
      operationId: rill.admin.v1.AdminService.GetGithubUserStatus
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetGithubUserStatusResponse'
  /v1/github/user/repositories:
    get:
      tags:
        - AdminService
      summary: ListGithubUserRepos
      operationId: rill.admin.v1.AdminService.ListGithubUserRepos
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListGithubUserReposResponse'
  /v1/magic-tokens/current:
    get:
      tags:
        - AdminService
      summary: GetCurrentMagicAuthToken
      description: GetCurrentMagicAuthToken returns information about the current magic auth token.
      operationId: rill.admin.v1.AdminService.GetCurrentMagicAuthToken
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetCurrentMagicAuthTokenResponse'
  /v1/magic-tokens/{token_id}:
    delete:
      tags:
        - AdminService
      summary: RevokeMagicAuthToken
      description: RevokeMagicAuthToken revokes a magic auth token.
      operationId: rill.admin.v1.AdminService.RevokeMagicAuthToken
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            title: token_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RevokeMagicAuthTokenResponse'
  /v1/organization-for-domain/{domain}:
    get:
      tags:
        - AdminService
      summary: GetOrganizationNameForDomain
      description: |-
        GetOrganizationNameForDomain finds the org name for a custom domain.
         If the application detects it is running on a non-default domain, it can use this to find the org to present.
         It can be called without being authenticated.
      operationId: rill.admin.v1.AdminService.GetOrganizationNameForDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
            title: domain
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetOrganizationNameForDomainResponse'
  /v1/orgs:
    get:
      tags:
        - AdminService
      summary: ListOrganizations
      description: ListOrganizations lists all the organizations currently managed by the admin
      operationId: rill.admin.v1.AdminService.ListOrganizations
      parameters:
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListOrganizationsResponse'
    post:
      tags:
        - AdminService
      summary: CreateOrganization
      description: CreateOrganization creates a new organization
      operationId: rill.admin.v1.AdminService.CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.CreateOrganizationRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateOrganizationResponse'
  /v1/orgs/{org}:
    get:
      tags:
        - AdminService
      summary: GetOrganization
      description: GetOrganization returns information about a specific organization
      operationId: rill.admin.v1.AdminService.GetOrganization
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetOrganizationResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteOrganization
      description: DeleteOrganization deletes an organization
      operationId: rill.admin.v1.AdminService.DeleteOrganization
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteOrganizationResponse'
    patch:
      tags:
        - AdminService
      summary: UpdateOrganization
      description: UpdateOrganization deletes an organizations
      operationId: rill.admin.v1.AdminService.UpdateOrganization
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  title: description
                  nullable: true
                newName:
                  type: string
                  title: new_name
                  nullable: true
                displayName:
                  type: string
                  title: display_name
                  nullable: true
                logoAssetId:
                  type: string
                  title: logo_asset_id
                  nullable: true
                faviconAssetId:
                  type: string
                  title: favicon_asset_id
                  nullable: true
                thumbnailAssetId:
                  type: string
                  title: thumbnail_asset_id
                  nullable: true
                defaultProjectRole:
                  type: string
                  title: default_project_role
                  nullable: true
                billingEmail:
                  type: string
                  title: billing_email
                  nullable: true
              title: UpdateOrganizationRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateOrganizationResponse'
  /v1/orgs/{org}/billing/issues:
    get:
      tags:
        - AdminService
      summary: ListOrganizationBillingIssues
      description: ListOrganizationBillingIssues lists all the billing issues for the organization
      operationId: rill.admin.v1.AdminService.ListOrganizationBillingIssues
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListOrganizationBillingIssuesResponse'
  /v1/orgs/{org}/billing/payments/portal-url:
    get:
      tags:
        - AdminService
      summary: GetPaymentsPortalURL
      description: GetPaymentsPortalURL returns the URL for the billing session to collect payment method
      operationId: rill.admin.v1.AdminService.GetPaymentsPortalURL
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: returnUrl
          in: query
          schema:
            type: string
            title: return_url
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetPaymentsPortalURLResponse'
  /v1/orgs/{org}/billing/subscriptions:
    get:
      tags:
        - AdminService
      summary: GetBillingSubscription
      description: GetBillingSubscription lists the subscription for the organization
      operationId: rill.admin.v1.AdminService.GetBillingSubscription
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetBillingSubscriptionResponse'
    delete:
      tags:
        - AdminService
      summary: CancelBillingSubscription
      description: CancelBillingSubscription cancels the billing subscription for the organization
      operationId: rill.admin.v1.AdminService.CancelBillingSubscription
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CancelBillingSubscriptionResponse'
    patch:
      tags:
        - AdminService
      summary: UpdateBillingSubscription
      description: UpdateBillingSubscription updates the billing plan for the organization
      operationId: rill.admin.v1.AdminService.UpdateBillingSubscription
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                planName:
                  type: string
                  title: plan_name
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
              title: UpdateBillingSubscriptionRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateBillingSubscriptionResponse'
  /v1/orgs/{org}/billing/subscriptions/renew:
    post:
      tags:
        - AdminService
      summary: RenewBillingSubscription
      description: RenewBillingSubscription renews the billing plan for the organization once cancelled
      operationId: rill.admin.v1.AdminService.RenewBillingSubscription
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                planName:
                  type: string
                  title: plan_name
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
              title: RenewBillingSubscriptionRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RenewBillingSubscriptionResponse'
  /v1/orgs/{org}/create-managed-git-repo:
    put:
      tags:
        - AdminService
      summary: CreateManagedGitRepo
      description: CreateManagedGitRepo creates a new rill managed git repo for the organization.
      operationId: rill.admin.v1.AdminService.CreateManagedGitRepo
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  title: name
                  description: "name of the repo to create. \n Note: The final name will be suffixed with a random string to ensure uniqueness."
              title: CreateManagedGitRepoRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateManagedGitRepoResponse'
  /v1/orgs/{org}/create_asset:
    post:
      tags:
        - AdminService
      summary: CreateAsset
      description: CreateAsset returns a one time signed URL using which any asset can be uploaded.
      operationId: rill.admin.v1.AdminService.CreateAsset
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  title: type
                name:
                  type: string
                  title: name
                  description: Eg. "rilldata__project_name"
                extension:
                  type: string
                  title: extension
                  description: Eg. ".tar.gz"
                public:
                  type: boolean
                  title: public
                estimatedSizeBytes:
                  type:
                    - integer
                    - string
                  title: estimated_size_bytes
                  format: int64
              title: CreateAssetRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateAssetResponse'
  /v1/orgs/{org}/invites:
    get:
      tags:
        - AdminService
      summary: ListOrganizationInvites
      description: ListOrganizationInvites lists all the org invites
      operationId: rill.admin.v1.AdminService.ListOrganizationInvites
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListOrganizationInvitesResponse'
  /v1/orgs/{org}/members:
    get:
      tags:
        - AdminService
      summary: ListOrganizationMemberUsers
      description: ListOrganizationMemberUsers lists all the org members
      operationId: rill.admin.v1.AdminService.ListOrganizationMemberUsers
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: role
          in: query
          description: Optionally filter by role
          schema:
            type: string
            title: role
            description: Optionally filter by role
        - name: includeCounts
          in: query
          description: Optionally include counts
          schema:
            type: boolean
            title: include_counts
            description: Optionally include counts
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListOrganizationMemberUsersResponse'
    post:
      tags:
        - AdminService
      summary: AddOrganizationMemberUser
      description: AddOrganizationMemberUser adds a user to the organization
      operationId: rill.admin.v1.AdminService.AddOrganizationMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  title: email
                role:
                  type: string
                  title: role
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
              title: AddOrganizationMemberUserRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.AddOrganizationMemberUserResponse'
  /v1/orgs/{org}/members/current:
    delete:
      tags:
        - AdminService
      summary: LeaveOrganization
      description: LeaveOrganization removes the current user from the organization
      operationId: rill.admin.v1.AdminService.LeaveOrganization
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.LeaveOrganizationResponse'
  /v1/orgs/{org}/members/{email}:
    put:
      tags:
        - AdminService
      summary: SetOrganizationMemberUserRole
      description: SetOrganizationMemberUserRole sets the role for the member
      operationId: rill.admin.v1.AdminService.SetOrganizationMemberUserRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
              title: SetOrganizationMemberUserRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetOrganizationMemberUserRoleResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveOrganizationMemberUser
      description: RemoveOrganizationMemberUser removes member from the organization
      operationId: rill.admin.v1.AdminService.RemoveOrganizationMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveOrganizationMemberUserResponse'
  /v1/orgs/{org}/project/{project}/usergroups:
    get:
      tags:
        - AdminService
      summary: ListProjectMemberUsergroups
      description: ListProjectMemberUsergroups lists the project's user groups
      operationId: rill.admin.v1.AdminService.ListProjectMemberUsergroups
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: role
          in: query
          description: Optionally filter by role
          schema:
            type: string
            title: role
            description: Optionally filter by role
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectMemberUsergroupsResponse'
  /v1/orgs/{org}/projects:
    get:
      tags:
        - AdminService
      summary: ListProjectsForOrganization
      description: ListProjectsForOrganization lists all the projects currently available for given organizations.
      operationId: rill.admin.v1.AdminService.ListProjectsForOrganization
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectsForOrganizationResponse'
    post:
      tags:
        - AdminService
      summary: CreateProject
      description: CreateProject creates a new project
      operationId: rill.admin.v1.AdminService.CreateProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: string
                  title: project
                description:
                  type: string
                  title: description
                public:
                  type: boolean
                  title: public
                directoryName:
                  type: string
                  title: directory_name
                  description: |-
                    directory_name should be the most recently observed local directory name for the project.
                     See ListProjectsForFingerprint for more context.
                provisioner:
                  type: string
                  title: provisioner
                prodSlots:
                  type:
                    - integer
                    - string
                  title: prod_slots
                  format: int64
                subpath:
                  type: string
                  title: subpath
                prodBranch:
                  type: string
                  title: prod_branch
                gitRemote:
                  type: string
                  title: git_remote
                  description: |-
                    git_remote is set for projects whose project files are stored in Git.
                     It currently only supports Github remotes. It should be a HTTPS remote ending in .git for github.com.
                     Either git_remote or archive_asset_id should be set.
                archiveAssetId:
                  type: string
                  title: archive_asset_id
                  description: archive_asset_id is set for projects whose project files are not stored in github but are managed by rill.
                prodVersion:
                  type: string
                  title: prod_version
                skipDeploy:
                  type: boolean
                  title: skip_deploy
              title: CreateProjectRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateProjectResponse'
  /v1/orgs/{org}/projects-for-user:
    get:
      tags:
        - AdminService
      summary: ListProjectsForOrganizationAndUser
      description: |-
        ListProjectsForOrganizationAndUser lists all the projects that an organization member user has access to.
         It does not include projects that the user has access to through a usergroup.
      operationId: rill.admin.v1.AdminService.ListProjectsForOrganizationAndUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: userId
          in: query
          schema:
            type: string
            title: user_id
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectsForOrganizationAndUserResponse'
  /v1/orgs/{org}/projects/{project}:
    get:
      tags:
        - AdminService
      summary: GetProject
      description: GetProject returns information about a specific project
      operationId: rill.admin.v1.AdminService.GetProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: accessTokenTtlSeconds
          in: query
          schema:
            type: integer
            title: access_token_ttl_seconds
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
        - name: issueSuperuserToken
          in: query
          schema:
            type: boolean
            title: issue_superuser_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetProjectResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteProject
      description: DeleteProject deletes an project
      operationId: rill.admin.v1.AdminService.DeleteProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteProjectResponse'
    patch:
      tags:
        - AdminService
      summary: UpdateProject
      description: UpdateProject updates a project
      operationId: rill.admin.v1.AdminService.UpdateProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  title: description
                  nullable: true
                public:
                  type: boolean
                  title: public
                  nullable: true
                directoryName:
                  type: string
                  title: directory_name
                  nullable: true
                prodBranch:
                  type: string
                  title: prod_branch
                  nullable: true
                gitRemote:
                  type: string
                  title: git_remote
                  nullable: true
                subpath:
                  type: string
                  title: subpath
                  nullable: true
                archiveAssetId:
                  type: string
                  title: archive_asset_id
                  nullable: true
                prodSlots:
                  type:
                    - integer
                    - string
                  title: prod_slots
                  format: int64
                  nullable: true
                provisioner:
                  type: string
                  title: provisioner
                  nullable: true
                newName:
                  type: string
                  title: new_name
                  nullable: true
                prodTtlSeconds:
                  type:
                    - integer
                    - string
                  title: prod_ttl_seconds
                  format: int64
                  nullable: true
                prodVersion:
                  type: string
                  title: prod_version
                  nullable: true
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
              title: UpdateProjectRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateProjectResponse'
  /v1/orgs/{org}/projects/{project}/alerts:
    post:
      tags:
        - AdminService
      summary: CreateAlert
      description: CreateAlert adds a virtual file for an alert, triggers a reconcile, and waits for the alert to be added to the runtime catalog
      operationId: rill.admin.v1.AdminService.CreateAlert
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  title: options
                  $ref: '#/components/schemas/rill.admin.v1.AlertOptions'
              title: CreateAlertRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateAlertResponse'
  /v1/orgs/{org}/projects/{project}/alerts/{name}:
    put:
      tags:
        - AdminService
      summary: EditAlert
      description: EditAlert edits a virtual file for a UI-managed alert, triggers a reconcile, and waits for the alert to be updated in the runtime
      operationId: rill.admin.v1.AdminService.EditAlert
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  title: options
                  $ref: '#/components/schemas/rill.admin.v1.AlertOptions'
              title: EditAlertRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.EditAlertResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteAlert
      description: DeleteAlert deletes the virtual file for a UI-managed alert, triggers a reconcile, and waits for the alert to be deleted in the runtime
      operationId: rill.admin.v1.AdminService.DeleteAlert
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteAlertResponse'
  /v1/orgs/{org}/projects/{project}/alerts/{name}/unsubscribe:
    post:
      tags:
        - AdminService
      summary: UnsubscribeAlert
      description: UnsubscribeAlert removes the calling user from a alert's recipients list
      operationId: rill.admin.v1.AdminService.UnsubscribeAlert
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UnsubscribeAlertResponse'
  /v1/orgs/{org}/projects/{project}/alerts/{name}/yaml:
    get:
      tags:
        - AdminService
      summary: GetAlertYAML
      description: GenerateAlertYAML generates YAML for an alert to be copied into a project's Git repository
      operationId: rill.admin.v1.AdminService.GetAlertYAML
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetAlertYAMLResponse'
  /v1/orgs/{org}/projects/{project}/clone-credentials:
    get:
      tags:
        - AdminService
      summary: GetCloneCredentials
      description: GetCloneCredentials returns credentials and other details for a project's Git repository or archive path if git repo is not configured.
      operationId: rill.admin.v1.AdminService.GetCloneCredentials
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetCloneCredentialsResponse'
  /v1/orgs/{org}/projects/{project}/connect-to-github:
    post:
      tags:
        - AdminService
      summary: ConnectProjectToGithub
      description: |-
        Connects a rill managed project to github.
         Replaces the contents of the remote repo with the contents of the project.
      operationId: rill.admin.v1.AdminService.ConnectProjectToGithub
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                remote:
                  type: string
                  title: remote
              title: ConnectProjectToGithubRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ConnectProjectToGithubResponse'
  /v1/orgs/{org}/projects/{project}/credentials:
    post:
      tags:
        - AdminService
      summary: GetDeploymentCredentials
      description: |-
        GetDeploymentCredentials returns runtime info and access token on behalf of a specific user, or alternatively for a raw set of JWT attributes
         DEPRECATED: Clients should call GetDeployment instead.
      operationId: rill.admin.v1.AdminService.GetDeploymentCredentials
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetDeploymentCredentialsResponse'
  /v1/orgs/{org}/projects/{project}/deployments:
    get:
      tags:
        - AdminService
      summary: ListDeployments
      description: ListDeployments lists deployments for a project.
      operationId: rill.admin.v1.AdminService.ListDeployments
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: environment
          in: query
          schema:
            type: string
            title: environment
        - name: userId
          in: query
          schema:
            type: string
            title: user_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListDeploymentsResponse'
    post:
      tags:
        - AdminService
      summary: CreateDeployment
      description: CreateDeployment creates a new deployment for a project.
      operationId: rill.admin.v1.AdminService.CreateDeployment
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                environment:
                  type: string
                  title: environment
              title: CreateDeploymentRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateDeploymentResponse'
  /v1/orgs/{org}/projects/{project}/hibernate:
    post:
      tags:
        - AdminService
      summary: HibernateProject
      description: HibernateProject hibernates a project by tearing down its deployments.
      operationId: rill.admin.v1.AdminService.HibernateProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.HibernateProjectResponse'
  /v1/orgs/{org}/projects/{project}/iframe:
    post:
      tags:
        - AdminService
      summary: GetIFrame
      description: GetIFrame returns the iframe URL for the given project
      operationId: rill.admin.v1.AdminService.GetIFrame
      parameters:
        - name: org
          in: path
          description: Org that owns the project to embed.
          required: true
          schema:
            type: string
            title: org
            description: Org that owns the project to embed.
        - name: project
          in: path
          description: Project that has the resource(s) to embed.
          required: true
          schema:
            type: string
            title: project
            description: Project that has the resource(s) to embed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetIFrameResponse'
  /v1/orgs/{org}/projects/{project}/invites:
    get:
      tags:
        - AdminService
      summary: ListProjectInvites
      description: ListProjectInvites lists all the project invites
      operationId: rill.admin.v1.AdminService.ListProjectInvites
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectInvitesResponse'
  /v1/orgs/{org}/projects/{project}/members:
    get:
      tags:
        - AdminService
      summary: ListProjectMemberUsers
      description: ListProjectMemberUsers lists all the project members
      operationId: rill.admin.v1.AdminService.ListProjectMemberUsers
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: role
          in: query
          description: Optionally filter by role
          schema:
            type: string
            title: role
            description: Optionally filter by role
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectMemberUsersResponse'
    post:
      tags:
        - AdminService
      summary: AddProjectMemberUser
      description: AddProjectMemberUser adds a member to the project
      operationId: rill.admin.v1.AdminService.AddProjectMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  title: email
                role:
                  type: string
                  title: role
              title: AddProjectMemberUserRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.AddProjectMemberUserResponse'
  /v1/orgs/{org}/projects/{project}/members/{email}:
    put:
      tags:
        - AdminService
      summary: SetProjectMemberUserRole
      description: SetProjectMemberUserRole sets the role for the member
      operationId: rill.admin.v1.AdminService.SetProjectMemberUserRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: SetProjectMemberUserRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetProjectMemberUserRoleResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveProjectMemberUser
      description: RemoveProjectMemberUser removes member from the project
      operationId: rill.admin.v1.AdminService.RemoveProjectMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveProjectMemberUserResponse'
  /v1/orgs/{org}/projects/{project}/redeploy:
    post:
      tags:
        - AdminService
      summary: RedeployProject
      description: |-
        RedeployProject creates a new production deployment for a project.
         If the project currently has another production deployment, the old deployment will be deprovisioned.
         This RPC can be used to redeploy a project that has been hibernated.
      operationId: rill.admin.v1.AdminService.RedeployProject
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RedeployProjectResponse'
  /v1/orgs/{org}/projects/{project}/reports:
    post:
      tags:
        - AdminService
      summary: CreateReport
      description: CreateReport adds a virtual file for a report, triggers a reconcile, and waits for the report to be added to the runtime catalog
      operationId: rill.admin.v1.AdminService.CreateReport
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  title: options
                  $ref: '#/components/schemas/rill.admin.v1.ReportOptions'
              title: CreateReportRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateReportResponse'
  /v1/orgs/{org}/projects/{project}/reports/{name}:
    put:
      tags:
        - AdminService
      summary: EditReport
      description: EditReport edits a virtual file for a UI-managed report, triggers a reconcile, and waits for the report to be updated in the runtime
      operationId: rill.admin.v1.AdminService.EditReport
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  title: options
                  $ref: '#/components/schemas/rill.admin.v1.ReportOptions'
              title: EditReportRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.EditReportResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteReport
      description: DeleteReport deletes the virtual file for a UI-managed report, triggers a reconcile, and waits for the report to be deleted in the runtime
      operationId: rill.admin.v1.AdminService.DeleteReport
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteReportResponse'
  /v1/orgs/{org}/projects/{project}/reports/{name}/trigger:
    post:
      tags:
        - AdminService
      summary: TriggerReport
      description: TriggerReport triggers an ad-hoc report run
      operationId: rill.admin.v1.AdminService.TriggerReport
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.TriggerReportResponse'
  /v1/orgs/{org}/projects/{project}/reports/{name}/unsubscribe:
    post:
      tags:
        - AdminService
      summary: UnsubscribeReport
      description: UnsubscribeReport removes the calling user from a reports recipients list
      operationId: rill.admin.v1.AdminService.UnsubscribeReport
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  title: email
                slackUser:
                  type: string
                  title: slack_user
              title: UnsubscribeReportRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UnsubscribeReportResponse'
  /v1/orgs/{org}/projects/{project}/request-access:
    post:
      tags:
        - AdminService
      summary: RequestProjectAccess
      operationId: rill.admin.v1.AdminService.RequestProjectAccess
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: RequestProjectAccessRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RequestProjectAccessResponse'
  /v1/orgs/{org}/projects/{project}/services:
    get:
      tags:
        - AdminService
      summary: ListProjectMemberServices
      description: ListProjectMemberServices returns all the services for the project for an organization
      operationId: rill.admin.v1.AdminService.ListProjectMemberServices
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectMemberServicesResponse'
  /v1/orgs/{org}/projects/{project}/services/{name}:
    delete:
      tags:
        - AdminService
      summary: RemoveProjectMemberService
      description: RemoveProjectMemberService removes the service from the project
      operationId: rill.admin.v1.AdminService.RemoveProjectMemberService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveProjectMemberServiceResponse'
  /v1/orgs/{org}/projects/{project}/services/{name}/role:
    put:
      tags:
        - AdminService
      summary: SetProjectMemberServiceRole
      description: SetProjectMemberServiceRole updates the project role for the service
      operationId: rill.admin.v1.AdminService.SetProjectMemberServiceRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: SetProjectMemberServiceRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetProjectMemberServiceRoleResponse'
  /v1/orgs/{org}/projects/{project}/tokens/magic:
    get:
      tags:
        - AdminService
      summary: ListMagicAuthTokens
      description: ListMagicAuthTokens lists all the magic auth tokens for a specific project.
      operationId: rill.admin.v1.AdminService.ListMagicAuthTokens
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListMagicAuthTokensResponse'
    post:
      tags:
        - AdminService
      summary: IssueMagicAuthToken
      description: IssueMagicAuthToken creates a "magic" auth token that provides limited access to a specific filtered dashboard in a specific project.
      operationId: rill.admin.v1.AdminService.IssueMagicAuthToken
      parameters:
        - name: org
          in: path
          description: Org that owns the project.
          required: true
          schema:
            type: string
            title: org
            description: Org that owns the project.
        - name: project
          in: path
          description: Project to create the magic auth token in.
          required: true
          schema:
            type: string
            title: project
            description: Project to create the magic auth token in.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ttlMinutes:
                  type:
                    - integer
                    - string
                  title: ttl_minutes
                  format: int64
                  description: TTL for the token in minutes. Set to 0 for no expiry. Defaults to no expiry.
                resourceType:
                  type: string
                  title: resource_type
                  description: Type of resource to grant access to.
                  deprecated: true
                resourceName:
                  type: string
                  title: resource_name
                  description: Name of the resource to grant access to.
                  deprecated: true
                filter:
                  title: filter
                  description: |-
                    Optional filter to apply as a row filter in queries.
                     This will be translated to a rill.runtime.v1.SecurityRuleRowFilter, which currently applies to metric views queries.
                  $ref: '#/components/schemas/rill.runtime.v1.Expression'
                fields:
                  type: array
                  items:
                    type: string
                  title: fields
                  description: |-
                    Optional list of fields to limit access to. If empty, no field access rule will be added.
                     This will be translated to a rill.runtime.v1.SecurityRuleFieldAccess, which currently applies to dimension and measure names for explores and metrics views.
                state:
                  type: string
                  title: state
                  description: Optional state to store with the token. Can be fetched with GetCurrentMagicAuthToken.
                displayName:
                  type: string
                  title: display_name
                  description: Optional display name to store with the token.
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/rill.admin.v1.ResourceName'
                  title: resources
                  description: list of resources to grant access to.
              title: IssueMagicAuthTokenRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.IssueMagicAuthTokenResponse'
  /v1/orgs/{org}/projects/{project}/usergroups/{usergroup}/roles:
    put:
      tags:
        - AdminService
      summary: SetProjectMemberUsergroupRole
      description: SetProjectMemberUsergroupRole sets the role for the user group
      operationId: rill.admin.v1.AdminService.SetProjectMemberUsergroupRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: SetProjectMemberUsergroupRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetProjectMemberUsergroupRoleResponse'
    post:
      tags:
        - AdminService
      summary: AddProjectMemberUsergroup
      description: AddProjectMemberUsergroupRole adds the role for the user group
      operationId: rill.admin.v1.AdminService.AddProjectMemberUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: AddProjectMemberUsergroupRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.AddProjectMemberUsergroupResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveProjectMemberUsergroup
      description: RemoveProjectMemberUsergroup revokes the project-level role for the user group
      operationId: rill.admin.v1.AdminService.RemoveProjectMemberUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveProjectMemberUsergroupResponse'
  /v1/orgs/{org}/projects/{project}/users/search:
    get:
      tags:
        - AdminService
      summary: SearchProjectUsers
      description: SearchProjectUsers returns users who has access to to a project (including org members that have access through a usergroup)
      operationId: rill.admin.v1.AdminService.SearchProjectUsers
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: emailQuery
          in: query
          schema:
            type: string
            title: email_query
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SearchProjectUsersResponse'
  /v1/orgs/{org}/projects/{project}/variables:
    get:
      tags:
        - AdminService
      summary: GetProjectVariables
      description: GetProjectVariables returns project variables.
      operationId: rill.admin.v1.AdminService.GetProjectVariables
      parameters:
        - name: org
          in: path
          description: Org the project belongs to.
          required: true
          schema:
            type: string
            title: org
            description: Org the project belongs to.
        - name: project
          in: path
          description: Project to get variables for.
          required: true
          schema:
            type: string
            title: project
            description: Project to get variables for.
        - name: environment
          in: query
          description: |-
            Environment to get the variables for.
             If empty, only variables shared across all environments are returned.
          schema:
            type: string
            title: environment
            description: |-
              Environment to get the variables for.
               If empty, only variables shared across all environments are returned.
        - name: forAllEnvironments
          in: query
          description: |-
            If true, return variable values for all environments.
             Can't be used together with the "environment" option.
          schema:
            type: boolean
            title: for_all_environments
            description: |-
              If true, return variable values for all environments.
               Can't be used together with the "environment" option.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetProjectVariablesResponse'
    put:
      tags:
        - AdminService
      summary: UpdateProjectVariables
      description: UpdateProjectVariables updates variables for a project.
      operationId: rill.admin.v1.AdminService.UpdateProjectVariables
      parameters:
        - name: org
          in: path
          description: Org the project belongs to.
          required: true
          schema:
            type: string
            title: org
            description: Org the project belongs to.
        - name: project
          in: path
          description: Project to update variables for.
          required: true
          schema:
            type: string
            title: project
            description: Project to update variables for.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                environment:
                  type: string
                  title: environment
                  description: |-
                    Environment to set the variables for.
                     If empty, the variable(s) will be used as defaults for all environments.
                variables:
                  type: object
                  title: variables
                  additionalProperties:
                    type: string
                    title: value
                  description: |-
                    New variable values.
                     It is NOT NECESSARY to pass all variables, existing variables not included in the request will be left unchanged.
                unsetVariables:
                  type: array
                  items:
                    type: string
                  title: unset_variables
                  description: Variables to delete.
              title: UpdateProjectVariablesRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateProjectVariablesResponse'
  /v1/orgs/{org}/projects/{project}/whitelisted:
    get:
      tags:
        - AdminService
      summary: ListProjectWhitelistedDomains
      description: ListWhitelistedDomains lists all the whitelisted domains of the project
      operationId: rill.admin.v1.AdminService.ListProjectWhitelistedDomains
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectWhitelistedDomainsResponse'
    post:
      tags:
        - AdminService
      summary: CreateProjectWhitelistedDomain
      description: CreateProjectWhitelistedDomain adds a domain to the project's whitelisted
      operationId: rill.admin.v1.AdminService.CreateProjectWhitelistedDomain
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  title: domain
                role:
                  type: string
                  title: role
              title: CreateProjectWhitelistedDomainRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateProjectWhitelistedDomainResponse'
  /v1/orgs/{org}/projects/{project}/whitelisted/{domain}:
    delete:
      tags:
        - AdminService
      summary: RemoveProjectWhitelistedDomain
      description: RemoveProjectWhitelistedDomain removes a domain from the project's whitelisted
      operationId: rill.admin.v1.AdminService.RemoveProjectWhitelistedDomain
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: project
          in: path
          required: true
          schema:
            type: string
            title: project
        - name: domain
          in: path
          required: true
          schema:
            type: string
            title: domain
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveProjectWhitelistedDomainResponse'
  /v1/orgs/{org}/services:
    get:
      tags:
        - AdminService
      summary: ListServices
      description: ListService returns all the services per organization
      operationId: rill.admin.v1.AdminService.ListServices
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListServicesResponse'
    post:
      tags:
        - AdminService
      summary: CreateService
      description: CreateService creates a new service per organization
      operationId: rill.admin.v1.AdminService.CreateService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  title: name
                orgRoleName:
                  type: string
                  title: org_role_name
                  description: Optional org role to assign
                project:
                  type: string
                  title: project
                  description: Optional project to assign role to
                projectRoleName:
                  type: string
                  title: project_role_name
                  description: Optional project role to assign
                attributes:
                  title: attributes
                  nullable: true
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: CreateServiceRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateServiceResponse'
  /v1/orgs/{org}/services/{name}:
    get:
      tags:
        - AdminService
      summary: GetService
      description: GetService returns information about a specific service
      operationId: rill.admin.v1.AdminService.GetService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetServiceResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteService
      description: DeleteService deletes a service per organization
      operationId: rill.admin.v1.AdminService.DeleteService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteServiceResponse'
    patch:
      tags:
        - AdminService
      summary: UpdateService
      description: UpdateService updates a service per organization
      operationId: rill.admin.v1.AdminService.UpdateService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  title: new_name
                  nullable: true
                attributes:
                  title: attributes
                  nullable: true
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: UpdateServiceRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateServiceResponse'
  /v1/orgs/{org}/services/{name}/role:
    put:
      tags:
        - AdminService
      summary: SetOrganizationMemberServiceRole
      description: SetOrganizationMemberServiceRole sets or updates the role of the service in the organization
      operationId: rill.admin.v1.AdminService.SetOrganizationMemberServiceRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: SetOrganizationMemberServiceRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetOrganizationMemberServiceRoleResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveOrganizationMemberService
      description: RemoveOrganizationMemberService removes the organization role for the service
      operationId: rill.admin.v1.AdminService.RemoveOrganizationMemberService
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveOrganizationMemberServiceResponse'
  /v1/orgs/{org}/services/{service_name}/tokens:
    get:
      tags:
        - AdminService
      summary: ListServiceAuthTokens
      description: ListServiceAuthTokens lists all the service auth tokens
      operationId: rill.admin.v1.AdminService.ListServiceAuthTokens
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: service_name
          in: path
          required: true
          schema:
            type: string
            title: service_name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListServiceAuthTokensResponse'
    post:
      tags:
        - AdminService
      summary: IssueServiceAuthToken
      description: IssueServiceAuthToken issues an access token for a service
      operationId: rill.admin.v1.AdminService.IssueServiceAuthToken
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: service_name
          in: path
          required: true
          schema:
            type: string
            title: service_name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.IssueServiceAuthTokenResponse'
  /v1/orgs/{org}/usergroups:
    get:
      tags:
        - AdminService
      summary: ListOrganizationMemberUsergroups
      description: ListOrganizationMemberUsergroups lists the org's user groups
      operationId: rill.admin.v1.AdminService.ListOrganizationMemberUsergroups
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: role
          in: query
          description: Optionally filter by role
          schema:
            type: string
            title: role
            description: Optionally filter by role
        - name: includeCounts
          in: query
          description: Optionally include counts
          schema:
            type: boolean
            title: include_counts
            description: Optionally include counts
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListOrganizationMemberUsergroupsResponse'
    post:
      tags:
        - AdminService
      summary: CreateUsergroup
      description: CreateUsergroup creates a user group in the organization
      operationId: rill.admin.v1.AdminService.CreateUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  title: name
              title: CreateUsergroupRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateUsergroupResponse'
  /v1/orgs/{org}/usergroups-for-user:
    get:
      tags:
        - AdminService
      summary: ListUsergroupsForOrganizationAndUser
      description: ListUsergroupsForOrganizationAndUser lists the user groups that an organization member user has access to.
      operationId: rill.admin.v1.AdminService.ListUsergroupsForOrganizationAndUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: userId
          in: query
          schema:
            type: string
            title: user_id
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListUsergroupsForOrganizationAndUserResponse'
  /v1/orgs/{org}/usergroups/{usergroup}:
    get:
      tags:
        - AdminService
      summary: GetUsergroup
      description: GetUsergroups returns the user group details
      operationId: rill.admin.v1.AdminService.GetUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetUsergroupResponse'
    put:
      tags:
        - AdminService
      summary: EditUsergroup
      description: EditUsergroup renames the user group
      operationId: rill.admin.v1.AdminService.EditUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  title: description
              title: EditUsergroupRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.EditUsergroupResponse'
    post:
      tags:
        - AdminService
      summary: RenameUsergroup
      description: RenameUsergroup renames the user group
      operationId: rill.admin.v1.AdminService.RenameUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  title: name
              title: RenameUsergroupRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RenameUsergroupResponse'
    delete:
      tags:
        - AdminService
      summary: DeleteUsergroup
      description: DeleteUsergroup deletes the user group from the organization
      operationId: rill.admin.v1.AdminService.DeleteUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteUsergroupResponse'
  /v1/orgs/{org}/usergroups/{usergroup}/members:
    get:
      tags:
        - AdminService
      summary: ListUsergroupMemberUsers
      description: ListUsergroupMemberUsers lists all the user group members
      operationId: rill.admin.v1.AdminService.ListUsergroupMemberUsers
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListUsergroupMemberUsersResponse'
  /v1/orgs/{org}/usergroups/{usergroup}/members/{email}:
    put:
      tags:
        - AdminService
      summary: AddUsergroupMemberUser
      description: AddUsergroupMemberUser adds a member to the user group
      operationId: rill.admin.v1.AdminService.AddUsergroupMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.AddUsergroupMemberUserResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveUsergroupMemberUser
      description: RemoveUsergroupMemberUser removes member from the user group
      operationId: rill.admin.v1.AdminService.RemoveUsergroupMemberUser
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveUsergroupMemberUserResponse'
  /v1/orgs/{org}/usergroups/{usergroup}/role:
    put:
      tags:
        - AdminService
      summary: SetOrganizationMemberUsergroupRole
      description: SetOrganizationMemberUsergroupRole sets the role for the user group
      operationId: rill.admin.v1.AdminService.SetOrganizationMemberUsergroupRole
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: SetOrganizationMemberUsergroupRoleRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetOrganizationMemberUsergroupRoleResponse'
    post:
      tags:
        - AdminService
      summary: AddOrganizationMemberUsergroup
      description: AddOrganizationMemberUsergroupRole adds the role for the user group
      operationId: rill.admin.v1.AdminService.AddOrganizationMemberUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: AddOrganizationMemberUsergroupRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.AddOrganizationMemberUsergroupResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveOrganizationMemberUsergroup
      description: RemoveOrganizationMemberUsergroup revokes the organization-level role for the user group
      operationId: rill.admin.v1.AdminService.RemoveOrganizationMemberUsergroup
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: usergroup
          in: path
          required: true
          schema:
            type: string
            title: usergroup
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveOrganizationMemberUsergroupResponse'
  /v1/orgs/{org}/whitelisted:
    get:
      tags:
        - AdminService
      summary: ListWhitelistedDomains
      description: ListWhitelistedDomains lists all the whitelisted domains for the organization
      operationId: rill.admin.v1.AdminService.ListWhitelistedDomains
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListWhitelistedDomainsResponse'
    post:
      tags:
        - AdminService
      summary: CreateWhitelistedDomain
      description: CreateWhitelistedDomain adds a domain to the whitelist
      operationId: rill.admin.v1.AdminService.CreateWhitelistedDomain
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  title: domain
                role:
                  type: string
                  title: role
              title: CreateWhitelistedDomainRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateWhitelistedDomainResponse'
  /v1/orgs/{org}/whitelisted/{domain}:
    delete:
      tags:
        - AdminService
      summary: RemoveWhitelistedDomain
      description: RemoveWhitelistedDomain removes a domain from the whitelist list
      operationId: rill.admin.v1.AdminService.RemoveWhitelistedDomain
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: domain
          in: path
          required: true
          schema:
            type: string
            title: domain
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveWhitelistedDomainResponse'
  /v1/ping:
    get:
      tags:
        - AdminService
      summary: Ping
      description: Ping returns information about the server
      operationId: rill.admin.v1.AdminService.Ping
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.PingResponse'
  /v1/project-access-request/{id}:
    get:
      tags:
        - AdminService
      summary: GetProjectAccessRequest
      operationId: rill.admin.v1.AdminService.GetProjectAccessRequest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetProjectAccessRequestResponse'
  /v1/project-access-request/{id}/approve:
    post:
      tags:
        - AdminService
      summary: ApproveProjectAccess
      operationId: rill.admin.v1.AdminService.ApproveProjectAccess
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  title: role
              title: ApproveProjectAccessRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ApproveProjectAccessResponse'
  /v1/project-access-request/{id}/deny:
    post:
      tags:
        - AdminService
      summary: DenyProjectAccess
      operationId: rill.admin.v1.AdminService.DenyProjectAccess
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DenyProjectAccessResponse'
  /v1/projects:
    get:
      tags:
        - AdminService
      summary: ListProjectsForUserByName
      description: ListProjectsForUserByName returns projects matching a name accessible by the logged in user
      operationId: rill.admin.v1.AdminService.ListProjectsForUserByName
      parameters:
        - name: name
          in: query
          schema:
            type: string
            title: name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectsForUserByNameResponse'
  /v1/projects-for-fingerprint:
    get:
      tags:
        - AdminService
      summary: ListProjectsForFingerprint
      description: |-
        ListProjectsForFingerprint lists all projects the current user has access to that match the provided local project details.
         This can be used to produce a short list of cloud projects that are likely to have been deployed from a local project.
      operationId: rill.admin.v1.AdminService.ListProjectsForFingerprint
      parameters:
        - name: directoryName
          in: query
          schema:
            type: string
            title: directory_name
        - name: gitRemote
          in: query
          schema:
            type: string
            title: git_remote
        - name: subPath
          in: query
          schema:
            type: string
            title: sub_path
        - name: rillMgdGitRemote
          in: query
          schema:
            type: string
            title: rill_mgd_git_remote
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListProjectsForFingerprintResponse'
  /v1/projects/{id}:
    get:
      tags:
        - AdminService
      summary: GetProjectByID
      description: GetProject returns information about a specific project
      operationId: rill.admin.v1.AdminService.GetProjectByID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetProjectByIDResponse'
  /v1/projects/{project_id}/alerts/meta:
    post:
      tags:
        - AdminService
      summary: GetAlertMeta
      description: GetAlertMeta returns metadata for checking an alert. It's currently only called by the alert reconciler in the runtime.
      operationId: rill.admin.v1.AdminService.GetAlertMeta
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            title: project_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetAlertMetaResponse'
  /v1/projects/{project_id}/repo/meta:
    get:
      tags:
        - AdminService
      summary: GetRepoMeta
      description: GetRepoMeta returns credentials and other metadata for accessing a project's repo
      operationId: rill.admin.v1.AdminService.GetRepoMeta
      parameters:
        - name: project_id
          in: path
          description: The project ID to get repository metadata for.
          required: true
          schema:
            type: string
            title: project_id
            description: The project ID to get repository metadata for.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetRepoMetaResponse'
  /v1/projects/{project_id}/repo/virtual:
    get:
      tags:
        - AdminService
      summary: PullVirtualRepo
      description: PullVirtualRepo fetches files from a project's virtual repo
      operationId: rill.admin.v1.AdminService.PullVirtualRepo
      parameters:
        - name: project_id
          in: path
          description: The project ID to pull virtual files for.
          required: true
          schema:
            type: string
            title: project_id
            description: The project ID to pull virtual files for.
        - name: environment
          in: query
          description: |-
            The environment to pull virtual files for.
             It is optional. If the call is made with a deployment access token, it defaults to the environment of the deployment. Otherwise, it defaults to "prod".
          schema:
            type: string
            title: environment
            description: |-
              The environment to pull virtual files for.
               It is optional. If the call is made with a deployment access token, it defaults to the environment of the deployment. Otherwise, it defaults to "prod".
        - name: pageSize
          in: query
          description: Page size for pagination.
          schema:
            type: integer
            title: page_size
            description: Page size for pagination.
        - name: pageToken
          in: query
          description: Page token for pagination.
          schema:
            type: string
            title: page_token
            description: Page token for pagination.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.PullVirtualRepoResponse'
  /v1/projects/{project_id}/reports/meta:
    post:
      tags:
        - AdminService
      summary: GetReportMeta
      description: GetReportMeta returns metadata for generating a report. It's currently only called by the report reconciler in the runtime.
      operationId: rill.admin.v1.AdminService.GetReportMeta
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            title: project_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                report:
                  type: string
                  title: report
                ownerId:
                  type: string
                  title: owner_id
                executionTime:
                  title: execution_time
                  $ref: '#/components/schemas/google.protobuf.Timestamp'
                emailRecipients:
                  type: array
                  items:
                    type: string
                  title: email_recipients
                anonRecipients:
                  type: boolean
                  title: anon_recipients
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/rill.admin.v1.ResourceName'
                  title: resources
                webOpenMode:
                  type: string
                  title: web_open_mode
                whereFilterJson:
                  type: string
                  title: where_filter_json
                accessibleFields:
                  type: array
                  items:
                    type: string
                  title: accessible_fields
              title: GetReportMetaRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetReportMetaResponse'
  /v1/roles:
    get:
      tags:
        - AdminService
      summary: ListRoles
      description: ListRoles lists all the roles available for orgs and projects.
      operationId: rill.admin.v1.AdminService.ListRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListRolesResponse'
  /v1/services/tokens/{token_id}:
    delete:
      tags:
        - AdminService
      summary: RevokeServiceAuthToken
      description: RevokeServiceAuthToken revoke a service's access token
      operationId: rill.admin.v1.AdminService.RevokeServiceAuthToken
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            title: token_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RevokeServiceAuthTokenResponse'
  /v1/superuser/billing/repair:
    post:
      tags:
        - AdminService
      summary: SudoTriggerBillingRepair
      description: SudoTriggerBillingRepair triggers billing repair jobs for orgs that doesn't have billing info and puts them on trial
      operationId: rill.admin.v1.AdminService.SudoTriggerBillingRepair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoTriggerBillingRepairRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoTriggerBillingRepairResponse'
  /v1/superuser/deployments/manager-token:
    post:
      tags:
        - AdminService
      summary: SudoIssueRuntimeManagerToken
      description: SudoIssueRuntimeManagerToken returns a runtime JWT with full manager permissions for a runtime.
      operationId: rill.admin.v1.AdminService.SudoIssueRuntimeManagerToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoIssueRuntimeManagerTokenRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoIssueRuntimeManagerTokenResponse'
  /v1/superuser/members:
    get:
      tags:
        - AdminService
      summary: ListSuperusers
      description: ListSuperusers lists all the superusers
      operationId: rill.admin.v1.AdminService.ListSuperusers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListSuperusersResponse'
    post:
      tags:
        - AdminService
      summary: SetSuperuser
      description: SetSuperuser adds/remove a superuser
      operationId: rill.admin.v1.AdminService.SetSuperuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SetSuperuserRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SetSuperuserResponse'
  /v1/superuser/organization/billing/customer_id:
    patch:
      tags:
        - AdminService
      summary: SudoUpdateOrganizationBillingCustomer
      description: SudoUpdateOrganizationBillingCustomer update the billing customer for the organization
      operationId: rill.admin.v1.AdminService.SudoUpdateOrganizationBillingCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationBillingCustomerRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationBillingCustomerResponse'
  /v1/superuser/organization/custom-domain:
    patch:
      tags:
        - AdminService
      summary: SudoUpdateOrganizationCustomDomain
      description: |-
        SudoUpdateOrganizationCustomDomain updates the custom domain for an organization.
         It only updates the custom domain in the database, which is used to ensure correct redirects.
         The DNS records and ingress TLS must be configured separately.
      operationId: rill.admin.v1.AdminService.SudoUpdateOrganizationCustomDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationCustomDomainRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationCustomDomainResponse'
  /v1/superuser/organization/trial/extend:
    post:
      tags:
        - AdminService
      summary: SudoExtendTrial
      description: SudoExtendTrial extends the trial period for an organization
      operationId: rill.admin.v1.AdminService.SudoExtendTrial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoExtendTrialRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoExtendTrialResponse'
  /v1/superuser/organizations/{org}/billing/issues/{type}:
    delete:
      tags:
        - AdminService
      summary: SudoDeleteOrganizationBillingIssue
      description: SudoDeleteOrganizationBillingIssue deletes a billing issue of a type for the organization
      operationId: rill.admin.v1.AdminService.SudoDeleteOrganizationBillingIssue
      parameters:
        - name: org
          in: path
          required: true
          schema:
            type: string
            title: org
        - name: type
          in: path
          required: true
          schema:
            title: type
            $ref: '#/components/schemas/rill.admin.v1.BillingIssueType'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoDeleteOrganizationBillingIssueResponse'
  /v1/superuser/projects/annotations:
    patch:
      tags:
        - AdminService
      summary: SudoUpdateAnnotations
      description: SudoUpdateAnnotations endpoint for superusers to update project annotations
      operationId: rill.admin.v1.AdminService.SudoUpdateAnnotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoUpdateAnnotationsRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoUpdateAnnotationsResponse'
  /v1/superuser/projects/search:
    get:
      tags:
        - AdminService
      summary: SearchProjectNames
      description: SearchProjectNames returns project names matching the pattern
      operationId: rill.admin.v1.AdminService.SearchProjectNames
      parameters:
        - name: namePattern
          in: query
          schema:
            type: string
            title: name_pattern
        - name: annotations.key
          in: query
          schema:
            type: string
            title: key
        - name: annotations.value
          in: query
          schema:
            type: string
            title: value
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SearchProjectNamesResponse'
  /v1/superuser/quotas/organization:
    patch:
      tags:
        - AdminService
      summary: SudoUpdateOrganizationQuotas
      description: SudoUpdateOrganizationQuotas update the quotas available for orgs
      operationId: rill.admin.v1.AdminService.SudoUpdateOrganizationQuotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationQuotasRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoUpdateOrganizationQuotasResponse'
  /v1/superuser/quotas/user:
    patch:
      tags:
        - AdminService
      summary: SudoUpdateUserQuotas
      description: SudoUpdateUserQuotas update the quotas for users
      operationId: rill.admin.v1.AdminService.SudoUpdateUserQuotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.SudoUpdateUserQuotasRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoUpdateUserQuotasResponse'
  /v1/superuser/resource:
    get:
      tags:
        - AdminService
      summary: SudoGetResource
      description: SudoGetResource returns details about a resource by ID lookup
      operationId: rill.admin.v1.AdminService.SudoGetResource
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            title: user_id
        - name: orgId
          in: query
          schema:
            type: string
            title: org_id
        - name: projectId
          in: query
          schema:
            type: string
            title: project_id
        - name: deploymentId
          in: query
          schema:
            type: string
            title: deployment_id
        - name: instanceId
          in: query
          schema:
            type: string
            title: instance_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SudoGetResourceResponse'
  /v1/tokens/current:
    delete:
      tags:
        - AdminService
      summary: RevokeCurrentAuthToken
      description: |-
        RevokeCurrentAuthToken revoke the current auth token.
         Deprecated: Use RevokeUserAuthToken with ID set to "current" instead.
      operationId: rill.admin.v1.AdminService.RevokeCurrentAuthToken
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RevokeCurrentAuthTokenResponse'
  /v1/tokens/represent:
    post:
      tags:
        - AdminService
      summary: IssueRepresentativeAuthToken
      description: |-
        IssueRepresentativeAuthToken returns the temporary token for given email.
         Deprecated: Use IssueUserAuthToken with the represent_email option instead.
      operationId: rill.admin.v1.AdminService.IssueRepresentativeAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.IssueRepresentativeAuthTokenRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.IssueRepresentativeAuthTokenResponse'
  /v1/users:
    get:
      tags:
        - AdminService
      summary: GetUser
      description: GetUser returns user by email
      operationId: rill.admin.v1.AdminService.GetUser
      parameters:
        - name: email
          in: query
          schema:
            type: string
            title: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetUserResponse'
  /v1/users/bookmarks:
    get:
      tags:
        - AdminService
      summary: ListBookmarks
      description: ListBookmarks lists all the bookmarks for the user and global ones for dashboard
      operationId: rill.admin.v1.AdminService.ListBookmarks
      parameters:
        - name: projectId
          in: query
          schema:
            type: string
            title: project_id
        - name: resourceKind
          in: query
          schema:
            type: string
            title: resource_kind
        - name: resourceName
          in: query
          schema:
            type: string
            title: resource_name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListBookmarksResponse'
    put:
      tags:
        - AdminService
      summary: UpdateBookmark
      description: UpdateBookmark updates a bookmark for the given user for the given project
      operationId: rill.admin.v1.AdminService.UpdateBookmark
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.UpdateBookmarkRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateBookmarkResponse'
    post:
      tags:
        - AdminService
      summary: CreateBookmark
      description: CreateBookmark creates a bookmark for the given user or for all users for the dashboard
      operationId: rill.admin.v1.AdminService.CreateBookmark
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.CreateBookmarkRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.CreateBookmarkResponse'
  /v1/users/bookmarks/{bookmark_id}:
    get:
      tags:
        - AdminService
      summary: GetBookmark
      description: GetBookmark returns the bookmark for the given user for the given project
      operationId: rill.admin.v1.AdminService.GetBookmark
      parameters:
        - name: bookmark_id
          in: path
          required: true
          schema:
            type: string
            title: bookmark_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetBookmarkResponse'
    delete:
      tags:
        - AdminService
      summary: RemoveBookmark
      description: RemoveBookmark removes the bookmark for the given user or all users
      operationId: rill.admin.v1.AdminService.RemoveBookmark
      parameters:
        - name: bookmark_id
          in: path
          required: true
          schema:
            type: string
            title: bookmark_id
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.RemoveBookmarkResponse'
  /v1/users/current:
    get:
      tags:
        - AdminService
      summary: GetCurrentUser
      description: GetCurrentUser returns the currently authenticated user (if any)
      operationId: rill.admin.v1.AdminService.GetCurrentUser
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.GetCurrentUserResponse'
  /v1/users/preferences:
    put:
      tags:
        - AdminService
      summary: UpdateUserPreferences
      description: UpdateUserPreferences updates the preferences for the user
      operationId: rill.admin.v1.AdminService.UpdateUserPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rill.admin.v1.UpdateUserPreferencesRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.UpdateUserPreferencesResponse'
  /v1/users/search:
    get:
      tags:
        - AdminService
      summary: SearchUsers
      description: GetUsersByEmail returns users by email
      operationId: rill.admin.v1.AdminService.SearchUsers
      parameters:
        - name: emailPattern
          in: query
          schema:
            type: string
            title: email_pattern
        - name: pageSize
          in: query
          schema:
            type: integer
            title: page_size
        - name: pageToken
          in: query
          schema:
            type: string
            title: page_token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.SearchUsersResponse'
  /v1/users/{email}:
    delete:
      tags:
        - AdminService
      summary: DeleteUser
      description: DeleteUser deletes the user from the organization by email
      operationId: rill.admin.v1.AdminService.DeleteUser
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            title: email
        - name: superuserForceAccess
          in: query
          schema:
            type: boolean
            title: superuser_force_access
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.DeleteUserResponse'
  /v1/users/{user_id}/tokens:
    get:
      tags:
        - AdminService
      summary: ListUserAuthTokens
      description: |-
        ListUserAuthTokens lists the current user's auth tokens.
         You can optionally pass "current" instead of the user ID to list the current user's tokens.
      operationId: rill.admin.v1.AdminService.ListUserAuthTokens
      parameters:
        - name: user_id
          in: path
          description: User ID to list auth tokens for. Set to "current" to list auth tokens for the current user.
          required: true
          schema:
            type: string
            title: user_id
            description: User ID to list auth tokens for. Set to "current" to list auth tokens for the current user.
        - name: pageSize
          in: query
          description: Page size for pagination. If not set, a default page size will be used.
          schema:
            type: integer
            title: page_size
            description: Page size for pagination. If not set, a default page size will be used.
        - name: pageToken
          in: query
          description: Page token for pagination. If set, the first page of results will be returned.
          schema:
            type: string
            title: page_token
            description: Page token for pagination. If set, the first page of results will be returned.
        - name: superuserForceAccess
          in: query
          description: Flag for superusers to override normal access checks.
          schema:
            type: boolean
            title: superuser_force_access
            description: Flag for superusers to override normal access checks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.ListUserAuthTokensResponse'
    post:
      tags:
        - AdminService
      summary: IssueUserAuthToken
      description: |-
        IssueUserAuthToken issues an access token for the current user.
         You can optionally pass "current" instead of the user ID to issue a token for the current user.
      operationId: rill.admin.v1.AdminService.IssueUserAuthToken
      parameters:
        - name: user_id
          in: path
          description: |-
            User ID to issue the auth token for.
             Set to "current" to issue an auth token for the current user.
          required: true
          schema:
            type: string
            title: user_id
            description: |-
              User ID to issue the auth token for.
               Set to "current" to issue an auth token for the current user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  title: client_id
                  description: Client ID to issue the token for.
                displayName:
                  type: string
                  title: display_name
                  description: Optional display name for the auth token.
                ttlMinutes:
                  type:
                    - integer
                    - string
                  title: ttl_minutes
                  format: int64
                  description: Optional TTL for the auth token in minutes. Set to 0 for no expiry. Defaults to no expiry.
                representEmail:
                  type: string
                  title: represent_email
                  description: |-
                    Optional email of another user to assume the identity of.
                     This is only allowed for superusers.
                superuserForceAccess:
                  type: boolean
                  title: superuser_force_access
                  description: Flag for superusers to override normal access checks.
              title: IssueUserAuthTokenRequest
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rill.admin.v1.IssueUserAuthTokenResponse'
components:
  schemas:
    google.protobuf.ListValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Value'
          title: values
          description: Repeated field of dynamically typed values.
      title: ListValue
      additionalProperties: false
      description: |-
        `ListValue` is a wrapper around a repeated field of values.

         The JSON representation for `ListValue` is JSON array.
    google.protobuf.NullValue:
      type: string
      title: NullValue
      enum:
        - NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
         `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.
    google.protobuf.Struct:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/google.protobuf.Value'
      description: |-
        `Struct` represents a structured data value, consisting of fields
         which map to dynamically typed values. In some languages, `Struct`
         might be supported by a native representation. For example, in
         scripting languages like JS a struct is represented as an
         object. The details of that representation are described together
         with the proto support for the language.

         The JSON representation for `Struct` is JSON object.
    google.protobuf.Struct.FieldsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/google.protobuf.Value'
      title: FieldsEntry
      additionalProperties: false
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    google.protobuf.Value:
      oneOf:
        - type: "null"
        - type: number
        - type: string
        - type: boolean
        - type: array
        - type: object
          additionalProperties: true
      description: |-
        `Value` represents a dynamically typed value which can be either
         null, a number, a string, a boolean, a recursive struct value, or a
         list of values. A producer of value is expected to set one of these
         variants. Absence of any variant indicates an error.

         The JSON representation for `Value` is JSON value.
    rill.admin.v1.AddOrganizationMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        email:
          type: string
          title: email
        role:
          type: string
          title: role
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: AddOrganizationMemberUserRequest
      additionalProperties: false
    rill.admin.v1.AddOrganizationMemberUserResponse:
      type: object
      properties:
        pendingSignup:
          type: boolean
          title: pending_signup
      title: AddOrganizationMemberUserResponse
      additionalProperties: false
    rill.admin.v1.AddOrganizationMemberUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        role:
          type: string
          title: role
      title: AddOrganizationMemberUsergroupRequest
      additionalProperties: false
    rill.admin.v1.AddOrganizationMemberUsergroupResponse:
      type: object
      title: AddOrganizationMemberUsergroupResponse
      additionalProperties: false
    rill.admin.v1.AddProjectMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        email:
          type: string
          title: email
        role:
          type: string
          title: role
      title: AddProjectMemberUserRequest
      additionalProperties: false
    rill.admin.v1.AddProjectMemberUserResponse:
      type: object
      properties:
        pendingSignup:
          type: boolean
          title: pending_signup
      title: AddProjectMemberUserResponse
      additionalProperties: false
    rill.admin.v1.AddProjectMemberUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        usergroup:
          type: string
          title: usergroup
        role:
          type: string
          title: role
      title: AddProjectMemberUsergroupRequest
      additionalProperties: false
    rill.admin.v1.AddProjectMemberUsergroupResponse:
      type: object
      title: AddProjectMemberUsergroupResponse
      additionalProperties: false
    rill.admin.v1.AddUsergroupMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        email:
          type: string
          title: email
      title: AddUsergroupMemberUserRequest
      additionalProperties: false
    rill.admin.v1.AddUsergroupMemberUserResponse:
      type: object
      title: AddUsergroupMemberUserResponse
      additionalProperties: false
    rill.admin.v1.AlertOptions:
      type: object
      properties:
        displayName:
          type: string
          title: display_name
        refreshCron:
          type: string
          title: refresh_cron
        refreshTimeZone:
          type: string
          title: refresh_time_zone
        intervalDuration:
          type: string
          title: interval_duration
        resolver:
          type: string
          title: resolver
        resolverProperties:
          title: resolver_properties
          $ref: '#/components/schemas/google.protobuf.Struct'
        queryName:
          type: string
          title: query_name
          description: 'DEPRECATED: Use resolver and resolver_properties instead.'
        queryArgsJson:
          type: string
          title: query_args_json
          description: 'DEPRECATED: Use resolver and resolver_properties instead.'
        metricsViewName:
          type: string
          title: metrics_view_name
        renotify:
          type: boolean
          title: renotify
        renotifyAfterSeconds:
          type: integer
          title: renotify_after_seconds
        emailRecipients:
          type: array
          items:
            type: string
          title: email_recipients
        slackUsers:
          type: array
          items:
            type: string
          title: slack_users
        slackChannels:
          type: array
          items:
            type: string
          title: slack_channels
        slackWebhooks:
          type: array
          items:
            type: string
          title: slack_webhooks
        webOpenPath:
          type: string
          title: web_open_path
          description: Annotation for the subpath of <UI host>/org/project to open for the report.
        webOpenState:
          type: string
          title: web_open_state
          description: Annotation for the base64-encoded UI state to open for the report.
      title: AlertOptions
      additionalProperties: false
    rill.admin.v1.ApproveProjectAccessRequest:
      type: object
      properties:
        id:
          type: string
          title: id
        role:
          type: string
          title: role
      title: ApproveProjectAccessRequest
      additionalProperties: false
    rill.admin.v1.ApproveProjectAccessResponse:
      type: object
      title: ApproveProjectAccessResponse
      additionalProperties: false
    rill.admin.v1.BillingIssue:
      type: object
      properties:
        org:
          type: string
          title: org
        type:
          title: type
          $ref: '#/components/schemas/rill.admin.v1.BillingIssueType'
        level:
          title: level
          $ref: '#/components/schemas/rill.admin.v1.BillingIssueLevel'
        metadata:
          title: metadata
          $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadata'
        eventTime:
          title: event_time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingIssue
      additionalProperties: false
    rill.admin.v1.BillingIssueLevel:
      type: string
      title: BillingIssueLevel
      enum:
        - BILLING_ISSUE_LEVEL_UNSPECIFIED
        - BILLING_ISSUE_LEVEL_WARNING
        - BILLING_ISSUE_LEVEL_ERROR
    rill.admin.v1.BillingIssueMetadata:
      type: object
      oneOf:
        - properties:
            neverSubscribed:
              title: never_subscribed
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataNeverSubscribed'
          title: never_subscribed
          required:
            - neverSubscribed
        - properties:
            noBillableAddress:
              title: no_billable_address
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataNoBillableAddress'
          title: no_billable_address
          required:
            - noBillableAddress
        - properties:
            noPaymentMethod:
              title: no_payment_method
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataNoPaymentMethod'
          title: no_payment_method
          required:
            - noPaymentMethod
        - properties:
            onTrial:
              title: on_trial
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataOnTrial'
          title: on_trial
          required:
            - onTrial
        - properties:
            paymentFailed:
              title: payment_failed
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataPaymentFailed'
          title: payment_failed
          required:
            - paymentFailed
        - properties:
            subscriptionCancelled:
              title: subscription_cancelled
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataSubscriptionCancelled'
          title: subscription_cancelled
          required:
            - subscriptionCancelled
        - properties:
            trialEnded:
              title: trial_ended
              $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataTrialEnded'
          title: trial_ended
          required:
            - trialEnded
      title: BillingIssueMetadata
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataNeverSubscribed:
      type: object
      title: BillingIssueMetadataNeverSubscribed
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataNoBillableAddress:
      type: object
      title: BillingIssueMetadataNoBillableAddress
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataNoPaymentMethod:
      type: object
      title: BillingIssueMetadataNoPaymentMethod
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataOnTrial:
      type: object
      properties:
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        gracePeriodEndDate:
          title: grace_period_end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingIssueMetadataOnTrial
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataPaymentFailed:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.BillingIssueMetadataPaymentFailedMeta'
          title: invoices
      title: BillingIssueMetadataPaymentFailed
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataPaymentFailedMeta:
      type: object
      properties:
        invoiceId:
          type: string
          title: invoice_id
        invoiceNumber:
          type: string
          title: invoice_number
        invoiceUrl:
          type: string
          title: invoice_url
        amountDue:
          type: string
          title: amount_due
        currency:
          type: string
          title: currency
        dueDate:
          title: due_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        failedOn:
          title: failed_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        gracePeriodEndDate:
          title: grace_period_end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingIssueMetadataPaymentFailedMeta
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataSubscriptionCancelled:
      type: object
      properties:
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingIssueMetadataSubscriptionCancelled
      additionalProperties: false
    rill.admin.v1.BillingIssueMetadataTrialEnded:
      type: object
      properties:
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        gracePeriodEndDate:
          title: grace_period_end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingIssueMetadataTrialEnded
      additionalProperties: false
    rill.admin.v1.BillingIssueType:
      type: string
      title: BillingIssueType
      enum:
        - BILLING_ISSUE_TYPE_UNSPECIFIED
        - BILLING_ISSUE_TYPE_ON_TRIAL
        - BILLING_ISSUE_TYPE_TRIAL_ENDED
        - BILLING_ISSUE_TYPE_NO_PAYMENT_METHOD
        - BILLING_ISSUE_TYPE_NO_BILLABLE_ADDRESS
        - BILLING_ISSUE_TYPE_PAYMENT_FAILED
        - BILLING_ISSUE_TYPE_SUBSCRIPTION_CANCELLED
        - BILLING_ISSUE_TYPE_NEVER_SUBSCRIBED
    rill.admin.v1.BillingPlan:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        planType:
          title: plan_type
          $ref: '#/components/schemas/rill.admin.v1.BillingPlanType'
        displayName:
          type: string
          title: display_name
        description:
          type: string
          title: description
        trialPeriodDays:
          type: integer
          title: trial_period_days
        default:
          type: boolean
          title: default
        quotas:
          title: quotas
          $ref: '#/components/schemas/rill.admin.v1.Quotas'
        public:
          type: boolean
          title: public
          description: TODO expose pricing information
      title: BillingPlan
      additionalProperties: false
    rill.admin.v1.BillingPlanType:
      type: string
      title: BillingPlanType
      enum:
        - BILLING_PLAN_TYPE_UNSPECIFIED
        - BILLING_PLAN_TYPE_TRIAL
        - BILLING_PLAN_TYPE_TEAM
        - BILLING_PLAN_TYPE_MANAGED
        - BILLING_PLAN_TYPE_ENTERPRISE
    rill.admin.v1.Bookmark:
      type: object
      properties:
        id:
          type: string
          title: id
        displayName:
          type: string
          title: display_name
        description:
          type: string
          title: description
        data:
          type: string
          title: data
          format: byte
        resourceKind:
          type: string
          title: resource_kind
        resourceName:
          type: string
          title: resource_name
        projectId:
          type: string
          title: project_id
        userId:
          type: string
          title: user_id
        default:
          type: boolean
          title: default
        shared:
          type: boolean
          title: shared
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Bookmark
      additionalProperties: false
    rill.admin.v1.CancelBillingSubscriptionRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: CancelBillingSubscriptionRequest
      additionalProperties: false
    rill.admin.v1.CancelBillingSubscriptionResponse:
      type: object
      title: CancelBillingSubscriptionResponse
      additionalProperties: false
    rill.admin.v1.ConnectProjectToGithubRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        remote:
          type: string
          title: remote
      title: ConnectProjectToGithubRequest
      additionalProperties: false
    rill.admin.v1.ConnectProjectToGithubResponse:
      type: object
      title: ConnectProjectToGithubResponse
      additionalProperties: false
    rill.admin.v1.CreateAlertRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.AlertOptions'
      title: CreateAlertRequest
      additionalProperties: false
    rill.admin.v1.CreateAlertResponse:
      type: object
      properties:
        name:
          type: string
          title: name
      title: CreateAlertResponse
      additionalProperties: false
    rill.admin.v1.CreateAssetRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        type:
          type: string
          title: type
        name:
          type: string
          title: name
          description: Eg. "rilldata__project_name"
        extension:
          type: string
          title: extension
          description: Eg. ".tar.gz"
        public:
          type: boolean
          title: public
        estimatedSizeBytes:
          type:
            - integer
            - string
          title: estimated_size_bytes
          format: int64
      title: CreateAssetRequest
      additionalProperties: false
    rill.admin.v1.CreateAssetResponse:
      type: object
      properties:
        assetId:
          type: string
          title: asset_id
        signedUrl:
          type: string
          title: signed_url
        signingHeaders:
          type: object
          title: signing_headers
          additionalProperties:
            type: string
            title: value
      title: CreateAssetResponse
      additionalProperties: false
    rill.admin.v1.CreateAssetResponse.SigningHeadersEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: SigningHeadersEntry
      additionalProperties: false
    rill.admin.v1.CreateBookmarkRequest:
      type: object
      properties:
        displayName:
          type: string
          title: display_name
        description:
          type: string
          title: description
        data:
          type: string
          title: data
          format: byte
        resourceKind:
          type: string
          title: resource_kind
        resourceName:
          type: string
          title: resource_name
        projectId:
          type: string
          title: project_id
        default:
          type: boolean
          title: default
        shared:
          type: boolean
          title: shared
      title: CreateBookmarkRequest
      additionalProperties: false
    rill.admin.v1.CreateBookmarkResponse:
      type: object
      properties:
        bookmark:
          title: bookmark
          $ref: '#/components/schemas/rill.admin.v1.Bookmark'
      title: CreateBookmarkResponse
      additionalProperties: false
    rill.admin.v1.CreateDeploymentRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        environment:
          type: string
          title: environment
      title: CreateDeploymentRequest
      additionalProperties: false
    rill.admin.v1.CreateDeploymentResponse:
      type: object
      properties:
        deployment:
          title: deployment
          $ref: '#/components/schemas/rill.admin.v1.Deployment'
      title: CreateDeploymentResponse
      additionalProperties: false
    rill.admin.v1.CreateManagedGitRepoRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        name:
          type: string
          title: name
          description: "name of the repo to create. \n Note: The final name will be suffixed with a random string to ensure uniqueness."
      title: CreateManagedGitRepoRequest
      additionalProperties: false
    rill.admin.v1.CreateManagedGitRepoResponse:
      type: object
      properties:
        remote:
          type: string
          title: remote
        username:
          type: string
          title: username
        password:
          type: string
          title: password
        defaultBranch:
          type: string
          title: default_branch
        passwordExpiresAt:
          title: password_expires_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: CreateManagedGitRepoResponse
      additionalProperties: false
    rill.admin.v1.CreateOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        displayName:
          type: string
          title: display_name
      title: CreateOrganizationRequest
      additionalProperties: false
    rill.admin.v1.CreateOrganizationResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
      title: CreateOrganizationResponse
      additionalProperties: false
    rill.admin.v1.CreateProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        description:
          type: string
          title: description
        public:
          type: boolean
          title: public
        directoryName:
          type: string
          title: directory_name
          description: |-
            directory_name should be the most recently observed local directory name for the project.
             See ListProjectsForFingerprint for more context.
        provisioner:
          type: string
          title: provisioner
        prodSlots:
          type:
            - integer
            - string
          title: prod_slots
          format: int64
        subpath:
          type: string
          title: subpath
        prodBranch:
          type: string
          title: prod_branch
        gitRemote:
          type: string
          title: git_remote
          description: |-
            git_remote is set for projects whose project files are stored in Git.
             It currently only supports Github remotes. It should be a HTTPS remote ending in .git for github.com.
             Either git_remote or archive_asset_id should be set.
        archiveAssetId:
          type: string
          title: archive_asset_id
          description: archive_asset_id is set for projects whose project files are not stored in github but are managed by rill.
        prodVersion:
          type: string
          title: prod_version
        skipDeploy:
          type: boolean
          title: skip_deploy
      title: CreateProjectRequest
      additionalProperties: false
    rill.admin.v1.CreateProjectResponse:
      type: object
      properties:
        project:
          title: project
          $ref: '#/components/schemas/rill.admin.v1.Project'
      title: CreateProjectResponse
      additionalProperties: false
    rill.admin.v1.CreateProjectWhitelistedDomainRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        domain:
          type: string
          title: domain
        role:
          type: string
          title: role
      title: CreateProjectWhitelistedDomainRequest
      additionalProperties: false
    rill.admin.v1.CreateProjectWhitelistedDomainResponse:
      type: object
      title: CreateProjectWhitelistedDomainResponse
      additionalProperties: false
    rill.admin.v1.CreateReportRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.ReportOptions'
      title: CreateReportRequest
      additionalProperties: false
    rill.admin.v1.CreateReportResponse:
      type: object
      properties:
        name:
          type: string
          title: name
      title: CreateReportResponse
      additionalProperties: false
    rill.admin.v1.CreateServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
        orgRoleName:
          type: string
          title: org_role_name
          description: Optional org role to assign
        project:
          type: string
          title: project
          description: Optional project to assign role to
        projectRoleName:
          type: string
          title: project_role_name
          description: Optional project role to assign
        attributes:
          title: attributes
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Struct'
      title: CreateServiceRequest
      additionalProperties: false
    rill.admin.v1.CreateServiceResponse:
      type: object
      properties:
        service:
          title: service
          $ref: '#/components/schemas/rill.admin.v1.Service'
      title: CreateServiceResponse
      additionalProperties: false
    rill.admin.v1.CreateUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        name:
          type: string
          title: name
      title: CreateUsergroupRequest
      additionalProperties: false
    rill.admin.v1.CreateUsergroupResponse:
      type: object
      properties:
        usergroup:
          title: usergroup
          $ref: '#/components/schemas/rill.admin.v1.Usergroup'
      title: CreateUsergroupResponse
      additionalProperties: false
    rill.admin.v1.CreateWhitelistedDomainRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        domain:
          type: string
          title: domain
        role:
          type: string
          title: role
      title: CreateWhitelistedDomainRequest
      additionalProperties: false
    rill.admin.v1.CreateWhitelistedDomainResponse:
      type: object
      title: CreateWhitelistedDomainResponse
      additionalProperties: false
    rill.admin.v1.DeleteAlertRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
      title: DeleteAlertRequest
      additionalProperties: false
    rill.admin.v1.DeleteAlertResponse:
      type: object
      title: DeleteAlertResponse
      additionalProperties: false
    rill.admin.v1.DeleteDeploymentRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: DeleteDeploymentRequest
      additionalProperties: false
    rill.admin.v1.DeleteDeploymentResponse:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: DeleteDeploymentResponse
      additionalProperties: false
    rill.admin.v1.DeleteOrganizationRequest:
      type: object
      properties:
        org:
          type: string
          title: org
      title: DeleteOrganizationRequest
      additionalProperties: false
    rill.admin.v1.DeleteOrganizationResponse:
      type: object
      title: DeleteOrganizationResponse
      additionalProperties: false
    rill.admin.v1.DeleteProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
      title: DeleteProjectRequest
      additionalProperties: false
    rill.admin.v1.DeleteProjectResponse:
      type: object
      properties:
        id:
          type: string
          title: id
      title: DeleteProjectResponse
      additionalProperties: false
    rill.admin.v1.DeleteReportRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
      title: DeleteReportRequest
      additionalProperties: false
    rill.admin.v1.DeleteReportResponse:
      type: object
      title: DeleteReportResponse
      additionalProperties: false
    rill.admin.v1.DeleteServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
      title: DeleteServiceRequest
      additionalProperties: false
    rill.admin.v1.DeleteServiceResponse:
      type: object
      properties:
        service:
          title: service
          $ref: '#/components/schemas/rill.admin.v1.Service'
      title: DeleteServiceResponse
      additionalProperties: false
    rill.admin.v1.DeleteUserRequest:
      type: object
      properties:
        email:
          type: string
          title: email
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: DeleteUserRequest
      additionalProperties: false
    rill.admin.v1.DeleteUserResponse:
      type: object
      title: DeleteUserResponse
      additionalProperties: false
    rill.admin.v1.DeleteUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
      title: DeleteUsergroupRequest
      additionalProperties: false
    rill.admin.v1.DeleteUsergroupResponse:
      type: object
      title: DeleteUsergroupResponse
      additionalProperties: false
    rill.admin.v1.DenyProjectAccessRequest:
      type: object
      properties:
        id:
          type: string
          title: id
      title: DenyProjectAccessRequest
      additionalProperties: false
    rill.admin.v1.DenyProjectAccessResponse:
      type: object
      title: DenyProjectAccessResponse
      additionalProperties: false
    rill.admin.v1.Deployment:
      type: object
      properties:
        id:
          type: string
          title: id
        projectId:
          type: string
          title: project_id
        ownerUserId:
          type: string
          title: owner_user_id
        environment:
          type: string
          title: environment
        branch:
          type: string
          title: branch
        runtimeHost:
          type: string
          title: runtime_host
        runtimeInstanceId:
          type: string
          title: runtime_instance_id
        status:
          title: status
          $ref: '#/components/schemas/rill.admin.v1.DeploymentStatus'
        statusMessage:
          type: string
          title: status_message
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Deployment
      additionalProperties: false
    rill.admin.v1.DeploymentStatus:
      type: string
      title: DeploymentStatus
      enum:
        - DEPLOYMENT_STATUS_UNSPECIFIED
        - DEPLOYMENT_STATUS_PENDING
        - DEPLOYMENT_STATUS_OK
        - DEPLOYMENT_STATUS_ERROR
        - DEPLOYMENT_STATUS_STOPPED
    rill.admin.v1.EditAlertRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.AlertOptions'
      title: EditAlertRequest
      additionalProperties: false
    rill.admin.v1.EditAlertResponse:
      type: object
      title: EditAlertResponse
      additionalProperties: false
    rill.admin.v1.EditReportRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.ReportOptions'
      title: EditReportRequest
      additionalProperties: false
    rill.admin.v1.EditReportResponse:
      type: object
      title: EditReportResponse
      additionalProperties: false
    rill.admin.v1.EditUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        description:
          type: string
          title: description
      title: EditUsergroupRequest
      additionalProperties: false
    rill.admin.v1.EditUsergroupResponse:
      type: object
      title: EditUsergroupResponse
      additionalProperties: false
    rill.admin.v1.GenerateAlertYAMLRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.AlertOptions'
      title: GenerateAlertYAMLRequest
      additionalProperties: false
    rill.admin.v1.GenerateAlertYAMLResponse:
      type: object
      properties:
        yaml:
          type: string
          title: yaml
      title: GenerateAlertYAMLResponse
      additionalProperties: false
    rill.admin.v1.GenerateReportYAMLRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        options:
          title: options
          $ref: '#/components/schemas/rill.admin.v1.ReportOptions'
      title: GenerateReportYAMLRequest
      additionalProperties: false
    rill.admin.v1.GenerateReportYAMLResponse:
      type: object
      properties:
        yaml:
          type: string
          title: yaml
      title: GenerateReportYAMLResponse
      additionalProperties: false
    rill.admin.v1.GetAlertMetaRequest:
      type: object
      allOf:
        - properties:
            projectId:
              type: string
              title: project_id
            alert:
              type: string
              title: alert
            annotations:
              type: object
              title: annotations
              additionalProperties:
                type: string
                title: value
        - oneOf:
            - properties:
                queryForUserEmail:
                  type: string
                  title: query_for_user_email
              title: query_for_user_email
              required:
                - queryForUserEmail
            - properties:
                queryForUserId:
                  type: string
                  title: query_for_user_id
              title: query_for_user_id
              required:
                - queryForUserId
      title: GetAlertMetaRequest
      additionalProperties: false
    rill.admin.v1.GetAlertMetaRequest.AnnotationsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: AnnotationsEntry
      additionalProperties: false
    rill.admin.v1.GetAlertMetaResponse:
      type: object
      properties:
        openUrl:
          type: string
          title: open_url
        editUrl:
          type: string
          title: edit_url
        queryForAttributes:
          title: query_for_attributes
          $ref: '#/components/schemas/google.protobuf.Struct'
      title: GetAlertMetaResponse
      additionalProperties: false
    rill.admin.v1.GetAlertYAMLRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
      title: GetAlertYAMLRequest
      additionalProperties: false
    rill.admin.v1.GetAlertYAMLResponse:
      type: object
      properties:
        yaml:
          type: string
          title: yaml
      title: GetAlertYAMLResponse
      additionalProperties: false
    rill.admin.v1.GetBillingProjectCredentialsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
      title: GetBillingProjectCredentialsRequest
      additionalProperties: false
    rill.admin.v1.GetBillingProjectCredentialsResponse:
      type: object
      properties:
        runtimeHost:
          type: string
          title: runtime_host
        instanceId:
          type: string
          title: instance_id
        accessToken:
          type: string
          title: access_token
        ttlSeconds:
          type: integer
          title: ttl_seconds
      title: GetBillingProjectCredentialsResponse
      additionalProperties: false
    rill.admin.v1.GetBillingSubscriptionRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: GetBillingSubscriptionRequest
      additionalProperties: false
    rill.admin.v1.GetBillingSubscriptionResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
        subscription:
          title: subscription
          $ref: '#/components/schemas/rill.admin.v1.Subscription'
        billingPortalUrl:
          type: string
          title: billing_portal_url
      title: GetBillingSubscriptionResponse
      additionalProperties: false
    rill.admin.v1.GetBookmarkRequest:
      type: object
      properties:
        bookmarkId:
          type: string
          title: bookmark_id
      title: GetBookmarkRequest
      additionalProperties: false
    rill.admin.v1.GetBookmarkResponse:
      type: object
      properties:
        bookmark:
          title: bookmark
          $ref: '#/components/schemas/rill.admin.v1.Bookmark'
      title: GetBookmarkResponse
      additionalProperties: false
    rill.admin.v1.GetCloneCredentialsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: GetCloneCredentialsRequest
      additionalProperties: false
    rill.admin.v1.GetCloneCredentialsResponse:
      type: object
      properties:
        gitRepoUrl:
          type: string
          title: git_repo_url
        gitUsername:
          type: string
          title: git_username
        gitPassword:
          type: string
          title: git_password
        gitPasswordExpiresAt:
          title: git_password_expires_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        gitSubpath:
          type: string
          title: git_subpath
        gitProdBranch:
          type: string
          title: git_prod_branch
        gitManagedRepo:
          type: boolean
          title: git_managed_repo
        archiveDownloadUrl:
          type: string
          title: archive_download_url
          description: either archive_download_url or git related details will be set
      title: GetCloneCredentialsResponse
      additionalProperties: false
    rill.admin.v1.GetCurrentMagicAuthTokenRequest:
      type: object
      title: GetCurrentMagicAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.GetCurrentMagicAuthTokenResponse:
      type: object
      properties:
        token:
          title: token
          $ref: '#/components/schemas/rill.admin.v1.MagicAuthToken'
      title: GetCurrentMagicAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.GetCurrentUserRequest:
      type: object
      title: GetCurrentUserRequest
      additionalProperties: false
    rill.admin.v1.GetCurrentUserResponse:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/rill.admin.v1.User'
        preferences:
          title: preferences
          $ref: '#/components/schemas/rill.admin.v1.UserPreferences'
      title: GetCurrentUserResponse
      additionalProperties: false
    rill.admin.v1.GetDeploymentCredentialsRequest:
      type: object
      allOf:
        - properties:
            org:
              type: string
              title: org
            project:
              type: string
              title: project
            branch:
              type: string
              title: branch
            ttlSeconds:
              type: integer
              title: ttl_seconds
        - oneOf:
            - properties:
                attributes:
                  title: attributes
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: attributes
              required:
                - attributes
            - properties:
                userEmail:
                  type: string
                  title: user_email
              title: user_email
              required:
                - userEmail
            - properties:
                userId:
                  type: string
                  title: user_id
              title: user_id
              required:
                - userId
      title: GetDeploymentCredentialsRequest
      additionalProperties: false
    rill.admin.v1.GetDeploymentCredentialsResponse:
      type: object
      properties:
        runtimeHost:
          type: string
          title: runtime_host
        instanceId:
          type: string
          title: instance_id
        accessToken:
          type: string
          title: access_token
        ttlSeconds:
          type: integer
          title: ttl_seconds
      title: GetDeploymentCredentialsResponse
      additionalProperties: false
    rill.admin.v1.GetDeploymentRequest:
      type: object
      allOf:
        - properties:
            deploymentId:
              type: string
              title: deployment_id
            accessTokenTtlSeconds:
              type: integer
              title: access_token_ttl_seconds
        - oneOf:
            - properties:
                attributes:
                  title: attributes
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: attributes
              required:
                - attributes
            - properties:
                userEmail:
                  type: string
                  title: user_email
              title: user_email
              required:
                - userEmail
            - properties:
                userId:
                  type: string
                  title: user_id
              title: user_id
              required:
                - userId
      title: GetDeploymentRequest
      additionalProperties: false
    rill.admin.v1.GetDeploymentResponse:
      type: object
      properties:
        runtimeHost:
          type: string
          title: runtime_host
        instanceId:
          type: string
          title: instance_id
        accessToken:
          type: string
          title: access_token
        ttlSeconds:
          type: integer
          title: ttl_seconds
      title: GetDeploymentResponse
      additionalProperties: false
    rill.admin.v1.GetGithubRepoStatusRequest:
      type: object
      properties:
        remote:
          type: string
          title: remote
      title: GetGithubRepoStatusRequest
      additionalProperties: false
    rill.admin.v1.GetGithubRepoStatusResponse:
      type: object
      properties:
        hasAccess:
          type: boolean
          title: has_access
        grantAccessUrl:
          type: string
          title: grant_access_url
        defaultBranch:
          type: string
          title: default_branch
      title: GetGithubRepoStatusResponse
      additionalProperties: false
    rill.admin.v1.GetGithubUserStatusRequest:
      type: object
      title: GetGithubUserStatusRequest
      additionalProperties: false
    rill.admin.v1.GetGithubUserStatusResponse:
      type: object
      properties:
        hasAccess:
          type: boolean
          title: has_access
        grantAccessUrl:
          type: string
          title: grant_access_url
        accessToken:
          type: string
          title: access_token
        account:
          type: string
          title: account
        userInstallationPermission:
          title: user_installation_permission
          $ref: '#/components/schemas/rill.admin.v1.GithubPermission'
        organizationInstallationPermissions:
          type: object
          title: organization_installation_permissions
          additionalProperties:
            title: value
            $ref: '#/components/schemas/rill.admin.v1.GithubPermission'
        orgs:
          type: array
          items:
            type: string
            deprecated: true
          title: orgs
          description: 'DEPRECATED: Use organization_installation_permissions instead.'
          deprecated: true
      title: GetGithubUserStatusResponse
      additionalProperties: false
    rill.admin.v1.GetGithubUserStatusResponse.OrganizationInstallationPermissionsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/rill.admin.v1.GithubPermission'
      title: OrganizationInstallationPermissionsEntry
      additionalProperties: false
    rill.admin.v1.GetIFrameRequest:
      type: object
      allOf:
        - properties:
            org:
              type: string
              title: org
              description: Org that owns the project to embed.
            project:
              type: string
              title: project
              description: Project that has the resource(s) to embed.
            branch:
              type: string
              title: branch
              description: Branch to embed. If not set, the production branch is used.
            ttlSeconds:
              type: integer
              title: ttl_seconds
              description: TTL for the iframe's access token. If not set, defaults to 24 hours.
            type:
              type: string
              title: type
              description: Type of resource to embed. If not set, defaults to "rill.runtime.v1.Explore".
            kind:
              type: string
              title: kind
              description: 'Deprecated: Alias for `type`.'
            resource:
              type: string
              title: resource
              description: Name of the resource to embed. This should identify a resource that is valid for embedding, such as a dashboard or component.
            theme:
              type: string
              title: theme
              description: Theme to use for the embedded resource.
            navigation:
              type: boolean
              title: navigation
              description: Navigation denotes whether navigation between different resources should be enabled in the embed.
            state:
              type: string
              title: state
              description: Blob containing UI state for rendering the initial embed. Not currently supported.
            query:
              type: object
              title: query
              additionalProperties:
                type: string
                title: value
              description: 'DEPRECATED: Additional parameters to set outright in the generated URL query.'
        - oneOf:
            - properties:
                attributes:
                  title: attributes
                  description: If set, will use the provided attributes outright.
                  $ref: '#/components/schemas/google.protobuf.Struct'
              title: attributes
              required:
                - attributes
            - properties:
                userEmail:
                  type: string
                  title: user_email
                  description: If set, will generate attributes corresponding to a user with this email.
              title: user_email
              required:
                - userEmail
            - properties:
                userId:
                  type: string
                  title: user_id
                  description: If set, will use the attributes of the user with this ID.
              title: user_id
              required:
                - userId
      title: GetIFrameRequest
      additionalProperties: false
      description: GetIFrameRequest is the request payload for AdminService.GetIFrame.
    rill.admin.v1.GetIFrameRequest.QueryEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: QueryEntry
      additionalProperties: false
    rill.admin.v1.GetIFrameResponse:
      type: object
      properties:
        iframeSrc:
          type: string
          title: iframe_src
        runtimeHost:
          type: string
          title: runtime_host
        instanceId:
          type: string
          title: instance_id
        accessToken:
          type: string
          title: access_token
        ttlSeconds:
          type: integer
          title: ttl_seconds
      title: GetIFrameResponse
      additionalProperties: false
    rill.admin.v1.GetOrganizationNameForDomainRequest:
      type: object
      properties:
        domain:
          type: string
          title: domain
      title: GetOrganizationNameForDomainRequest
      additionalProperties: false
    rill.admin.v1.GetOrganizationNameForDomainResponse:
      type: object
      properties:
        name:
          type: string
          title: name
      title: GetOrganizationNameForDomainResponse
      additionalProperties: false
    rill.admin.v1.GetOrganizationRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: GetOrganizationRequest
      additionalProperties: false
    rill.admin.v1.GetOrganizationResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
        permissions:
          title: permissions
          $ref: '#/components/schemas/rill.admin.v1.OrganizationPermissions'
      title: GetOrganizationResponse
      additionalProperties: false
    rill.admin.v1.GetPaymentsPortalURLRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        returnUrl:
          type: string
          title: return_url
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: GetPaymentsPortalURLRequest
      additionalProperties: false
    rill.admin.v1.GetPaymentsPortalURLResponse:
      type: object
      properties:
        url:
          type: string
          title: url
      title: GetPaymentsPortalURLResponse
      additionalProperties: false
    rill.admin.v1.GetProjectAccessRequestRequest:
      type: object
      properties:
        id:
          type: string
          title: id
      title: GetProjectAccessRequestRequest
      additionalProperties: false
    rill.admin.v1.GetProjectAccessRequestResponse:
      type: object
      properties:
        email:
          type: string
          title: email
      title: GetProjectAccessRequestResponse
      additionalProperties: false
    rill.admin.v1.GetProjectByIDRequest:
      type: object
      properties:
        id:
          type: string
          title: id
      title: GetProjectByIDRequest
      additionalProperties: false
    rill.admin.v1.GetProjectByIDResponse:
      type: object
      properties:
        project:
          title: project
          $ref: '#/components/schemas/rill.admin.v1.Project'
      title: GetProjectByIDResponse
      additionalProperties: false
    rill.admin.v1.GetProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        accessTokenTtlSeconds:
          type: integer
          title: access_token_ttl_seconds
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
        issueSuperuserToken:
          type: boolean
          title: issue_superuser_token
      title: GetProjectRequest
      additionalProperties: false
    rill.admin.v1.GetProjectResponse:
      type: object
      properties:
        project:
          title: project
          $ref: '#/components/schemas/rill.admin.v1.Project'
        prodDeployment:
          title: prod_deployment
          $ref: '#/components/schemas/rill.admin.v1.Deployment'
        jwt:
          type: string
          title: jwt
        projectPermissions:
          title: project_permissions
          $ref: '#/components/schemas/rill.admin.v1.ProjectPermissions'
      title: GetProjectResponse
      additionalProperties: false
    rill.admin.v1.GetProjectVariablesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
          description: Org the project belongs to.
        project:
          type: string
          title: project
          description: Project to get variables for.
        environment:
          type: string
          title: environment
          description: |-
            Environment to get the variables for.
             If empty, only variables shared across all environments are returned.
        forAllEnvironments:
          type: boolean
          title: for_all_environments
          description: |-
            If true, return variable values for all environments.
             Can't be used together with the "environment" option.
      title: GetProjectVariablesRequest
      additionalProperties: false
    rill.admin.v1.GetProjectVariablesResponse:
      type: object
      properties:
        variables:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectVariable'
          title: variables
        variablesMap:
          type: object
          title: variables_map
          additionalProperties:
            type: string
            title: value
          description: |-
            Deprecated: Populated for backwards compatibility.
             (Renamed from "variables" to "variables_map").
      title: GetProjectVariablesResponse
      additionalProperties: false
    rill.admin.v1.GetProjectVariablesResponse.VariablesMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: VariablesMapEntry
      additionalProperties: false
    rill.admin.v1.GetRepoMetaRequest:
      type: object
      properties:
        projectId:
          type: string
          title: project_id
          description: The project ID to get repository metadata for.
      title: GetRepoMetaRequest
      additionalProperties: false
    rill.admin.v1.GetRepoMetaResponse:
      type: object
      properties:
        expiresOn:
          title: expires_on
          description: How long the returned config is valid for. Clients should call GetRepoMeta again after this time.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        lastUpdatedOn:
          title: last_updated_on
          description: When the returned config was last modified. This covers all fields in the response except the ephemeral credentials embedded in git_url and archive_download_url.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        gitUrl:
          type: string
          title: git_url
          description: |-
            Git remote for cloning (and maybe pushing) a Git repository.
             The URL uses HTTPS with embedded username/password.
        gitSubpath:
          type: string
          title: git_subpath
          description: Optional subpath within the Git repository to use as the project root.
        gitBranch:
          type: string
          title: git_branch
          description: The branch to use for the deployment.
        gitEditBranch:
          type: string
          title: git_edit_branch
          description: |-
            A unique branch name generated for temporary/ephemeral use in edit mode where files may be mutated.
             This enables checkpointing progress across hibernations and also more easily pinning to a specific commit of the base branch to delay conflict resolution.
        archiveDownloadUrl:
          type: string
          title: archive_download_url
          description: Signed URL for downloading a tarball of project files. If this is set, the git_* fields will be empty (and vice versa).
        archiveId:
          type: string
          title: archive_id
          description: A stable ID for the archive returned from archive_download_url.
        archiveCreatedOn:
          title: archive_created_on
          description: The creation time of the archive returned from archive_download_url.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetRepoMetaResponse
      additionalProperties: false
    rill.admin.v1.GetReportMetaRequest:
      type: object
      properties:
        projectId:
          type: string
          title: project_id
        report:
          type: string
          title: report
        ownerId:
          type: string
          title: owner_id
        executionTime:
          title: execution_time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        emailRecipients:
          type: array
          items:
            type: string
          title: email_recipients
        anonRecipients:
          type: boolean
          title: anon_recipients
        resources:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ResourceName'
          title: resources
        webOpenMode:
          type: string
          title: web_open_mode
        whereFilterJson:
          type: string
          title: where_filter_json
        accessibleFields:
          type: array
          items:
            type: string
          title: accessible_fields
      title: GetReportMetaRequest
      additionalProperties: false
    rill.admin.v1.GetReportMetaResponse:
      type: object
      properties:
        recipientUrls:
          type: object
          title: recipient_urls
          additionalProperties:
            title: value
            $ref: '#/components/schemas/rill.admin.v1.GetReportMetaResponse.URLs'
      title: GetReportMetaResponse
      additionalProperties: false
    rill.admin.v1.GetReportMetaResponse.RecipientUrlsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/rill.admin.v1.GetReportMetaResponse.URLs'
      title: RecipientUrlsEntry
      additionalProperties: false
    rill.admin.v1.GetReportMetaResponse.URLs:
      type: object
      properties:
        openUrl:
          type: string
          title: open_url
        exportUrl:
          type: string
          title: export_url
        editUrl:
          type: string
          title: edit_url
        unsubscribeUrl:
          type: string
          title: unsubscribe_url
      title: URLs
      additionalProperties: false
    rill.admin.v1.GetServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
      title: GetServiceRequest
      additionalProperties: false
    rill.admin.v1.GetServiceResponse:
      type: object
      properties:
        service:
          title: service
          $ref: '#/components/schemas/rill.admin.v1.OrganizationMemberService'
        projectMemberships:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectMemberService'
          title: project_memberships
          description: All projects that the service is a member of
      title: GetServiceResponse
      additionalProperties: false
    rill.admin.v1.GetUserRequest:
      type: object
      properties:
        email:
          type: string
          title: email
      title: GetUserRequest
      additionalProperties: false
    rill.admin.v1.GetUserResponse:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/rill.admin.v1.User'
      title: GetUserResponse
      additionalProperties: false
    rill.admin.v1.GetUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: GetUsergroupRequest
      additionalProperties: false
    rill.admin.v1.GetUsergroupResponse:
      type: object
      properties:
        usergroup:
          title: usergroup
          $ref: '#/components/schemas/rill.admin.v1.Usergroup'
        nextPageToken:
          type: string
          title: next_page_token
      title: GetUsergroupResponse
      additionalProperties: false
    rill.admin.v1.GithubPermission:
      type: string
      title: GithubPermission
      enum:
        - GITHUB_PERMISSION_UNSPECIFIED
        - GITHUB_PERMISSION_READ
        - GITHUB_PERMISSION_WRITE
    rill.admin.v1.HibernateProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: HibernateProjectRequest
      additionalProperties: false
    rill.admin.v1.HibernateProjectResponse:
      type: object
      title: HibernateProjectResponse
      additionalProperties: false
    rill.admin.v1.IssueMagicAuthTokenRequest:
      type: object
      properties:
        org:
          type: string
          title: org
          description: Org that owns the project.
        project:
          type: string
          title: project
          description: Project to create the magic auth token in.
        ttlMinutes:
          type:
            - integer
            - string
          title: ttl_minutes
          format: int64
          description: TTL for the token in minutes. Set to 0 for no expiry. Defaults to no expiry.
        resourceType:
          type: string
          title: resource_type
          description: Type of resource to grant access to.
          deprecated: true
        resourceName:
          type: string
          title: resource_name
          description: Name of the resource to grant access to.
          deprecated: true
        filter:
          title: filter
          description: |-
            Optional filter to apply as a row filter in queries.
             This will be translated to a rill.runtime.v1.SecurityRuleRowFilter, which currently applies to metric views queries.
          $ref: '#/components/schemas/rill.runtime.v1.Expression'
        fields:
          type: array
          items:
            type: string
          title: fields
          description: |-
            Optional list of fields to limit access to. If empty, no field access rule will be added.
             This will be translated to a rill.runtime.v1.SecurityRuleFieldAccess, which currently applies to dimension and measure names for explores and metrics views.
        state:
          type: string
          title: state
          description: Optional state to store with the token. Can be fetched with GetCurrentMagicAuthToken.
        displayName:
          type: string
          title: display_name
          description: Optional display name to store with the token.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ResourceName'
          title: resources
          description: list of resources to grant access to.
      title: IssueMagicAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.IssueMagicAuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          title: token
        url:
          type: string
          title: url
      title: IssueMagicAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.IssueRepresentativeAuthTokenRequest:
      type: object
      properties:
        email:
          type: string
          title: email
        ttlMinutes:
          type:
            - integer
            - string
          title: ttl_minutes
          format: int64
      title: IssueRepresentativeAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.IssueRepresentativeAuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          title: token
      title: IssueRepresentativeAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.IssueServiceAuthTokenRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        serviceName:
          type: string
          title: service_name
      title: IssueServiceAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.IssueServiceAuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          title: token
      title: IssueServiceAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.IssueUserAuthTokenRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: |-
            User ID to issue the auth token for.
             Set to "current" to issue an auth token for the current user.
        clientId:
          type: string
          title: client_id
          description: Client ID to issue the token for.
        displayName:
          type: string
          title: display_name
          description: Optional display name for the auth token.
        ttlMinutes:
          type:
            - integer
            - string
          title: ttl_minutes
          format: int64
          description: Optional TTL for the auth token in minutes. Set to 0 for no expiry. Defaults to no expiry.
        representEmail:
          type: string
          title: represent_email
          description: |-
            Optional email of another user to assume the identity of.
             This is only allowed for superusers.
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
          description: Flag for superusers to override normal access checks.
      title: IssueUserAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.IssueUserAuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          title: token
          description: Newly issued auth token.
      title: IssueUserAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.LeaveOrganizationRequest:
      type: object
      properties:
        org:
          type: string
          title: org
      title: LeaveOrganizationRequest
      additionalProperties: false
    rill.admin.v1.LeaveOrganizationResponse:
      type: object
      title: LeaveOrganizationResponse
      additionalProperties: false
    rill.admin.v1.ListBookmarksRequest:
      type: object
      properties:
        projectId:
          type: string
          title: project_id
        resourceKind:
          type: string
          title: resource_kind
        resourceName:
          type: string
          title: resource_name
      title: ListBookmarksRequest
      additionalProperties: false
    rill.admin.v1.ListBookmarksResponse:
      type: object
      properties:
        bookmarks:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Bookmark'
          title: bookmarks
      title: ListBookmarksResponse
      additionalProperties: false
    rill.admin.v1.ListDeploymentsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        environment:
          type: string
          title: environment
        userId:
          type: string
          title: user_id
      title: ListDeploymentsRequest
      additionalProperties: false
    rill.admin.v1.ListDeploymentsResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Deployment'
          title: deployments
      title: ListDeploymentsResponse
      additionalProperties: false
    rill.admin.v1.ListGithubUserReposRequest:
      type: object
      title: ListGithubUserReposRequest
      additionalProperties: false
    rill.admin.v1.ListGithubUserReposResponse:
      type: object
      properties:
        repos:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ListGithubUserReposResponse.Repo'
          title: repos
      title: ListGithubUserReposResponse
      additionalProperties: false
    rill.admin.v1.ListGithubUserReposResponse.Repo:
      type: object
      properties:
        name:
          type: string
          title: name
        owner:
          type: string
          title: owner
        description:
          type: string
          title: description
        remote:
          type: string
          title: remote
        defaultBranch:
          type: string
          title: default_branch
      title: Repo
      additionalProperties: false
    rill.admin.v1.ListMagicAuthTokensRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListMagicAuthTokensRequest
      additionalProperties: false
    rill.admin.v1.ListMagicAuthTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.MagicAuthToken'
          title: tokens
        nextPageToken:
          type: string
          title: next_page_token
      title: ListMagicAuthTokensResponse
      additionalProperties: false
    rill.admin.v1.ListOrganizationBillingIssuesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: ListOrganizationBillingIssuesRequest
      additionalProperties: false
    rill.admin.v1.ListOrganizationBillingIssuesResponse:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.BillingIssue'
          title: issues
      title: ListOrganizationBillingIssuesResponse
      additionalProperties: false
    rill.admin.v1.ListOrganizationInvitesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListOrganizationInvitesRequest
      additionalProperties: false
    rill.admin.v1.ListOrganizationInvitesResponse:
      type: object
      properties:
        invites:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.OrganizationInvite'
          title: invites
        totalCount:
          type: integer
          title: total_count
          description: Total number of invites in the organization
        nextPageToken:
          type: string
          title: next_page_token
      title: ListOrganizationInvitesResponse
      additionalProperties: false
    rill.admin.v1.ListOrganizationMemberUsergroupsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        role:
          type: string
          title: role
          description: Optionally filter by role
        includeCounts:
          type: boolean
          title: include_counts
          description: Optionally include counts
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListOrganizationMemberUsergroupsRequest
      additionalProperties: false
    rill.admin.v1.ListOrganizationMemberUsergroupsResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.MemberUsergroup'
          title: members
        nextPageToken:
          type: string
          title: next_page_token
      title: ListOrganizationMemberUsergroupsResponse
      additionalProperties: false
    rill.admin.v1.ListOrganizationMemberUsersRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        role:
          type: string
          title: role
          description: Optionally filter by role
        includeCounts:
          type: boolean
          title: include_counts
          description: Optionally include counts
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: ListOrganizationMemberUsersRequest
      additionalProperties: false
    rill.admin.v1.ListOrganizationMemberUsersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.OrganizationMemberUser'
          title: members
        totalCount:
          type: integer
          title: total_count
          description: Total number of members in the organization
        nextPageToken:
          type: string
          title: next_page_token
      title: ListOrganizationMemberUsersResponse
      additionalProperties: false
    rill.admin.v1.ListOrganizationsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListOrganizationsRequest
      additionalProperties: false
    rill.admin.v1.ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Organization'
          title: organizations
        nextPageToken:
          type: string
          title: next_page_token
      title: ListOrganizationsResponse
      additionalProperties: false
    rill.admin.v1.ListProjectInvitesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListProjectInvitesRequest
      additionalProperties: false
    rill.admin.v1.ListProjectInvitesResponse:
      type: object
      properties:
        invites:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectInvite'
          title: invites
        nextPageToken:
          type: string
          title: next_page_token
      title: ListProjectInvitesResponse
      additionalProperties: false
    rill.admin.v1.ListProjectMemberServicesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
      title: ListProjectMemberServicesRequest
      additionalProperties: false
    rill.admin.v1.ListProjectMemberServicesResponse:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectMemberService'
          title: services
      title: ListProjectMemberServicesResponse
      additionalProperties: false
    rill.admin.v1.ListProjectMemberUsergroupsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        role:
          type: string
          title: role
          description: Optionally filter by role
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListProjectMemberUsergroupsRequest
      additionalProperties: false
    rill.admin.v1.ListProjectMemberUsergroupsResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.MemberUsergroup'
          title: members
        nextPageToken:
          type: string
          title: next_page_token
      title: ListProjectMemberUsergroupsResponse
      additionalProperties: false
    rill.admin.v1.ListProjectMemberUsersRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        role:
          type: string
          title: role
          description: Optionally filter by role
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: ListProjectMemberUsersRequest
      additionalProperties: false
    rill.admin.v1.ListProjectMemberUsersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectMemberUser'
          title: members
        nextPageToken:
          type: string
          title: next_page_token
      title: ListProjectMemberUsersResponse
      additionalProperties: false
    rill.admin.v1.ListProjectWhitelistedDomainsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
      title: ListProjectWhitelistedDomainsRequest
      additionalProperties: false
    rill.admin.v1.ListProjectWhitelistedDomainsResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.WhitelistedDomain'
          title: domains
      title: ListProjectWhitelistedDomainsResponse
      additionalProperties: false
    rill.admin.v1.ListProjectsForFingerprintRequest:
      type: object
      properties:
        directoryName:
          type: string
          title: directory_name
        gitRemote:
          type: string
          title: git_remote
        subPath:
          type: string
          title: sub_path
        rillMgdGitRemote:
          type: string
          title: rill_mgd_git_remote
      title: ListProjectsForFingerprintRequest
      additionalProperties: false
    rill.admin.v1.ListProjectsForFingerprintResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Project'
          title: projects
        unauthorizedProject:
          type: string
          title: unauthorized_project
          description: unauthorized_project is the name of a project that matches the git_remote+sub_path but the caller does not have access to.
      title: ListProjectsForFingerprintResponse
      additionalProperties: false
    rill.admin.v1.ListProjectsForOrganizationAndUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        userId:
          type: string
          title: user_id
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListProjectsForOrganizationAndUserRequest
      additionalProperties: false
    rill.admin.v1.ListProjectsForOrganizationAndUserResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Project'
          title: projects
        nextPageToken:
          type: string
          title: next_page_token
      title: ListProjectsForOrganizationAndUserResponse
      additionalProperties: false
    rill.admin.v1.ListProjectsForOrganizationRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListProjectsForOrganizationRequest
      additionalProperties: false
    rill.admin.v1.ListProjectsForOrganizationResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Project'
          title: projects
        nextPageToken:
          type: string
          title: next_page_token
      title: ListProjectsForOrganizationResponse
      additionalProperties: false
    rill.admin.v1.ListProjectsForUserByNameRequest:
      type: object
      properties:
        name:
          type: string
          title: name
      title: ListProjectsForUserByNameRequest
      additionalProperties: false
    rill.admin.v1.ListProjectsForUserByNameResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Project'
          title: projects
      title: ListProjectsForUserByNameResponse
      additionalProperties: false
    rill.admin.v1.ListPublicBillingPlansRequest:
      type: object
      title: ListPublicBillingPlansRequest
      additionalProperties: false
    rill.admin.v1.ListPublicBillingPlansResponse:
      type: object
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.BillingPlan'
          title: plans
      title: ListPublicBillingPlansResponse
      additionalProperties: false
    rill.admin.v1.ListRolesRequest:
      type: object
      title: ListRolesRequest
      additionalProperties: false
    rill.admin.v1.ListRolesResponse:
      type: object
      properties:
        organizationRoles:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.OrganizationRole'
          title: organization_roles
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectRole'
          title: project_roles
      title: ListRolesResponse
      additionalProperties: false
    rill.admin.v1.ListServiceAuthTokensRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        serviceName:
          type: string
          title: service_name
      title: ListServiceAuthTokensRequest
      additionalProperties: false
    rill.admin.v1.ListServiceAuthTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ServiceToken'
          title: tokens
      title: ListServiceAuthTokensResponse
      additionalProperties: false
    rill.admin.v1.ListServicesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
      title: ListServicesRequest
      additionalProperties: false
    rill.admin.v1.ListServicesResponse:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.OrganizationMemberService'
          title: services
      title: ListServicesResponse
      additionalProperties: false
    rill.admin.v1.ListSuperusersRequest:
      type: object
      title: ListSuperusersRequest
      additionalProperties: false
    rill.admin.v1.ListSuperusersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.User'
          title: users
      title: ListSuperusersResponse
      additionalProperties: false
    rill.admin.v1.ListUserAuthTokensRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: User ID to list auth tokens for. Set to "current" to list auth tokens for the current user.
        pageSize:
          type: integer
          title: page_size
          description: Page size for pagination. If not set, a default page size will be used.
        pageToken:
          type: string
          title: page_token
          description: Page token for pagination. If set, the first page of results will be returned.
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
          description: Flag for superusers to override normal access checks.
      title: ListUserAuthTokensRequest
      additionalProperties: false
    rill.admin.v1.ListUserAuthTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.UserAuthToken'
          title: tokens
          description: List of auth tokens for the user.
        nextPageToken:
          type: string
          title: next_page_token
          description: Page token for the next page of results. If empty, there are no more pages.
      title: ListUserAuthTokensResponse
      additionalProperties: false
    rill.admin.v1.ListUsergroupMemberUsersRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListUsergroupMemberUsersRequest
      additionalProperties: false
    rill.admin.v1.ListUsergroupMemberUsersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.UsergroupMemberUser'
          title: members
        nextPageToken:
          type: string
          title: next_page_token
      title: ListUsergroupMemberUsersResponse
      additionalProperties: false
    rill.admin.v1.ListUsergroupsForOrganizationAndUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        userId:
          type: string
          title: user_id
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: ListUsergroupsForOrganizationAndUserRequest
      additionalProperties: false
    rill.admin.v1.ListUsergroupsForOrganizationAndUserResponse:
      type: object
      properties:
        usergroups:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.Usergroup'
          title: usergroups
        nextPageToken:
          type: string
          title: next_page_token
      title: ListUsergroupsForOrganizationAndUserResponse
      additionalProperties: false
    rill.admin.v1.ListWhitelistedDomainsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
      title: ListWhitelistedDomainsRequest
      additionalProperties: false
    rill.admin.v1.ListWhitelistedDomainsResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.WhitelistedDomain'
          title: domains
      title: ListWhitelistedDomainsResponse
      additionalProperties: false
    rill.admin.v1.MagicAuthToken:
      type: object
      properties:
        id:
          type: string
          title: id
        projectId:
          type: string
          title: project_id
        url:
          type: string
          title: url
        token:
          type: string
          title: token
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiresOn:
          title: expires_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        usedOn:
          title: used_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        createdByUserEmail:
          type: string
          title: created_by_user_email
        attributes:
          title: attributes
          $ref: '#/components/schemas/google.protobuf.Struct'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ResourceName'
          title: resources
        resourceType:
          type: string
          title: resource_type
          deprecated: true
        resourceName:
          type: string
          title: resource_name
          deprecated: true
        filter:
          title: filter
          $ref: '#/components/schemas/rill.runtime.v1.Expression'
        fields:
          type: array
          items:
            type: string
          title: fields
        state:
          type: string
          title: state
        displayName:
          type: string
          title: display_name
      title: MagicAuthToken
      additionalProperties: false
    rill.admin.v1.MemberUsergroup:
      type: object
      properties:
        groupId:
          type: string
          title: group_id
        groupName:
          type: string
          title: group_name
        groupManaged:
          type: boolean
          title: group_managed
        roleName:
          type: string
          title: role_name
        usersCount:
          type: integer
          title: users_count
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: MemberUsergroup
      additionalProperties: false
    rill.admin.v1.Organization:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
          description: Globally unique
        displayName:
          type: string
          title: display_name
        description:
          type: string
          title: description
        logoUrl:
          type: string
          title: logo_url
        faviconUrl:
          type: string
          title: favicon_url
        thumbnailUrl:
          type: string
          title: thumbnail_url
        customDomain:
          type: string
          title: custom_domain
        defaultProjectRoleId:
          type: string
          title: default_project_role_id
        quotas:
          title: quotas
          $ref: '#/components/schemas/rill.admin.v1.OrganizationQuotas'
        billingCustomerId:
          type: string
          title: billing_customer_id
        paymentCustomerId:
          type: string
          title: payment_customer_id
        billingEmail:
          type: string
          title: billing_email
        billingPlanName:
          type: string
          title: billing_plan_name
          nullable: true
        billingPlanDisplayName:
          type: string
          title: billing_plan_display_name
          nullable: true
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Organization
      additionalProperties: false
    rill.admin.v1.OrganizationInvite:
      type: object
      properties:
        email:
          type: string
          title: email
        roleName:
          type: string
          title: role_name
        invitedBy:
          type: string
          title: invited_by
      title: OrganizationInvite
      additionalProperties: false
    rill.admin.v1.OrganizationMemberService:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        orgId:
          type: string
          title: org_id
        orgName:
          type: string
          title: org_name
        roleName:
          type: string
          title: role_name
        hasProjectRoles:
          type: boolean
          title: has_project_roles
          description: True if the user has a project role in any project in the organization.
        attributes:
          title: attributes
          $ref: '#/components/schemas/google.protobuf.Struct'
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: OrganizationMemberService
      additionalProperties: false
    rill.admin.v1.OrganizationMemberUser:
      type: object
      properties:
        userId:
          type: string
          title: user_id
        userEmail:
          type: string
          title: user_email
        userName:
          type: string
          title: user_name
        userPhotoUrl:
          type: string
          title: user_photo_url
        roleName:
          type: string
          title: role_name
        projectsCount:
          type: integer
          title: projects_count
        usergroupsCount:
          type: integer
          title: usergroups_count
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: OrganizationMemberUser
      additionalProperties: false
    rill.admin.v1.OrganizationPermissions:
      type: object
      properties:
        admin:
          type: boolean
          title: admin
        guest:
          type: boolean
          title: guest
        readOrg:
          type: boolean
          title: read_org
        manageOrg:
          type: boolean
          title: manage_org
        readProjects:
          type: boolean
          title: read_projects
        createProjects:
          type: boolean
          title: create_projects
        manageProjects:
          type: boolean
          title: manage_projects
        readOrgMembers:
          type: boolean
          title: read_org_members
        manageOrgMembers:
          type: boolean
          title: manage_org_members
        manageOrgAdmins:
          type: boolean
          title: manage_org_admins
      title: OrganizationPermissions
      additionalProperties: false
    rill.admin.v1.OrganizationQuotas:
      type: object
      properties:
        projects:
          type: integer
          title: projects
          format: int32
        deployments:
          type: integer
          title: deployments
          format: int32
        slotsTotal:
          type: integer
          title: slots_total
          format: int32
        slotsPerDeployment:
          type: integer
          title: slots_per_deployment
          format: int32
        outstandingInvites:
          type: integer
          title: outstanding_invites
          format: int32
        storageLimitBytesPerDeployment:
          type:
            - integer
            - string
          title: storage_limit_bytes_per_deployment
          format: int64
      title: OrganizationQuotas
      additionalProperties: false
    rill.admin.v1.OrganizationRole:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        permissions:
          title: permissions
          $ref: '#/components/schemas/rill.admin.v1.OrganizationPermissions'
      title: OrganizationRole
      additionalProperties: false
    rill.admin.v1.PingRequest:
      type: object
      title: PingRequest
      additionalProperties: false
    rill.admin.v1.PingResponse:
      type: object
      properties:
        version:
          type: string
          title: version
        time:
          title: time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: PingResponse
      additionalProperties: false
    rill.admin.v1.Project:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
          description: Unique in organization
        orgId:
          type: string
          title: org_id
        orgName:
          type: string
          title: org_name
        description:
          type: string
          title: description
        public:
          type: boolean
          title: public
        createdByUserId:
          type: string
          title: created_by_user_id
        directoryName:
          type: string
          title: directory_name
        provisioner:
          type: string
          title: provisioner
        gitRemote:
          type: string
          title: git_remote
        managedGitId:
          type: string
          title: managed_git_id
          description: managed_git_id is set if the project is connected to a rill-managed git repo.
        subpath:
          type: string
          title: subpath
        prodBranch:
          type: string
          title: prod_branch
        archiveAssetId:
          type: string
          title: archive_asset_id
        prodSlots:
          type:
            - integer
            - string
          title: prod_slots
          format: int64
        prodDeploymentId:
          type: string
          title: prod_deployment_id
        devSlots:
          type:
            - integer
            - string
          title: dev_slots
          format: int64
        frontendUrl:
          type: string
          title: frontend_url
          description: 'Note: Does NOT incorporate the parent org''s custom domain.'
        prodTtlSeconds:
          type:
            - integer
            - string
          title: prod_ttl_seconds
          format: int64
        annotations:
          type: object
          title: annotations
          additionalProperties:
            type: string
            title: value
        prodVersion:
          type: string
          title: prod_version
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Project
      additionalProperties: false
    rill.admin.v1.Project.AnnotationsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: AnnotationsEntry
      additionalProperties: false
    rill.admin.v1.ProjectInvite:
      type: object
      properties:
        email:
          type: string
          title: email
        roleName:
          type: string
          title: role_name
        orgRoleName:
          type: string
          title: org_role_name
        invitedBy:
          type: string
          title: invited_by
      title: ProjectInvite
      additionalProperties: false
    rill.admin.v1.ProjectMemberService:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        orgId:
          type: string
          title: org_id
        orgName:
          type: string
          title: org_name
        orgRoleName:
          type: string
          title: org_role_name
        projectId:
          type: string
          title: project_id
        projectName:
          type: string
          title: project_name
        projectRoleName:
          type: string
          title: project_role_name
        attributes:
          title: attributes
          $ref: '#/components/schemas/google.protobuf.Struct'
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ProjectMemberService
      additionalProperties: false
    rill.admin.v1.ProjectMemberUser:
      type: object
      properties:
        userId:
          type: string
          title: user_id
        userEmail:
          type: string
          title: user_email
        userName:
          type: string
          title: user_name
        userPhotoUrl:
          type: string
          title: user_photo_url
        roleName:
          type: string
          title: role_name
        orgRoleName:
          type: string
          title: org_role_name
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ProjectMemberUser
      additionalProperties: false
    rill.admin.v1.ProjectPermissions:
      type: object
      properties:
        admin:
          type: boolean
          title: admin
        readProject:
          type: boolean
          title: read_project
        manageProject:
          type: boolean
          title: manage_project
        readProd:
          type: boolean
          title: read_prod
        readProdStatus:
          type: boolean
          title: read_prod_status
        manageProd:
          type: boolean
          title: manage_prod
        readDev:
          type: boolean
          title: read_dev
        readDevStatus:
          type: boolean
          title: read_dev_status
        manageDev:
          type: boolean
          title: manage_dev
        readProvisionerResources:
          type: boolean
          title: read_provisioner_resources
        manageProvisionerResources:
          type: boolean
          title: manage_provisioner_resources
        readProjectMembers:
          type: boolean
          title: read_project_members
        manageProjectMembers:
          type: boolean
          title: manage_project_members
        manageProjectAdmins:
          type: boolean
          title: manage_project_admins
        createMagicAuthTokens:
          type: boolean
          title: create_magic_auth_tokens
        manageMagicAuthTokens:
          type: boolean
          title: manage_magic_auth_tokens
        createReports:
          type: boolean
          title: create_reports
        manageReports:
          type: boolean
          title: manage_reports
        createAlerts:
          type: boolean
          title: create_alerts
        manageAlerts:
          type: boolean
          title: manage_alerts
        createBookmarks:
          type: boolean
          title: create_bookmarks
        manageBookmarks:
          type: boolean
          title: manage_bookmarks
      title: ProjectPermissions
      additionalProperties: false
    rill.admin.v1.ProjectRole:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        permissions:
          title: permissions
          $ref: '#/components/schemas/rill.admin.v1.ProjectPermissions'
      title: ProjectRole
      additionalProperties: false
    rill.admin.v1.ProjectVariable:
      type: object
      properties:
        id:
          type: string
          title: id
          description: Internal ID.
        name:
          type: string
          title: name
          description: Variable name (case insensitive).
        value:
          type: string
          title: value
          description: Variable value.
        environment:
          type: string
          title: environment
          description: |-
            Environment the variable is set for.
             If empty, the variable is shared for all environments.
        updatedByUserId:
          type: string
          title: updated_by_user_id
          description: User ID that most recently updated the variable. May be empty.
        createdOn:
          title: created_on
          description: Timestamp when the variable was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          description: Timestamp when the variable was last updated.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ProjectVariable
      additionalProperties: false
    rill.admin.v1.ProvisionRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
          description: |-
            Deployment to provision a resource for.
             If it's blank and the request is made with a deployment access token, the deployment is inferred from the token.
        type:
          type: string
          title: type
          description: Type of resource to provision.
        name:
          type: string
          title: name
          description: |-
            Name of the resource to provision.
             It forms a unique key together with deployment and type, which is used to de-duplicate provision requests.
        args:
          title: args
          description: Arguments for the provisioner call.
          $ref: '#/components/schemas/google.protobuf.Struct'
      title: ProvisionRequest
      additionalProperties: false
    rill.admin.v1.ProvisionResponse:
      type: object
      properties:
        resource:
          title: resource
          $ref: '#/components/schemas/rill.admin.v1.ProvisionerResource'
      title: ProvisionResponse
      additionalProperties: false
    rill.admin.v1.ProvisionerResource:
      type: object
      properties:
        id:
          type: string
          title: id
        deploymentId:
          type: string
          title: deployment_id
        type:
          type: string
          title: type
        name:
          type: string
          title: name
        args:
          title: args
          $ref: '#/components/schemas/google.protobuf.Struct'
        config:
          title: config
          $ref: '#/components/schemas/google.protobuf.Struct'
      title: ProvisionerResource
      additionalProperties: false
    rill.admin.v1.PullVirtualRepoRequest:
      type: object
      properties:
        projectId:
          type: string
          title: project_id
          description: The project ID to pull virtual files for.
        environment:
          type: string
          title: environment
          description: |-
            The environment to pull virtual files for.
             It is optional. If the call is made with a deployment access token, it defaults to the environment of the deployment. Otherwise, it defaults to "prod".
        pageSize:
          type: integer
          title: page_size
          description: Page size for pagination.
        pageToken:
          type: string
          title: page_token
          description: Page token for pagination.
      title: PullVirtualRepoRequest
      additionalProperties: false
    rill.admin.v1.PullVirtualRepoResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.VirtualFile'
          title: files
          description: List of virtual files ordered by update time, most recent last.
        nextPageToken:
          type: string
          title: next_page_token
          description: Next page token for pagination.
      title: PullVirtualRepoResponse
      additionalProperties: false
    rill.admin.v1.Quotas:
      type: object
      properties:
        projects:
          type: string
          title: projects
        deployments:
          type: string
          title: deployments
        slotsTotal:
          type: string
          title: slots_total
        slotsPerDeployment:
          type: string
          title: slots_per_deployment
        outstandingInvites:
          type: string
          title: outstanding_invites
        storageLimitBytesPerDeployment:
          type: string
          title: storage_limit_bytes_per_deployment
      title: Quotas
      additionalProperties: false
    rill.admin.v1.RedeployProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: RedeployProjectRequest
      additionalProperties: false
    rill.admin.v1.RedeployProjectResponse:
      type: object
      title: RedeployProjectResponse
      additionalProperties: false
    rill.admin.v1.RemoveBookmarkRequest:
      type: object
      properties:
        bookmarkId:
          type: string
          title: bookmark_id
      title: RemoveBookmarkRequest
      additionalProperties: false
    rill.admin.v1.RemoveBookmarkResponse:
      type: object
      title: RemoveBookmarkResponse
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
      title: RemoveOrganizationMemberServiceRequest
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberServiceResponse:
      type: object
      title: RemoveOrganizationMemberServiceResponse
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        email:
          type: string
          title: email
      title: RemoveOrganizationMemberUserRequest
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberUserResponse:
      type: object
      title: RemoveOrganizationMemberUserResponse
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
      title: RemoveOrganizationMemberUsergroupRequest
      additionalProperties: false
    rill.admin.v1.RemoveOrganizationMemberUsergroupResponse:
      type: object
      title: RemoveOrganizationMemberUsergroupResponse
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
        project:
          type: string
          title: project
      title: RemoveProjectMemberServiceRequest
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberServiceResponse:
      type: object
      title: RemoveProjectMemberServiceResponse
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        email:
          type: string
          title: email
      title: RemoveProjectMemberUserRequest
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberUserResponse:
      type: object
      title: RemoveProjectMemberUserResponse
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        usergroup:
          type: string
          title: usergroup
      title: RemoveProjectMemberUsergroupRequest
      additionalProperties: false
    rill.admin.v1.RemoveProjectMemberUsergroupResponse:
      type: object
      title: RemoveProjectMemberUsergroupResponse
      additionalProperties: false
    rill.admin.v1.RemoveProjectWhitelistedDomainRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        domain:
          type: string
          title: domain
      title: RemoveProjectWhitelistedDomainRequest
      additionalProperties: false
    rill.admin.v1.RemoveProjectWhitelistedDomainResponse:
      type: object
      title: RemoveProjectWhitelistedDomainResponse
      additionalProperties: false
    rill.admin.v1.RemoveUsergroupMemberUserRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        email:
          type: string
          title: email
      title: RemoveUsergroupMemberUserRequest
      additionalProperties: false
    rill.admin.v1.RemoveUsergroupMemberUserResponse:
      type: object
      title: RemoveUsergroupMemberUserResponse
      additionalProperties: false
    rill.admin.v1.RemoveWhitelistedDomainRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        domain:
          type: string
          title: domain
      title: RemoveWhitelistedDomainRequest
      additionalProperties: false
    rill.admin.v1.RemoveWhitelistedDomainResponse:
      type: object
      title: RemoveWhitelistedDomainResponse
      additionalProperties: false
    rill.admin.v1.RenameUsergroupRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        name:
          type: string
          title: name
      title: RenameUsergroupRequest
      additionalProperties: false
    rill.admin.v1.RenameUsergroupResponse:
      type: object
      title: RenameUsergroupResponse
      additionalProperties: false
    rill.admin.v1.RenewBillingSubscriptionRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        planName:
          type: string
          title: plan_name
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: RenewBillingSubscriptionRequest
      additionalProperties: false
    rill.admin.v1.RenewBillingSubscriptionResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
        subscription:
          title: subscription
          $ref: '#/components/schemas/rill.admin.v1.Subscription'
      title: RenewBillingSubscriptionResponse
      additionalProperties: false
    rill.admin.v1.ReportOptions:
      type: object
      properties:
        displayName:
          type: string
          title: display_name
        refreshCron:
          type: string
          title: refresh_cron
        refreshTimeZone:
          type: string
          title: refresh_time_zone
        intervalDuration:
          type: string
          title: interval_duration
        queryName:
          type: string
          title: query_name
        queryArgsJson:
          type: string
          title: query_args_json
        exportLimit:
          type:
            - integer
            - string
          title: export_limit
          format: int64
        exportFormat:
          title: export_format
          $ref: '#/components/schemas/rill.runtime.v1.ExportFormat'
        exportIncludeHeader:
          type: boolean
          title: export_include_header
        emailRecipients:
          type: array
          items:
            type: string
          title: email_recipients
        slackUsers:
          type: array
          items:
            type: string
          title: slack_users
        slackChannels:
          type: array
          items:
            type: string
          title: slack_channels
        slackWebhooks:
          type: array
          items:
            type: string
          title: slack_webhooks
        webOpenPath:
          type: string
          title: web_open_path
          description: Annotation for the subpath of <UI host>/org/project to open for the report.
        webOpenState:
          type: string
          title: web_open_state
          description: Annotation for the base64-encoded UI state to open for the report.
        explore:
          type: string
          title: explore
          description: either canvas or explore should be set
        canvas:
          type: string
          title: canvas
        webOpenMode:
          type: string
          title: web_open_mode
          description: |-
            web_open_mode is used to determine how to create or disable open link for the report
            - send "recipient" for older reports (old behaviour)
            - send "creator" for reports that should be opened with creators permissions
            - send "none" for reports that should not be opened or older reports which do not have any web_open_path
            - send "filtered" for reports that should be opened with creators permissions but with locked filters
        filter:
          title: filter
          description: use with OPEN_MODE_FILTERED
          $ref: '#/components/schemas/rill.runtime.v1.Expression'
      title: ReportOptions
      additionalProperties: false
    rill.admin.v1.RequestProjectAccessRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        role:
          type: string
          title: role
      title: RequestProjectAccessRequest
      additionalProperties: false
    rill.admin.v1.RequestProjectAccessResponse:
      type: object
      title: RequestProjectAccessResponse
      additionalProperties: false
    rill.admin.v1.ResourceName:
      type: object
      properties:
        type:
          type: string
          title: type
        name:
          type: string
          title: name
      title: ResourceName
      additionalProperties: false
    rill.admin.v1.RevokeCurrentAuthTokenRequest:
      type: object
      title: RevokeCurrentAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.RevokeCurrentAuthTokenResponse:
      type: object
      title: RevokeCurrentAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.RevokeMagicAuthTokenRequest:
      type: object
      properties:
        tokenId:
          type: string
          title: token_id
      title: RevokeMagicAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.RevokeMagicAuthTokenResponse:
      type: object
      title: RevokeMagicAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.RevokeRepresentativeAuthTokensRequest:
      type: object
      properties:
        email:
          type: string
          title: email
          description: Email of the user being represented.
      title: RevokeRepresentativeAuthTokensRequest
      additionalProperties: false
    rill.admin.v1.RevokeRepresentativeAuthTokensResponse:
      type: object
      title: RevokeRepresentativeAuthTokensResponse
      additionalProperties: false
    rill.admin.v1.RevokeServiceAuthTokenRequest:
      type: object
      properties:
        tokenId:
          type: string
          title: token_id
      title: RevokeServiceAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.RevokeServiceAuthTokenResponse:
      type: object
      title: RevokeServiceAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.RevokeUserAuthTokenRequest:
      type: object
      properties:
        tokenId:
          type: string
          title: token_id
          description: |-
            ID of the auth token to revoke.
             Set to "current" to revoke the current auth token.
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
          description: Flag for superusers to override normal access checks.
      title: RevokeUserAuthTokenRequest
      additionalProperties: false
    rill.admin.v1.RevokeUserAuthTokenResponse:
      type: object
      title: RevokeUserAuthTokenResponse
      additionalProperties: false
    rill.admin.v1.SearchProjectNamesRequest:
      type: object
      properties:
        namePattern:
          type: string
          title: name_pattern
        annotations:
          type: object
          title: annotations
          additionalProperties:
            type: string
            title: value
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: SearchProjectNamesRequest
      additionalProperties: false
    rill.admin.v1.SearchProjectNamesRequest.AnnotationsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: AnnotationsEntry
      additionalProperties: false
    rill.admin.v1.SearchProjectNamesResponse:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          title: names
        nextPageToken:
          type: string
          title: next_page_token
      title: SearchProjectNamesResponse
      additionalProperties: false
    rill.admin.v1.SearchProjectUsersRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        emailQuery:
          type: string
          title: email_query
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: SearchProjectUsersRequest
      additionalProperties: false
    rill.admin.v1.SearchProjectUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.User'
          title: users
        nextPageToken:
          type: string
          title: next_page_token
      title: SearchProjectUsersResponse
      additionalProperties: false
    rill.admin.v1.SearchUsersRequest:
      type: object
      properties:
        emailPattern:
          type: string
          title: email_pattern
        pageSize:
          type: integer
          title: page_size
        pageToken:
          type: string
          title: page_token
      title: SearchUsersRequest
      additionalProperties: false
    rill.admin.v1.SearchUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.User'
          title: users
        nextPageToken:
          type: string
          title: next_page_token
      title: SearchUsersResponse
      additionalProperties: false
    rill.admin.v1.Service:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
        orgId:
          type: string
          title: org_id
        orgName:
          type: string
          title: org_name
        attributes:
          title: attributes
          $ref: '#/components/schemas/google.protobuf.Struct'
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Service
      additionalProperties: false
    rill.admin.v1.ServiceToken:
      type: object
      properties:
        id:
          type: string
          title: id
        prefix:
          type: string
          title: prefix
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiresOn:
          title: expires_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ServiceToken
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberServiceRoleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
        role:
          type: string
          title: role
      title: SetOrganizationMemberServiceRoleRequest
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberServiceRoleResponse:
      type: object
      title: SetOrganizationMemberServiceRoleResponse
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberUserRoleRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        email:
          type: string
          title: email
        role:
          type: string
          title: role
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: SetOrganizationMemberUserRoleRequest
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberUserRoleResponse:
      type: object
      title: SetOrganizationMemberUserRoleResponse
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberUsergroupRoleRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        usergroup:
          type: string
          title: usergroup
        role:
          type: string
          title: role
      title: SetOrganizationMemberUsergroupRoleRequest
      additionalProperties: false
    rill.admin.v1.SetOrganizationMemberUsergroupRoleResponse:
      type: object
      title: SetOrganizationMemberUsergroupRoleResponse
      additionalProperties: false
    rill.admin.v1.SetProjectMemberServiceRoleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        role:
          type: string
          title: role
      title: SetProjectMemberServiceRoleRequest
      additionalProperties: false
    rill.admin.v1.SetProjectMemberServiceRoleResponse:
      type: object
      title: SetProjectMemberServiceRoleResponse
      additionalProperties: false
    rill.admin.v1.SetProjectMemberUserRoleRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        email:
          type: string
          title: email
        role:
          type: string
          title: role
      title: SetProjectMemberUserRoleRequest
      additionalProperties: false
    rill.admin.v1.SetProjectMemberUserRoleResponse:
      type: object
      title: SetProjectMemberUserRoleResponse
      additionalProperties: false
    rill.admin.v1.SetProjectMemberUsergroupRoleRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        usergroup:
          type: string
          title: usergroup
        role:
          type: string
          title: role
      title: SetProjectMemberUsergroupRoleRequest
      additionalProperties: false
    rill.admin.v1.SetProjectMemberUsergroupRoleResponse:
      type: object
      title: SetProjectMemberUsergroupRoleResponse
      additionalProperties: false
    rill.admin.v1.SetSuperuserRequest:
      type: object
      properties:
        email:
          type: string
          title: email
        superuser:
          type: boolean
          title: superuser
      title: SetSuperuserRequest
      additionalProperties: false
    rill.admin.v1.SetSuperuserResponse:
      type: object
      title: SetSuperuserResponse
      additionalProperties: false
    rill.admin.v1.StartDeploymentRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: StartDeploymentRequest
      additionalProperties: false
    rill.admin.v1.StartDeploymentResponse:
      type: object
      properties:
        deployment:
          title: deployment
          $ref: '#/components/schemas/rill.admin.v1.Deployment'
      title: StartDeploymentResponse
      additionalProperties: false
    rill.admin.v1.StopDeploymentRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: StopDeploymentRequest
      additionalProperties: false
    rill.admin.v1.StopDeploymentResponse:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: StopDeploymentResponse
      additionalProperties: false
    rill.admin.v1.Subscription:
      type: object
      properties:
        id:
          type: string
          title: id
        plan:
          title: plan
          $ref: '#/components/schemas/rill.admin.v1.BillingPlan'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        currentBillingCycleStartDate:
          title: current_billing_cycle_start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        currentBillingCycleEndDate:
          title: current_billing_cycle_end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        trialEndDate:
          title: trial_end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Subscription
      additionalProperties: false
    rill.admin.v1.SudoDeleteOrganizationBillingIssueRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        type:
          title: type
          $ref: '#/components/schemas/rill.admin.v1.BillingIssueType'
      title: SudoDeleteOrganizationBillingIssueRequest
      additionalProperties: false
    rill.admin.v1.SudoDeleteOrganizationBillingIssueResponse:
      type: object
      title: SudoDeleteOrganizationBillingIssueResponse
      additionalProperties: false
    rill.admin.v1.SudoExtendTrialRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        days:
          type: integer
          title: days
          format: int32
      title: SudoExtendTrialRequest
      additionalProperties: false
    rill.admin.v1.SudoExtendTrialResponse:
      type: object
      properties:
        trialEnd:
          title: trial_end
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SudoExtendTrialResponse
      additionalProperties: false
    rill.admin.v1.SudoGetResourceRequest:
      type: object
      oneOf:
        - properties:
            deploymentId:
              type: string
              title: deployment_id
          title: deployment_id
          required:
            - deploymentId
        - properties:
            instanceId:
              type: string
              title: instance_id
          title: instance_id
          required:
            - instanceId
        - properties:
            orgId:
              type: string
              title: org_id
          title: org_id
          required:
            - orgId
        - properties:
            projectId:
              type: string
              title: project_id
          title: project_id
          required:
            - projectId
        - properties:
            userId:
              type: string
              title: user_id
          title: user_id
          required:
            - userId
      title: SudoGetResourceRequest
      additionalProperties: false
    rill.admin.v1.SudoGetResourceResponse:
      type: object
      oneOf:
        - properties:
            deployment:
              title: deployment
              $ref: '#/components/schemas/rill.admin.v1.Deployment'
          title: deployment
          required:
            - deployment
        - properties:
            instance:
              title: instance
              $ref: '#/components/schemas/rill.admin.v1.Deployment'
          title: instance
          required:
            - instance
        - properties:
            org:
              title: org
              $ref: '#/components/schemas/rill.admin.v1.Organization'
          title: org
          required:
            - org
        - properties:
            project:
              title: project
              $ref: '#/components/schemas/rill.admin.v1.Project'
          title: project
          required:
            - project
        - properties:
            user:
              title: user
              $ref: '#/components/schemas/rill.admin.v1.User'
          title: user
          required:
            - user
      title: SudoGetResourceResponse
      additionalProperties: false
    rill.admin.v1.SudoIssueRuntimeManagerTokenRequest:
      type: object
      properties:
        host:
          type: string
          title: host
      title: SudoIssueRuntimeManagerTokenRequest
      additionalProperties: false
    rill.admin.v1.SudoIssueRuntimeManagerTokenResponse:
      type: object
      properties:
        token:
          type: string
          title: token
      title: SudoIssueRuntimeManagerTokenResponse
      additionalProperties: false
    rill.admin.v1.SudoTriggerBillingRepairRequest:
      type: object
      title: SudoTriggerBillingRepairRequest
      additionalProperties: false
    rill.admin.v1.SudoTriggerBillingRepairResponse:
      type: object
      title: SudoTriggerBillingRepairResponse
      additionalProperties: false
    rill.admin.v1.SudoUpdateAnnotationsRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        annotations:
          type: object
          title: annotations
          additionalProperties:
            type: string
            title: value
      title: SudoUpdateAnnotationsRequest
      additionalProperties: false
    rill.admin.v1.SudoUpdateAnnotationsRequest.AnnotationsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: AnnotationsEntry
      additionalProperties: false
    rill.admin.v1.SudoUpdateAnnotationsResponse:
      type: object
      properties:
        project:
          title: project
          $ref: '#/components/schemas/rill.admin.v1.Project'
      title: SudoUpdateAnnotationsResponse
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationBillingCustomerRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        billingCustomerId:
          type: string
          title: billing_customer_id
          nullable: true
        paymentCustomerId:
          type: string
          title: payment_customer_id
          nullable: true
      title: SudoUpdateOrganizationBillingCustomerRequest
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationBillingCustomerResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
        subscription:
          title: subscription
          $ref: '#/components/schemas/rill.admin.v1.Subscription'
      title: SudoUpdateOrganizationBillingCustomerResponse
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationCustomDomainRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        customDomain:
          type: string
          title: custom_domain
      title: SudoUpdateOrganizationCustomDomainRequest
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationCustomDomainResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
      title: SudoUpdateOrganizationCustomDomainResponse
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationQuotasRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        projects:
          type: integer
          title: projects
          format: int32
          nullable: true
        deployments:
          type: integer
          title: deployments
          format: int32
          nullable: true
        slotsTotal:
          type: integer
          title: slots_total
          format: int32
          nullable: true
        slotsPerDeployment:
          type: integer
          title: slots_per_deployment
          format: int32
          nullable: true
        outstandingInvites:
          type: integer
          title: outstanding_invites
          format: int32
          nullable: true
        storageLimitBytesPerDeployment:
          type:
            - integer
            - string
          title: storage_limit_bytes_per_deployment
          format: int64
          nullable: true
      title: SudoUpdateOrganizationQuotasRequest
      additionalProperties: false
    rill.admin.v1.SudoUpdateOrganizationQuotasResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
      title: SudoUpdateOrganizationQuotasResponse
      additionalProperties: false
    rill.admin.v1.SudoUpdateUserQuotasRequest:
      type: object
      properties:
        email:
          type: string
          title: email
        singleuserOrgs:
          type: integer
          title: singleuser_orgs
          format: int32
          nullable: true
        trialOrgs:
          type: integer
          title: trial_orgs
          format: int32
          nullable: true
      title: SudoUpdateUserQuotasRequest
      additionalProperties: false
    rill.admin.v1.SudoUpdateUserQuotasResponse:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/rill.admin.v1.User'
      title: SudoUpdateUserQuotasResponse
      additionalProperties: false
    rill.admin.v1.TriggerReconcileRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
      title: TriggerReconcileRequest
      additionalProperties: false
    rill.admin.v1.TriggerReconcileResponse:
      type: object
      title: TriggerReconcileResponse
      additionalProperties: false
    rill.admin.v1.TriggerRedeployRequest:
      type: object
      properties:
        org:
          type: string
          title: org
          description: |-
            It's sufficient to pass org/project name OR deployment_id.
             (To enable rehydrating hibernated projects.)
        project:
          type: string
          title: project
        deploymentId:
          type: string
          title: deployment_id
      title: TriggerRedeployRequest
      additionalProperties: false
    rill.admin.v1.TriggerRedeployResponse:
      type: object
      title: TriggerRedeployResponse
      additionalProperties: false
    rill.admin.v1.TriggerRefreshSourcesRequest:
      type: object
      properties:
        deploymentId:
          type: string
          title: deployment_id
        sources:
          type: array
          items:
            type: string
          title: sources
      title: TriggerRefreshSourcesRequest
      additionalProperties: false
    rill.admin.v1.TriggerRefreshSourcesResponse:
      type: object
      title: TriggerRefreshSourcesResponse
      additionalProperties: false
    rill.admin.v1.TriggerReportRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
      title: TriggerReportRequest
      additionalProperties: false
    rill.admin.v1.TriggerReportResponse:
      type: object
      title: TriggerReportResponse
      additionalProperties: false
    rill.admin.v1.UnsubscribeAlertRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
      title: UnsubscribeAlertRequest
      additionalProperties: false
    rill.admin.v1.UnsubscribeAlertResponse:
      type: object
      title: UnsubscribeAlertResponse
      additionalProperties: false
    rill.admin.v1.UnsubscribeReportRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        name:
          type: string
          title: name
        email:
          type: string
          title: email
        slackUser:
          type: string
          title: slack_user
      title: UnsubscribeReportRequest
      additionalProperties: false
    rill.admin.v1.UnsubscribeReportResponse:
      type: object
      title: UnsubscribeReportResponse
      additionalProperties: false
    rill.admin.v1.UpdateBillingSubscriptionRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        planName:
          type: string
          title: plan_name
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: UpdateBillingSubscriptionRequest
      additionalProperties: false
    rill.admin.v1.UpdateBillingSubscriptionResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
        subscription:
          title: subscription
          $ref: '#/components/schemas/rill.admin.v1.Subscription'
      title: UpdateBillingSubscriptionResponse
      additionalProperties: false
    rill.admin.v1.UpdateBookmarkRequest:
      type: object
      properties:
        bookmarkId:
          type: string
          title: bookmark_id
        displayName:
          type: string
          title: display_name
        description:
          type: string
          title: description
        data:
          type: string
          title: data
          format: byte
        default:
          type: boolean
          title: default
        shared:
          type: boolean
          title: shared
      title: UpdateBookmarkRequest
      additionalProperties: false
    rill.admin.v1.UpdateBookmarkResponse:
      type: object
      title: UpdateBookmarkResponse
      additionalProperties: false
    rill.admin.v1.UpdateOrganizationRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        description:
          type: string
          title: description
          nullable: true
        newName:
          type: string
          title: new_name
          nullable: true
        displayName:
          type: string
          title: display_name
          nullable: true
        logoAssetId:
          type: string
          title: logo_asset_id
          nullable: true
        faviconAssetId:
          type: string
          title: favicon_asset_id
          nullable: true
        thumbnailAssetId:
          type: string
          title: thumbnail_asset_id
          nullable: true
        defaultProjectRole:
          type: string
          title: default_project_role
          nullable: true
        billingEmail:
          type: string
          title: billing_email
          nullable: true
      title: UpdateOrganizationRequest
      additionalProperties: false
    rill.admin.v1.UpdateOrganizationResponse:
      type: object
      properties:
        organization:
          title: organization
          $ref: '#/components/schemas/rill.admin.v1.Organization'
      title: UpdateOrganizationResponse
      additionalProperties: false
    rill.admin.v1.UpdateProjectRequest:
      type: object
      properties:
        org:
          type: string
          title: org
        project:
          type: string
          title: project
        description:
          type: string
          title: description
          nullable: true
        public:
          type: boolean
          title: public
          nullable: true
        directoryName:
          type: string
          title: directory_name
          nullable: true
        prodBranch:
          type: string
          title: prod_branch
          nullable: true
        gitRemote:
          type: string
          title: git_remote
          nullable: true
        subpath:
          type: string
          title: subpath
          nullable: true
        archiveAssetId:
          type: string
          title: archive_asset_id
          nullable: true
        prodSlots:
          type:
            - integer
            - string
          title: prod_slots
          format: int64
          nullable: true
        provisioner:
          type: string
          title: provisioner
          nullable: true
        newName:
          type: string
          title: new_name
          nullable: true
        prodTtlSeconds:
          type:
            - integer
            - string
          title: prod_ttl_seconds
          format: int64
          nullable: true
        prodVersion:
          type: string
          title: prod_version
          nullable: true
        superuserForceAccess:
          type: boolean
          title: superuser_force_access
      title: UpdateProjectRequest
      additionalProperties: false
    rill.admin.v1.UpdateProjectResponse:
      type: object
      properties:
        project:
          title: project
          $ref: '#/components/schemas/rill.admin.v1.Project'
      title: UpdateProjectResponse
      additionalProperties: false
    rill.admin.v1.UpdateProjectVariablesRequest:
      type: object
      properties:
        org:
          type: string
          title: org
          description: Org the project belongs to.
        project:
          type: string
          title: project
          description: Project to update variables for.
        environment:
          type: string
          title: environment
          description: |-
            Environment to set the variables for.
             If empty, the variable(s) will be used as defaults for all environments.
        variables:
          type: object
          title: variables
          additionalProperties:
            type: string
            title: value
          description: |-
            New variable values.
             It is NOT NECESSARY to pass all variables, existing variables not included in the request will be left unchanged.
        unsetVariables:
          type: array
          items:
            type: string
          title: unset_variables
          description: Variables to delete.
      title: UpdateProjectVariablesRequest
      additionalProperties: false
    rill.admin.v1.UpdateProjectVariablesRequest.VariablesEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: VariablesEntry
      additionalProperties: false
    rill.admin.v1.UpdateProjectVariablesResponse:
      type: object
      properties:
        variables:
          type: array
          items:
            $ref: '#/components/schemas/rill.admin.v1.ProjectVariable'
          title: variables
          description: Variables that were created or updated by the request.
      title: UpdateProjectVariablesResponse
      additionalProperties: false
    rill.admin.v1.UpdateServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        org:
          type: string
          title: org
        newName:
          type: string
          title: new_name
          nullable: true
        attributes:
          title: attributes
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Struct'
      title: UpdateServiceRequest
      additionalProperties: false
    rill.admin.v1.UpdateServiceResponse:
      type: object
      properties:
        service:
          title: service
          $ref: '#/components/schemas/rill.admin.v1.Service'
      title: UpdateServiceResponse
      additionalProperties: false
    rill.admin.v1.UpdateUserPreferencesRequest:
      type: object
      properties:
        preferences:
          title: preferences
          $ref: '#/components/schemas/rill.admin.v1.UserPreferences'
      title: UpdateUserPreferencesRequest
      additionalProperties: false
    rill.admin.v1.UpdateUserPreferencesResponse:
      type: object
      properties:
        preferences:
          title: preferences
          $ref: '#/components/schemas/rill.admin.v1.UserPreferences'
      title: UpdateUserPreferencesResponse
      additionalProperties: false
    rill.admin.v1.User:
      type: object
      properties:
        id:
          type: string
          title: id
        email:
          type: string
          title: email
        displayName:
          type: string
          title: display_name
        photoUrl:
          type: string
          title: photo_url
        quotas:
          title: quotas
          $ref: '#/components/schemas/rill.admin.v1.UserQuotas'
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: User
      additionalProperties: false
    rill.admin.v1.UserAuthToken:
      type: object
      properties:
        id:
          type: string
          title: id
        displayName:
          type: string
          title: display_name
        authClientId:
          type: string
          title: auth_client_id
        authClientDisplayName:
          type: string
          title: auth_client_display_name
        representingUserId:
          type: string
          title: representing_user_id
        prefix:
          type: string
          title: prefix
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiresOn:
          title: expires_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        usedOn:
          title: used_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: UserAuthToken
      additionalProperties: false
    rill.admin.v1.UserPreferences:
      type: object
      properties:
        timeZone:
          type: string
          title: time_zone
          nullable: true
      title: UserPreferences
      additionalProperties: false
    rill.admin.v1.UserQuotas:
      type: object
      properties:
        singleuserOrgs:
          type: integer
          title: singleuser_orgs
          format: int32
        trialOrgs:
          type: integer
          title: trial_orgs
          format: int32
      title: UserQuotas
      additionalProperties: false
    rill.admin.v1.Usergroup:
      type: object
      properties:
        groupId:
          type: string
          title: group_id
        groupName:
          type: string
          title: group_name
        groupDescription:
          type: string
          title: group_description
        managed:
          type: boolean
          title: managed
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Usergroup
      additionalProperties: false
    rill.admin.v1.UsergroupMemberUser:
      type: object
      properties:
        userId:
          type: string
          title: user_id
        userEmail:
          type: string
          title: user_email
        userName:
          type: string
          title: user_name
        userPhotoUrl:
          type: string
          title: user_photo_url
        createdOn:
          title: created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: UsergroupMemberUser
      additionalProperties: false
    rill.admin.v1.VirtualFile:
      type: object
      properties:
        path:
          type: string
          title: path
        data:
          type: string
          title: data
          format: byte
        deleted:
          type: boolean
          title: deleted
        updatedOn:
          title: updated_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: VirtualFile
      additionalProperties: false
    rill.admin.v1.WhitelistedDomain:
      type: object
      properties:
        domain:
          type: string
          title: domain
        role:
          type: string
          title: role
      title: WhitelistedDomain
      additionalProperties: false
    rill.runtime.v1.Condition:
      type: object
      properties:
        op:
          title: op
          $ref: '#/components/schemas/rill.runtime.v1.Operation'
        exprs:
          type: array
          items:
            $ref: '#/components/schemas/rill.runtime.v1.Expression'
          title: exprs
      title: Condition
      additionalProperties: false
    rill.runtime.v1.ExportFormat:
      type: string
      title: ExportFormat
      enum:
        - EXPORT_FORMAT_UNSPECIFIED
        - EXPORT_FORMAT_CSV
        - EXPORT_FORMAT_XLSX
        - EXPORT_FORMAT_PARQUET
    rill.runtime.v1.Expression:
      type: object
      oneOf:
        - properties:
            cond:
              title: cond
              $ref: '#/components/schemas/rill.runtime.v1.Condition'
          title: cond
          required:
            - cond
        - properties:
            ident:
              type: string
              title: ident
          title: ident
          required:
            - ident
        - properties:
            subquery:
              title: subquery
              $ref: '#/components/schemas/rill.runtime.v1.Subquery'
          title: subquery
          required:
            - subquery
        - properties:
            val:
              title: val
              $ref: '#/components/schemas/google.protobuf.Value'
          title: val
          required:
            - val
      title: Expression
      additionalProperties: false
    rill.runtime.v1.Operation:
      type: string
      title: Operation
      enum:
        - OPERATION_UNSPECIFIED
        - OPERATION_EQ
        - OPERATION_NEQ
        - OPERATION_LT
        - OPERATION_LTE
        - OPERATION_GT
        - OPERATION_GTE
        - OPERATION_OR
        - OPERATION_AND
        - OPERATION_IN
        - OPERATION_NIN
        - OPERATION_LIKE
        - OPERATION_NLIKE
    rill.runtime.v1.Subquery:
      type: object
      properties:
        dimension:
          type: string
          title: dimension
        measures:
          type: array
          items:
            type: string
          title: measures
        where:
          title: where
          $ref: '#/components/schemas/rill.runtime.v1.Expression'
        having:
          title: having
          $ref: '#/components/schemas/rill.runtime.v1.Expression'
      title: Subquery
      additionalProperties: false
security: []
tags:
  - name: AdminService
