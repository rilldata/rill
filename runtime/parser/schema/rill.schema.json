{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://rilldata.com/schemas/rill.schema.json",
    "title": "Rill Project Schema",
    "type": "object",
    "if": {
        "required": [
            "type"
        ]
    },
    "then": {
        "$ref": "#/$defs/resource"
    },
    "else": {
        "$ref": "#/$defs/rillyaml"
    },
    "$defs": {
        "rillyaml": {
            "description": "The rill.yaml file contains metadata about your project.",
            "type": "object",
            "properties": {
                "compiler": {
                    "type": "string",
                    "description": "Specifies the parser version to use for compiling resources"
                },
                "display_name": {
                    "type": "string",
                    "description": "The display name of the project, shown in the upper-left corner of the UI"
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the project"
                },
                "olap_connector": {
                    "type": "string",
                    "description": "Specifies the default OLAP engine for the project. Defaults to duckdb if not set"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "defaults": {
                                "type": "object"
                            }
                        },
                        "required": [
                            "type",
                            "name"
                        ],
                        "additionalProperties": false
                    }
                },
                "env": {
                    "type": "object",
                    "description": "Defines key-value variables for templating"
                },
                "environment_overrides": {
                    "type": "object"
                },
                "dev": {
                    "type": "object"
                },
                "prod": {
                    "type": "object"
                },
                "models": {
                    "$ref": "#/$defs/model",
                    "description": "Defines project-wide default settings for models. Unless overridden, individual models will inherit these defaults"
                },
                "metrics_views": {
                    "$ref": "#/$defs/metrics_view",
                    "description": "Defines project-wide default settings for metrics_views. Unless overridden, individual metrics_views will inherit these defaults"
                },
                "explores": {
                    "$ref": "#/$defs/explore",
                    "description": "Defines project-wide default settings for explores. Unless overridden, individual explores will inherit these defaults"
                },
                "migrations": {
                    "$ref": "#/$defs/migration"
                },
                "features": {
                    "oneOf": [
                        {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "description": "Enables or disables experimental or optional features using key-value pairs, where the key is the feature name and the value is a boolean"
                },
                "public_paths": {
                    "type": "array",
                    "description": "List of file or directory paths to expose over HTTP. Defaults to ['./public']",
                    "items": {
                        "type": "string"
                    }
                },
                "ignore_paths": {
                    "type": "array",
                    "description": "A list of file or directory paths to exclude from parsing. Useful for ignoring extraneous or non-Rill files in the project",
                    "items": {
                        "type": "string"
                    }
                },
                "mock_users": {
                    "type": "array",
                    "description": "A list of mock users used to test dashboard security policies within the project",
                    "items": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "The email address of the mock user. This field is required"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the mock user."
                            },
                            "admin": {
                                "type": "boolean",
                                "description": "Indicates whether the mock user has administrative privileges"
                            },
                            "groups": {
                                "type": "array",
                                "description": "An array of group names that the mock user is a member of",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "email"
                        ]
                    }
                }
            }
        },
        "resource": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "alert",
                        "api",
                        "canvas",
                        "component",
                        "connector",
                        "explore",
                        "metrics_view",
                        "migration",
                        "model",
                        "report",
                        "theme"
                    ]
                },
                "version": {
                    "type": "integer",
                    "description": "Version of the parser to use for this file. Enables backwards compatibility for breaking changes."
                },
                "name": {
                    "type": "string",
                    "description": "Name is usually inferred from the filename, but can be specified manually."
                },
                "namespace": {
                    "type": "string",
                    "description": "Optional value to group resources by. Prepended to the resource name as <namespace>/<name>."
                },
                "connector": {
                    "type": "string",
                    "description": "Names the connector to use for this resource."
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "type": "string",
                                "pattern": "^[A-Za-z0-9_-]+(/[A-Za-z0-9_-]+)?$",
                                "description": "A string reference like 'resource-name' or 'Kind/resource-name'."
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false,
                                "description": "An object reference with at least a 'name' and 'type'."
                            }
                        ]
                    },
                    "description": "List of resource references, each as a string or map."
                },
                "parser": {
                    "type": "object",
                    "properties": {
                        "templating": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false
                },
                "sql": {
                    "type": "string"
                },
                "env": {
                    "type": "object"
                },
                "environment_overrides": {
                    "type": "object"
                },
                "dev": {
                    "type": "object"
                },
                "prod": {
                    "type": "object"
                }
            },
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "alert"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/alert"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "api"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/api"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "canvas"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/canvas"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "component"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/component"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "connector"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/connector"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "explore"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/explore"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "metrics_view"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/metrics_view"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "migration"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/migration"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "model"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/model"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "report"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/report"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "theme"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/$defs/theme"
                    }
                }
            ]
        },
        "alert": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "Refers to the display name for the alert"
                },
                "refresh": {
                    "$ref": "#/$defs/partial_schedule",
                    "description": "Specifies the refresh schedule that Rill should follow to re-ingest and update the underlying data"
                },
                "watermark": {
                    "type": "string",
                    "enum": [
                        "trigger_time",
                        "inherit"
                    ],
                    "description": "Specifies how the watermark is determined for incremental processing.\nUse 'trigger_time' to set it at runtime or 'inherit' to use the upstream model's watermark."
                },
                "intervals": {
                    "type": "object",
                    "description": "define the interval of the alert to check",
                    "properties": {
                        "duration": {
                            "type": "string",
                            "description": "a valid ISO8601 duration to define the interval duration"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "maximum number of intervals to check for on invocation",
                            "minimum": 0
                        },
                        "check_unclosed": {
                            "type": "boolean",
                            "description": "boolean, whether unclosed intervals should be checked"
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "description": "define the timeout of the alert in seconds (optional)."
                },
                "data": {
                    "$ref": "#/$defs/partial_data"
                },
                "for": {
                    "type": "object",
                    "oneOf": [
                        {
                            "required": [
                                "user_id"
                            ],
                            "properties": {
                                "user_id": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "required": [
                                "user_email"
                            ],
                            "properties": {
                                "user_email": {
                                    "type": "string",
                                    "format": "email"
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "required": [
                                "attributes"
                            ],
                            "properties": {
                                "attributes": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            },
                            "additionalProperties": false
                        }
                    ]
                },
                "on_recover": {
                    "type": "boolean",
                    "description": "Send an alert when a previously failing alert recovers. Defaults to false."
                },
                "on_fail": {
                    "type": "boolean",
                    "description": "Send an alert when a failure occurs. Defaults to true."
                },
                "on_error": {
                    "type": "boolean",
                    "description": "Send an alert when an error occurs during evaluation. Defaults to false."
                },
                "renotify": {
                    "type": "boolean",
                    "description": "Enable repeated notifications for unresolved alerts. Defaults to false."
                },
                "renotify_after": {
                    "type": "string",
                    "description": "Defines the re-notification interval for the alert (e.g., '10m', '24h'), equivalent to snooze duration in UI, defaults to 'Off'"
                },
                "notify": {
                    "$ref": "#/$defs/partial_notify",
                    "description": "Defines how and where to send notifications. At least one method (email or Slack) is required."
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "refresh",
                "data",
                "notify"
            ]
        },
        "api": {
            "type": "object",
            "properties": {
                "openapi": {
                    "type": "object",
                    "properties": {
                        "summary": {
                            "type": "string"
                        },
                        "request": {
                            "type": "object",
                            "properties": {
                                "parameters": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "response": {
                            "type": "object",
                            "properties": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                },
                "security": {
                    "$ref": "#/$defs/partial_security_policy"
                },
                "skip_nested_security": {
                    "type": "boolean"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/partial_data"
                }
            ]
        },
        "canvas": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "Refers to the display name for the canvas"
                },
                "banner": {
                    "type": "string",
                    "description": "Refers to the custom banner displayed at the header of an Canvas dashboard"
                },
                "max_width": {
                    "type": "integer",
                    "description": "Max width in pixels of the canvas",
                    "minimum": 0
                },
                "gap_x": {
                    "type": "integer",
                    "description": "Horizontal gap in pixels of the canvas",
                    "minimum": 0
                },
                "gap_y": {
                    "type": "integer",
                    "description": "Vertical gap in pixels of the canvas",
                    "minimum": 0
                },
                "theme": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object",
                            "additionalProperties": true
                        }
                    ],
                    "description": "Name of the theme to use. Only one of theme and embedded_theme can be set."
                },
                "allow_custom_time_range": {
                    "type": "boolean",
                    "description": "Defaults to true, when set to false it will hide the ability to set a custom time range for the user. "
                },
                "time_ranges": {
                    "type": "array",
                    "description": "Overrides the list of default time range selections available in the dropdown. It can be string or an object with a 'range' and optional 'comparison_offsets'",
                    "items": {
                        "$ref": "#/$defs/partial_explore_time_range"
                    }
                },
                "time_zones": {
                    "type": "array",
                    "description": "Refers to the time zones that should be pinned to the top of the time zone selector. It should be a list of [IANA time zone identifiers](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "type": "object",
                    "description": "Indicates if filters should be enabled for the canvas.",
                    "properties": {
                        "enable": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false
                },
                "defaults": {
                    "type": "object",
                    "description": "Preset UI state to show by default",
                    "properties": {
                        "time_range": {
                            "type": "string"
                        },
                        "comparison_mode": {
                            "type": "string"
                        },
                        "comparison_dimension": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "variables": {
                    "type": "array",
                    "description": "Variables that can be used in the canvas",
                    "items": {
                        "$ref": "#/$defs/partial_component_variable"
                    }
                },
                "rows": {
                    "type": "array",
                    "description": "Refers to all of the rows displayed on the Canvas",
                    "items": {
                        "type": "object",
                        "description": "Refers to each row of components, mulitple items can be listed in a single items",
                        "properties": {
                            "height": {
                                "type": "string"
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "width": {
                                            "type": [
                                                "string",
                                                "integer"
                                            ]
                                        },
                                        "component": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "security": {
                    "$ref": "#/$defs/partial_security_policy",
                    "description": "Security rules to apply for access to the canvas"
                }
            },
            "required": [
                "rows"
            ]
        },
        "component": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "Refers to the display name for the component"
                },
                "description": {
                    "type": "string"
                },
                "input": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/partial_component_variable"
                    }
                },
                "output": {
                    "$ref": "#/$defs/partial_component_variable"
                },
                "additionalProperties": true
            }
        },
        "connector": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string",
                    "description": "Driver name"
                },
                "managed": {
                    "description": "Boolean or map of properties",
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object",
                            "additionalProperties": true
                        }
                    ]
                },
                "additionalProperties": true
            }
        },
        "explore": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "Refers to the display name for the explore dashboard"
                },
                "description": {
                    "type": "string",
                    "description": "Refers to the description of the explore dashboard"
                },
                "banner": {
                    "type": "string",
                    "description": "Refers to the custom banner displayed at the header of an explore dashboard"
                },
                "metrics_view": {
                    "type": "string",
                    "description": "Refers to the metrics view resource"
                },
                "dimensions": {
                    "description": "can be:\n1. The string '*'\n2. An array of strings\n3. An object with one of: 'regex', 'expr', or 'exclude'",
                    "$ref": "#/$defs/partial_explore_field_selector"
                },
                "measures": {
                    "description": "can be:\n1. The string '*'\n2. An array of strings\n3. An object with one of: 'regex', 'expr', or 'exclude'",
                    "$ref": "#/$defs/partial_explore_field_selector"
                },
                "theme": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/theme"
                        }
                    ],
                    "description": "Name of the theme to use. Only one of theme and embedded_theme can be set."
                },
                "time_ranges": {
                    "type": "array",
                    "description": "Overrides the list of default time range selections available in the dropdown. It can be string or an object with a 'range' and optional 'comparison_offsets'",
                    "items": {
                        "$ref": "#/$defs/partial_explore_time_range"
                    }
                },
                "time_zones": {
                    "type": "array",
                    "description": "Refers to the time zones that should be pinned to the top of the time zone selector. It should be a list of [IANA time zone identifiers](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)",
                    "items": {
                        "type": "string"
                    }
                },
                "lock_time_zone": {
                    "type": "boolean",
                    "description": "When true, the dashboard will be locked to the first time provided in the time_zones list. When no time_zones are provided, the dashboard will be locked to UTC"
                },
                "allow_custom_time_range": {
                    "type": "boolean",
                    "description": "Defaults to true, when set to false it will hide the ability to set a custom time range for the user."
                },
                "defaults": {
                    "type": "object",
                    "description": "defines the defaults YAML struct",
                    "properties": {
                        "dimensions": {
                            "description": "Provides the default dimensions to load on viewing the dashboard",
                            "$ref": "#/$defs/partial_explore_field_selector"
                        },
                        "measures": {
                            "description": "Provides the default measures to load on viewing the dashboard",
                            "$ref": "#/$defs/partial_explore_field_selector"
                        },
                        "time_range": {
                            "description": "Refers to the default time range shown when a user initially loads the dashboard. The value must be either a valid [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) (for example, PT12H for 12 hours, P1M for 1 month, or P26W for 26 weeks) or one of the [Rill ISO 8601 extensions](https://docs.rilldata.com/reference/rill-iso-extensions#extensions)",
                            "type": "string"
                        },
                        "comparison_mode": {
                            "description": "Controls how to compare current data with historical or categorical baselines. Options: 'none' (no comparison), 'time' (compares with past based on default_time_range), 'dimension' (compares based on comparison_dimension values)",
                            "type": "string"
                        },
                        "comparison_dimension": {
                            "description": "for dimension mode, specify the comparison dimension by name",
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "embeds": {
                    "type": "object",
                    "properties": {
                        "hide_pivot": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false
                },
                "security": {
                    "description": "Security rules to apply for access to the explore dashboard",
                    "$ref": "#/$defs/partial_security_policy"
                }
            }
        },
        "metrics_view": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "Refers to the display name for the metrics view"
                },
                "description": {
                    "type": "string",
                    "description": "Refers to the description for the metrics view"
                },
                "model": {
                    "type": "string",
                    "description": "Refers to the model powering the dashboard (either model or table is required)"
                },
                "database": {
                    "type": "string",
                    "description": "Refers to the database to use in the OLAP engine (to be used in conjunction with table). Otherwise, will use the default database or schema if not specified"
                },
                "database_schema": {
                    "type": "string",
                    "description": "Refers to the schema to use in the OLAP engine (to be used in conjunction with table). Otherwise, will use the default database or schema if not specified"
                },
                "table": {
                    "type": "string",
                    "description": "Refers to the table powering the dashboard, should be used instead of model for dashboards create from external OLAP tables (either table or model is required)"
                },
                "timeseries": {
                    "type": "string",
                    "description": "Refers to the timestamp column from your model that will underlie x-axis data in the line charts. If not specified, the line charts will not appear"
                },
                "watermark": {
                    "type": "string",
                    "description": "A SQL expression that tells us the max timestamp that the metrics are considered valid for. Usually does not need to be overwritten"
                },
                "smallest_time_grain": {
                    "type": "string",
                    "description": "Refers to the smallest time granularity the user is allowed to view. The valid values are: millisecond, second, minute, hour, day, week, month, quarter, year"
                },
                "first_day_of_week": {
                    "type": "integer",
                    "description": "Refers to the first day of the week for time grain aggregation (for example, Sunday instead of Monday). The valid values are 1 through 7 where Monday=1 and Sunday=7"
                },
                "first_month_of_year": {
                    "type": "integer",
                    "description": "Refers to the first month of the year for time grain aggregation. The valid values are 1 through 12 where January=1 and December=12"
                },
                "dimensions": {
                    "type": "array",
                    "description": "Relates to exploring segments or dimensions of your data and filtering the dashboard",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "a stable identifier for the dimension"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "a display name for your dimension"
                            },
                            "description": {
                                "type": "string",
                                "description": "a freeform text description of the dimension"
                            },
                            "column": {
                                "type": "string",
                                "description": "a categorical column"
                            },
                            "expression": {
                                "type": "string",
                                "description": "a non-aggregate expression such as string_split(domain, '.'). One of column and expression is required but cannot have both at the same time"
                            },
                            "unnest": {
                                "type": "boolean",
                                "description": "if true, allows multi-valued dimension to be unnested (such as lists) and filters will automatically switch to \"contains\" instead of exact match "
                            },
                            "uri": {
                                "type": [
                                    "string",
                                    "boolean"
                                ],
                                "description": "enable if your dimension is a clickable URL to enable single click navigation (boolean or valid SQL expression) "
                            }
                        },
                        "anyOf": [
                            {
                                "required": [
                                    "column"
                                ]
                            },
                            {
                                "required": [
                                    "expression"
                                ]
                            }
                        ]
                    }
                },
                "measures": {
                    "type": "array",
                    "description": "Used to define the numeric aggregates of columns from your data model",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "a stable identifier for the measure"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "the display name of your measure."
                            },
                            "description": {
                                "type": "string",
                                "description": "a freeform text description of the dimension"
                            },
                            "type": {
                                "type": "string"
                            },
                            "expression": {
                                "type": "string",
                                "description": "a combination of operators and functions for aggregations"
                            },
                            "window": {
                                "description": "A measure window can be defined as a keyword string (e.g., 'time' or 'all') or an object with detailed window configuration.",
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "enum": [
                                            "time",
                                            "true",
                                            "all"
                                        ],
                                        "description": "Shorthand: 'time' or 'true' means time-partitioned, 'all' means non-partitioned."
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "partition": {
                                                "type": "boolean"
                                            },
                                            "order": {
                                                "$ref": "#/$defs/partial_metrics_view_field_selectors",
                                                "description": "to order the window"
                                            },
                                            "frame": {
                                                "type": "string",
                                                "description": "sets the frame of your window"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "per": {
                                "$ref": "#/$defs/partial_metrics_view_field_selectors",
                                "description": "for per dimensions"
                            },
                            "requires": {
                                "$ref": "#/$defs/partial_metrics_view_field_selectors",
                                "description": "using an available measure or dimension in your metrics view to set a required parameter, cannot be used with simple measures"
                            },
                            "format_preset": {
                                "type": "string",
                                "description": "Controls the formatting of this measure using a predefined preset. Measures cannot have both `format_preset` and `format_d3`. If neither is supplied, the measure will be formatted using the `humanize` preset by default. Available options:\n- `humanize`: Round numbers into thousands (K), millions (M), billions (B), etc.\n- `none`: Raw output.\n- `currency_usd`: Round to 2 decimal points with a dollar sign ($).\n- `currency_eur`: Round to 2 decimal points with a euro sign (€).\n- `percentage`: Convert a rate into a percentage with a % sign.\n- `interval_ms`: Convert milliseconds into human-readable durations like hours (h), days (d), years (y), etc. (optional)"
                            },
                            "format_d3": {
                                "type": "string",
                                "description": "Controls the formatting of this measure using a [d3-format](https://d3js.org/d3-format) string. If an invalid format string is supplied, the measure will fall back to `format_preset: humanize`. A measure cannot have both `format_preset` and `format_d3`. If neither is provided, the humanize preset is used by default. Example: `format_d3: \".2f\"` formats using fixed-point notation with two decimal places. Example: `format_d3: \",.2r\"` formats using grouped thousands with two significant digits. (optional)"
                            },
                            "format_d3_locale": {
                                "type": "object",
                                "description": "locale configuration passed through to D3, enabling changing the currency symbol among other things. For details, see the docs for D3's [formatLocale](https://d3js.org/d3-format#formatLocale)",
                                "additionalProperties": true
                            },
                            "valid_percent_of_total": {
                                "type": "boolean",
                                "description": "a boolean indicating whether percent-of-total values should be rendered for this measure "
                            },
                            "treat_nulls_as": {
                                "type": "string",
                                "description": "used to configure what value to fill in for missing time buckets. This also works generally as COALESCING over non empty time buckets."
                            }
                        }
                    },
                    "minItems": 1
                },
                "security": {
                    "$ref": "#/$defs/partial_security_policy",
                    "description": "Defines a security policy for the dashboard"
                }
            }
        },
        "migration": {
            "type": "object",
            "properties": {
                "max_version": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "model": {
            "type": "object",
            "properties": {
                "refresh": {
                    "$ref": "#/$defs/partial_schedule",
                    "description": "Specifies the refresh schedule that Rill should follow to re-ingest and update the underlying model data "
                },
                "timeout": {
                    "type": "string",
                    "description": "The maximum time to wait for model ingestion"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "whether incremental modeling is required (optional)"
                },
                "anyOf": [
                    {
                        "state": {
                            "$ref": "#/$defs/partial_data",
                            "description": "Refers to the explicitly defined state of your model, cannot be used with partitions (optional)"
                        }
                    },
                    {
                        "partitions": {
                            "$ref": "#/$defs/partial_data",
                            "description": "Refers to the how your data is partitioned, cannot be used with state. (optional)"
                        }
                    }
                ],
                "partitions_watermark": {
                    "type": "string",
                    "description": "Refers to a customizable timestamp that can be set to check if an object has been updated (optional)."
                },
                "partitions_concurrency": {
                    "type": "integer",
                    "description": "Refers to the number of concurrent partitions that can be read at the same time (optional)."
                },
                "stage": {
                    "type": "object",
                    "properties": {
                        "connector": {
                            "type": "string",
                            "description": "Refers to the connector type for the staging table"
                        }
                    },
                    "required": [
                        "connector"
                    ],
                    "description": "in the case of staging models, where an input source does not support direct write to the output and a staging table is required",
                    "additionalProperties": true
                },
                "output": {
                    "type": "object",
                    "description": "to define the properties of output",
                    "properties": {
                        "connector": {
                            "type": "string",
                            "description": "Refers to the connector type for the output table"
                        }
                    },
                    "required": [
                        "connector"
                    ],
                    "additionalProperties": true
                },
                "materialize": {
                    "type": "boolean",
                    "description": "models will be materialized in olap"
                },
                "defined_as_source": {
                    "type": "boolean"
                }
            }
        },
        "report": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "description": "the display name of your report."
                },
                "refresh": {
                    "$ref": "#/$defs/partial_schedule",
                    "description": "Specifies the refresh schedule that Rill should follow to re-ingest and update the underlying data"
                },
                "watermark": {
                    "type": "string",
                    "enum": [
                        "trigger_time",
                        "inherit"
                    ],
                    "description": "Specifies how the watermark is determined for incremental processing.\nUse 'trigger_time' to set it at runtime or 'inherit' to use the upstream model's watermark."
                },
                "intervals": {
                    "type": "object",
                    "description": "define the interval of the alert to check",
                    "properties": {
                        "duration": {
                            "type": "string",
                            "description": "a valid ISO8601 duration to define the interval duration"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "maximum number of intervals to check for on invocation",
                            "minimum": 0
                        },
                        "check_unclosed": {
                            "type": "boolean",
                            "description": "boolean, whether unclosed intervals should be checked"
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "description": "define the timeout of the alert in seconds (optional)."
                },
                "query": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "args": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "args_json": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "name"
                    ]
                },
                "export": {
                    "type": "object",
                    "description": "to define the export properties",
                    "properties": {
                        "format": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "xlsx",
                                "parquet"
                            ],
                            "description": "format for exported report can be csv,xlsx or parquet"
                        },
                        "limit": {
                            "type": "integer"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "format"
                    ]
                },
                "notify": {
                    "$ref": "#/$defs/partial_notify",
                    "description": "Defines how and where to send notifications. At least one method (email or Slack) is required."
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "query",
                "notify",
                "export"
            ]
        },
        "theme": {
            "type": "object",
            "properties": {
                "colors": {
                    "type": "object",
                    "properties": {
                        "primary": {
                            "type": "string"
                        },
                        "secondary": {
                            "type": "string"
                        }
                    },
                    "anyOf": [
                        {
                            "required": [
                                "primary"
                            ]
                        },
                        {
                            "required": [
                                "secondary"
                            ]
                        }
                    ]
                }
            },
            "required": [
                "colors"
            ]
        },
        "partial_component_variable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "description": "The value can be of any type.",
                    "type": [
                        "string",
                        "number",
                        "boolean",
                        "object",
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "name",
                "type"
            ],
            "additionalProperties": false
        },
        "partial_data": {
            "type": "object",
            "description": "defines logic used to evaluate the resource using various parameters",
            "oneOf": [
                {
                    "properties": {
                        "sql": {
                            "type": "string",
                            "description": "Raw SQL query to run against existing models in the project."
                        },
                        "connector": {
                            "type": "string",
                            "description": "specifies the connector to use when running SQL or glob queries."
                        }
                    },
                    "required": [
                        "sql"
                    ]
                },
                {
                    "properties": {
                        "metrics_sql": {
                            "type": "string"
                        },
                        "description": "SQL query that targets a metrics view in the project"
                    },
                    "required": [
                        "metrics_sql"
                    ]
                },
                {
                    "properties": {
                        "api": {
                            "type": "string",
                            "description": "Name of a custom API defined in the project."
                        },
                        "args": {
                            "type": "object",
                            "description": "Arguments to pass to the custom API.",
                            "additionalProperties": true
                        }
                    },
                    "required": [
                        "api"
                    ]
                },
                {
                    "properties": {
                        "glob": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            ],
                            "description": "Defines the file path or pattern to query from the specified connector."
                        },
                        "connector": {
                            "type": "string",
                            "description": "Specifies the connector to use with the glob input."
                        }
                    },
                    "required": [
                        "glob"
                    ]
                },
                {
                    "properties": {
                        "resource_status": {
                            "type": "object",
                            "description": "Based on resource status",
                            "properties": {
                                "where_error": {
                                    "type": "boolean",
                                    "description": "Indicates whether the condition should trigger when the resource is in an error state."
                                }
                            },
                            "additionalProperties": true
                        }
                    },
                    "required": [
                        "resource_status"
                    ]
                }
            ]
        },
        "partial_explore_field_selector": {
            "oneOf": [
                {
                    "type": "string",
                    "const": "*",
                    "description": "Matches all fields"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Explicit list of fields"
                },
                {
                    "type": "object",
                    "description": "Advanced matching using regex, DuckDB expression, or exclusion",
                    "properties": {
                        "regex": {
                            "type": "string",
                            "description": "Select dimensions using a regular expression"
                        },
                        "expr": {
                            "type": "string"
                        },
                        "exclude": {
                            "description": "Select all dimensions except those listed here",
                            "$ref": "#/$defs/partial_explore_field_selector"
                        }
                    },
                    "additionalProperties": false,
                    "oneOf": [
                        {
                            "required": [
                                "regex"
                            ]
                        },
                        {
                            "required": [
                                "expr"
                            ]
                        },
                        {
                            "required": [
                                "exclude"
                            ]
                        }
                    ]
                }
            ]
        },
        "partial_explore_time_range": {
            "oneOf": [
                {
                    "type": "string",
                    "description": "a valid [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) duration or one of the [Rill ISO 8601 extensions](https://docs.rilldata.com/reference/rill-iso-extensions#extensions) extensions for the selection"
                },
                {
                    "type": "object",
                    "properties": {
                        "range": {
                            "type": "string",
                            "description": "a valid [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) duration or one of the [Rill ISO 8601 extensions](https://docs.rilldata.com/reference/rill-iso-extensions#extensions) extensions for the selection"
                        },
                        "comparison_offsets": {
                            "type": "array",
                            "description": "list of time comparison options for this time range selection (optional). Must be one of the [Rill ISO 8601 extensions](https://docs.rilldata.com/reference/rill-iso-extensions#extensions)",
                            "items": {
                                "oneOf": [
                                    {
                                        "type": "string",
                                        "description": "Offset string only (range is inferred)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "offset": {
                                                "type": "string"
                                            },
                                            "range": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            }
                        }
                    },
                    "required": [
                        "range"
                    ],
                    "additionalProperties": false
                }
            ]
        },
        "partial_metrics_view_field_selectors": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Shorthand field selector, interpreted as the name."
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "time_grain": {
                                        "type": "string",
                                        "description": "Time grain for time-based dimensions.",
                                        "enum": [
                                            "",
                                            "ms",
                                            "millisecond",
                                            "s",
                                            "second",
                                            "min",
                                            "minute",
                                            "h",
                                            "hour",
                                            "d",
                                            "day",
                                            "w",
                                            "week",
                                            "month",
                                            "q",
                                            "quarter",
                                            "y",
                                            "year"
                                        ]
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false
                            }
                        ]
                    },
                    "minItems": 1
                }
            ]
        },
        "partial_notify": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "object",
                    "description": "Send notifications via email.",
                    "properties": {
                        "recipients": {
                            "type": "array",
                            "description": "An array of email addresses to notify.",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1
                        }
                    },
                    "required": [
                        "recipients"
                    ],
                    "additionalProperties": false
                },
                "slack": {
                    "type": "object",
                    "description": "Send notifications via Slack.",
                    "properties": {
                        "users": {
                            "type": "array",
                            "description": "An array of Slack user IDs to notify.",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1
                        },
                        "channels": {
                            "type": "array",
                            "description": "An array of Slack channel IDs to notify.",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1
                        },
                        "webhooks": {
                            "type": "array",
                            "description": "An array of Slack webhook URLs to send notifications to.",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1
                        }
                    },
                    "anyOf": [
                        {
                            "required": [
                                "users"
                            ]
                        },
                        {
                            "required": [
                                "channels"
                            ]
                        },
                        {
                            "required": [
                                "webhooks"
                            ]
                        }
                    ],
                    "additionalProperties": false
                }
            },
            "anyOf": [
                {
                    "required": [
                        "email"
                    ]
                },
                {
                    "required": [
                        "slack"
                    ]
                }
            ]
        },
        "partial_schedule": {
            "type": "object",
            "properties": {
                "ref_update": {
                    "type": "boolean",
                    "description": "If true, allows the resource to run when a dependency updates."
                },
                "cron": {
                    "type": "string",
                    "description": "A cron expression that defines the execution schedule"
                },
                "every": {
                    "type": "string",
                    "description": "Run at a fixed interval using a Go duration string (e.g., '1h', '30m', '24h'). See: https://pkg.go.dev/time#ParseDuration"
                },
                "time_zone": {
                    "type": "string",
                    "description": "Time zone to interpret the schedule in (e.g., 'UTC', 'America/Los_Angeles')."
                },
                "disable": {
                    "type": "boolean",
                    "description": "If true, disables the resource without deleting it."
                },
                "run_in_dev": {
                    "type": "boolean",
                    "description": "If true, allows the schedule to run in development mode."
                }
            }
        },
        "partial_security_policy": {
            "type": "object",
            "properties": {
                "access": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Expression indicating if the user should be granted access to the dashboard. If not defined, it will resolve to false and the dashboard won't be accessible to anyone. Needs to be a valid SQL expression that evaluates to a boolean."
                },
                "row_filter": {
                    "type": "string",
                    "description": "SQL expression to filter the underlying model by. Can leverage templated user attributes to customize the filter for the requesting user. Needs to be a valid SQL expression that can be injected into a WHERE clause"
                },
                "include": {
                    "type": "array",
                    "description": "List of dimension or measure names to include in the dashboard. If include is defined all other dimensions and measures are excluded",
                    "items": {
                        "type": "object",
                        "properties": {
                            "if": {
                                "type": "string",
                                "description": "Expression to decide if the column should be included or not. It can leverage templated user attributes. Needs to be a valid SQL expression that evaluates to a boolean"
                            },
                            "names": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "type": "string",
                                        "enum": [
                                            "*"
                                        ]
                                    }
                                ],
                                "description": "List of fields to include. Should match the name of one of the dashboard's dimensions or measures"
                            }
                        },
                        "required": [
                            "if",
                            "names"
                        ]
                    }
                },
                "exclude": {
                    "type": "array",
                    "description": "List of dimension or measure names to exclude from the dashboard. If exclude is defined all other dimensions and measures are included",
                    "items": {
                        "type": "object",
                        "properties": {
                            "if": {
                                "type": "string",
                                "description": "Expression to decide if the column should be excluded or not. It can leverage templated user attributes. Needs to be a valid SQL expression that evaluates to a boolean"
                            },
                            "names": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "type": "string",
                                        "enum": [
                                            "*"
                                        ]
                                    }
                                ],
                                "description": "List of fields to exclude. Should match the name of one of the dashboard's dimensions or measures"
                            }
                        },
                        "required": [
                            "if",
                            "names"
                        ]
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "access",
                                    "field_access",
                                    "row_filter"
                                ]
                            },
                            "action": {
                                "type": "string",
                                "enum": [
                                    "allow",
                                    "deny"
                                ]
                            },
                            "if": {
                                "type": "string"
                            },
                            "names": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "all": {
                                "type": "boolean"
                            },
                            "sql": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                }
            }
        }
    }
}