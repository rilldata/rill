$schema: 'http://json-schema.org/draft-07/schema#'
$id: connector.schema.yaml
title: Connector YAML
type: object
description: |
  Connector YAML files define how Rill connects to external data sources and OLAP engines. Each connector specifies a driver type and its required connection parameters.
allOf:
  - title: Properties
    type: object
    properties:
      type:
        type: string
        const: connector
        description: Refers to the resource type and must be `connector`
      driver:
        type: string
        description: The type of connector, see [available connectors](#available-connector-types) (required)
    required:
      - type
      - driver

  - oneOf:
      - $ref: '#/definitions/athena'
      - $ref: '#/definitions/azure'
      - $ref: '#/definitions/bigquery'
      - $ref: '#/definitions/clickhouse'
      - $ref: '#/definitions/druid'
      - $ref: '#/definitions/duckdb'
      - $ref: '#/definitions/gcs'
      - $ref: '#/definitions/https'
      # - $ref: '#/definitions/local_file'
      - $ref: '#/definitions/motherduck'
      - $ref: '#/definitions/mysql'
      - $ref: '#/definitions/pinot'
      - $ref: '#/definitions/postgres'
      - $ref: '#/definitions/redshift'
      - $ref: '#/definitions/s3'
      - $ref: '#/definitions/salesforce'
      - $ref: '#/definitions/slack'
      - $ref: '#/definitions/snowflake'
      - $ref: '#/definitions/sqlite'

definitions:
  athena:
    type: object
    title: athena
    description: Configuration properties specific to the athena
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `athena`
        const: athena
      aws_access_key_id:
        type: string
        description: AWS Access Key ID used for authentication. Required when using static credentials directly or as base credentials for assuming a role.
      aws_secret_access_key:
        type: string
        description: AWS Secret Access Key paired with the Access Key ID. Required when using static credentials directly or as base credentials for assuming a role.
      aws_access_token:
        type: string
        description: AWS session token used with temporary credentials. Required only if the Access Key and Secret Key are part of a temporary session credentials.
      role_arn:
        type: string
        description: ARN of the IAM role to assume. When specified, the SDK uses the base credentials to call STS AssumeRole and obtain temporary credentials scoped to this role.
      role_session_name:
        type: string
        description: Session name to associate with the STS AssumeRole session. Used only if 'role_arn' is specified. Useful for identifying and auditing the session.
      external_id:
        type: string
        description: External ID required by some roles when assuming them, typically for cross-account access. Used only if 'role_arn' is specified and the role's trust policy requires it.
      workgroup:
        type: string
        description: Athena workgroup to use for query execution. Defaults to 'primary' if not specified.
      output_location:
        type: string
        description: S3 URI where Athena query results should be stored (e.g., s3://your-bucket/athena/results/). Optional if the selected workgroup has a default result configuration.
      aws_region:
        type: string
        description: AWS region where Athena and the result S3 bucket are located (e.g., us-east-1). Defaults to 'us-east-1' if not specified.
      allow_host_access:
        type: boolean
        description: Allow the Athena client to access host environment configurations such as environment variables or local AWS credential files. Defaults to true, enabling use of credentials and settings from the host environment unless explicitly disabled.
    required:
      - driver
  azure:
    type: object
    title: azure
    description: Configuration properties specific to the azure
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `azure`
        const: azure
      azure_storage_account:
        type: string
        description: Azure storage account name
      azure_storage_key:
        type: string
        description: Azure storage access key
      azure_storage_sas_token:
        type: string
        description: Optional azure SAS token for authentication
      azure_storage_connection_string:
        type: string
        description: Optional azure connection string for storage account
      azure_storage_bucket:
        type: string
        description: Name of the Azure Blob Storage container (equivalent to an S3 bucket)
      allow_host_access:
        type: boolean
        description: Allow access to host environment configuration
    required:
      - driver
      - azure_storage_bucket
  bigquery:
    type: object
    title: bigquery
    description: Configuration properties specific to the bigquery
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `bigquery`
        const: bigquery
      google_application_credentials:
        type: string
        description: Raw contents of the Google Cloud service account key (in JSON format) used for authentication.
      project_id:
        type: string
        description: ID of the Google Cloud project to use for BigQuery operations. This can be omitted only if the project ID is included in the service account key.         
      allow_host_access:
        type: boolean
        description: Enable the BigQuery client to use credentials from the host environment when no service account JSON is provided. This includes Application Default Credentials from environment variables, local credential files, or the Google Compute Engine metadata server. Defaults to true, allowing seamless authentication in GCP environments.
    required:
      - driver
  clickhouse:
    type: object
    title: clickhouse
    description: Configuration properties specific to the clickhouse
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `clickhouse`
        const: clickhouse
      managed:
        type: boolean
        description: '`true` means Rill will provision the connector using the default provisioner. `false` disables automatic provisioning.'
      mode:
        type: string
        description: "`read` - Controls the operation mode for the ClickHouse connection. Defaults to 'read' for safe operation with external databases. Set to 'readwrite' to enable model creation and table mutations. Note: When 'managed: true', this is automatically set to 'readwrite'."
      dsn:
        type: string
        description: DSN(Data Source Name) for the ClickHouse connection
      username:
        type: string
        description: Username for authentication
      password:
        type: string
        description: Password for authentication
      host:
        type: string
        description: Host where the ClickHouse instance is running
      port:
        type: integer
        description: Port where the ClickHouse instance is accessible
      database:
        type: string
        description: Name of the ClickHouse database within the cluster
      ssl:
        type: boolean
        description: Indicates whether a secured SSL connection is required
      cluster:
        type: string
        description: 'Cluster name, required for running distributed queries'
      log_queries:
        type: boolean
        description: Controls whether to log raw SQL queries
      settings_override:
        type: string
        description: override the default settings used in queries. example `readonly = 1, session_timezone = 'UTC'`
      embed_port:
        type: integer
        description: Port to run ClickHouse locally (0 for random port)
      can_scale_to_zero:
        type: boolean
        description: Indicates if the database can scale to zero
      max_open_conns:
        type: integer
        description: Maximum number of open connections to the database
      max_idle_conns:
        type: integer
        description: Maximum number of idle connections in the pool
      dial_timeout:
        type: string
        description: Timeout for dialing the ClickHouse server
      conn_max_lifetime:
        type: string
        description: Maximum time a connection may be reused
      read_timeout:
        type: string
        description: Maximum time for a connection to read data
    required:
      - driver
  druid:
    type: object
    title: druid
    description: Configuration properties specific to the druid
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `druid`
        const: druid
      dsn:
        type: string
        description: Data Source Name (DSN) for connecting to Druid
      username:
        type: string
        description: Username for authenticating with Druid
      password:
        type: string
        description: Password for authenticating with Druid
      host:
        type: string
        description: Hostname of the Druid coordinator or broker
      port:
        type: integer
        description: Port number of the Druid service
      ssl:
        type: boolean
        description: Enable SSL for secure connection
      log_queries:
        type: boolean
        description: Log raw SQL queries sent to Druid
      max_open_conns:
        type: integer
        description: Maximum number of open database connections (0 = default, -1 = unlimited)
      skip_version_check:
        type: boolean
        description: Skip checking Druid version compatibility
    required:
      - driver
      - dsn
  duckdb:
    type: object
    title: duckdb
    description: Configuration properties specific to the duckdb
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `duckdb`
        const: duckdb
      pool_size:
        type: integer
        description: Number of concurrent connections and queries allowed
      allow_host_access:
        type: boolean
        description: Whether access to the local environment and file system is allowed
      cpu:
        type: integer
        description: Number of CPU cores available to the database
      memory_limit_gb:
        type: integer
        description: Amount of memory in GB available to the database
      read_write_ratio:
        type: number
        description: Ratio of resources allocated to the read database; used to divide CPU and memory
      init_sql:
        type: string
        description: is executed during database initialization.
      conn_init_sql:
        type: string
        description: is executed when a new connection is initialized.
      secrets:
        type: string
        description: Comma-separated list of other connector names to create temporary secrets for in DuckDB before executing a model.
      log_queries:
        type: boolean
        description: Whether to log raw SQL queries executed through OLAP
    required:
      - driver
  gcs:
    type: object
    title: gcs
    description: Configuration properties specific to the gcs
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `gcs`
        const: gcs
      google_application_credentials:
        type: string
        description: Google Cloud credentials JSON string
      bucket:
        type: string
        description: Name of gcs bucket
      allow_host_access:
        type: boolean
        description: Allow access to host environment configuration
      key_id:
        type: string
        description: Optional S3-compatible Key ID when used in compatibility mode
      secret:
        type: string
        description: Optional S3-compatible Secret when used in compatibility mode
    required:
      - driver
      - bucket
  https:
    type: object
    title: https
    description: Configuration properties specific to the https
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `https`
        const: https
      path:
        type: string
        description: The full HTTPS URI to fetch data from
      headers:
        type: object
        description: HTTP headers to include in the request
        additionalProperties:
          type: string
    required:
      - driver
      - path
  # local_file:
  #   type: object
  #   title: local_file
  #   description: Configuration properties specific to the local_file
  #   properties:
  #     driver:
  #       type: string
  #       description: Refers to the driver type and must be driver `local_file`
  #       const: local_file
  #     sql:
  #       type: string
  #       description: SQL query to execute on the local file, file should exist in the local root data directory
  #     allow_host_access:
  #       type: boolean
  #       description: Flag to indicate if access to host-level file paths is permitted
  #   required:
  #     - driver
  #     - sql
  motherduck:
    type: object
    title: motherduck
    description: Configuration properties specific to the motherduck
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `duckdb`
        const: duckdb
      path:
        type: string
        description: Path to your MD database
      init_sql:
        type: string
        description: SQL executed during database initialization.
    required:
      - driver
      - path
      - init_sql
  mysql:
    type: object
    title: mysql
    description: Configuration properties specific to the mysql
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `mysql`
        const: mysql
      dsn:
        type: string
        description: DSN(Data Source Name) for the mysql connection 
      host:
        type: string
        description: Hostname of the MySQL server
      port:
        type: integer
        description: Port number for the MySQL server
      database:
        type: string
        description: Name of the MySQL database
      user:
        type: string
        description: Username for authentication
      password:
        type: string
        description: Password for authentication
      ssl_mode:
        type: string
        description: SSL mode can be DISABLED, PREFERRED or REQUIRED        
    required:
      - driver
  pinot:
    type: object
    title: pinot
    description: Configuration properties specific to the pinot
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `pinot`
        const: pinot
      dsn:
        type: string
        description: DSN(Data Source Name) for the Pinot connection
      username:
        type: string
        description: Username for authenticating with Pinot
      password:
        type: string
        description: Password for authenticating with Pinot
      broker_host:
        type: string
        description: Hostname of the Pinot broker
      broker_port:
        type: integer
        description: Port number for the Pinot broker
      controller_host:
        type: string
        description: Hostname of the Pinot controller
      controller_port:
        type: integer
        description: Port number for the Pinot controller
      ssl:
        type: boolean
        description: Enable SSL connection to Pinot
      log_queries:
        type: boolean
        description: Log raw SQL queries executed through Pinot
      max_open_conns:
        type: integer
        description: Maximum number of open connections to the Pinot database
    required:
      - driver
      - dsn
      - broker_host
      - controller_host
  postgres:
    type: object
    title: postgres
    description: Configuration properties specific to the postgres
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `postgres`
        const: postgres
      dsn:
        type: string
        description: DSN(Data Source Name) for the postgres connection
      host:
        type: string
        description: Hostname of the Postgres server
      port:
        type: string
        description: Port number for the Postgres server
      dbname:
        type: string
        description: Name of the Postgres database
      user:
        type: string
        description: Username for authentication
      password:
        type: string
        description: Password for authentication
      sslmode:
        type: string
        description: SSL mode can be disable, allow, prefer or require
    required:
      - driver
  redshift:
    type: object
    title: redshift
    description: Configuration properties specific to the redshift
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `redshift`
        const: redshift
      aws_access_key_id:
        type: string
        description: AWS Access Key ID used for authenticating with Redshift.
      aws_secret_access_key:
        type: string
        description: AWS Secret Access Key used for authenticating with Redshift.
      aws_access_token:
        type: string
        description: AWS Session Token for temporary credentials (optional).
      region:
        type: string
        description: AWS region where the Redshift cluster or workgroup is hosted (e.g., 'us-east-1').
      database:
        type: string
        description: Name of the Redshift database to query.
      workgroup:
        type: string
        description: Workgroup name for Redshift Serverless, in case of provisioned Redshift clusters use 'cluster_identifier'.
      cluster_identifier:
        type: string
        description: Cluster identifier for provisioned Redshift clusters, in case of Redshift Serverless use 'workgroup' .
    required:
      - driver
      - aws_access_key_id
      - aws_secret_access_key
      - database
  s3:
    type: object
    title: s3
    description: Configuration properties specific to the s3
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `s3`
        const: s3
      aws_access_key_id:
        type: string
        description: AWS Access Key ID used for authentication
      aws_secret_access_key:
        type: string
        description: AWS Secret Access Key used for authentication
      aws_access_token:
        type: string
        description: Optional AWS session token for temporary credentials
      bucket:
        type: string
        description: Name of s3 bucket 
      endpoint:
        type: string
        description: Optional custom endpoint URL for S3-compatible storage
      region:
        type: string
        description: AWS region of the S3 bucket
      allow_host_access:
        type: boolean
        description: Allow access to host environment configuration
      retain_files:
        type: boolean
        description: Whether to retain intermediate files after processing
    required:
      - driver
      - bucket
  salesforce:
    type: object
    title: salesforce
    description: Configuration properties specific to the salesforce
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `salesforce`
        const: salesforce
      username:
        type: string
        description: Salesforce account username
      password:
        type: string
        description: Salesforce account password (secret)
      key:
        type: string
        description: Authentication key for Salesforce (secret)
      endpoint:
        type: string
        description: Salesforce API endpoint URL
      client_id:
        type: string
        description: Client ID used for Salesforce OAuth authentication
    required:
      - driver
      - username
      - endpoint
  slack:
    type: object
    title: slack
    description: Configuration properties specific to the slack
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `slack`
        const: slack
      bot_token:
        type: string
        description: Bot token used for authenticating Slack API requests
    required:
      - driver
      - bot_token
  snowflake:
    type: object
    title: snowflake
    description: Configuration properties specific to the snowflake
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `snowflake`
        const: snowflake
      dsn:
        type: string
        description: DSN (Data Source Name) for the Snowflake connection
      parallel_fetch_limit:
        type: integer
        description: Maximum number of concurrent fetches during query execution
    required:
      - driver
      - dsn
  sqlite:
    type: object
    title: sqlite
    description: Configuration properties specific to the sqlite
    properties:
      driver:
        type: string
        description: Refers to the driver type and must be driver `sqlite`
        const: sqlite
      dsn:
        type: string
        description: DSN(Data Source Name) for the sqlite connection
    required:
      - driver
      - dsn
