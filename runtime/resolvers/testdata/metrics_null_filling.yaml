connectors:
  - clickhouse
  - druid
project_files:
  clickhouse_data.yaml:
    type: model
    connector: clickhouse
    sql: |
      select parseDateTimeBestEffort('2024-01-01T00:00:00Z') as time, 'DK' as country, 1 as val union all
      select parseDateTimeBestEffort('2024-01-02T00:00:00Z') as time, 'US' as country, 2 as val union all
      select parseDateTimeBestEffort('2024-01-04T00:00:00Z') as time, 'US' as country, 4 as val union all
      select parseDateTimeBestEffort('2024-01-05T00:00:00Z') as time, 'DK' as country, 5 as val
  clickhouse_metrics.yaml:
    type: metrics_view
    model: clickhouse_data
    timeseries: time
    dimensions:
      - column: country
    measures:
      - name: count
        expression: count(*)
      - name: sum
        expression: sum(val)
        treat_nulls_as: 123
  druid_metrics.yaml:
    type: metrics_view
    connector: druid
    model: AdBids
    timeseries: __time
    dimensions:
      - column: publisher
      - column: domain
    measures:
      - name: count
        expression: count(*)
        treat_nulls_as: -123
  duckdb_data.yaml:
    type: model
    connector: duckdb
    sql: |
      select '2024-01-02T00:00:00Z'::TIMESTAMP as time, 'US' as country, 1 as val union all
      select '2024-01-03T00:00:00Z'::TIMESTAMP as time, 'US' as country, 10 as val union all
      select '2024-01-05T00:00:00Z'::TIMESTAMP as time, 'DK' as country, 100 as val
  duckdb_metrics.yaml:
    type: metrics_view
    model: duckdb_data
    timeseries: time
    dimensions:
      - column: country
    measures:
      - name: count
        expression: count(*)
      - name: sum
        expression: sum(val)
        treat_nulls_as: 0
      - name: base_sum
        expression: sum(val)
      - name: sum_1day_rolling_avg
        expression: AVG(base_sum)
        requires: [base_sum]
        treat_nulls_as: -1
        window:
          order: time
          frame: RANGE BETWEEN INTERVAL 2 DAY PRECEDING AND CURRENT ROW
      - name: sum_not_null_1day_rolling_avg
        expression: AVG(sum)
        requires: [sum]
        window:
          order: time
          frame: RANGE BETWEEN INTERVAL 2 DAY PRECEDING AND CURRENT ROW
tests:
  - name: time_as_dimension_clickhouse
    resolver: metrics
    properties:
      metrics_view: clickhouse_metrics
      dimensions:
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum
      time_range:
        end: 2024-01-05T00:00:00Z
        start: 2024-01-03T00:00:00Z
      sort:
        - name: time__day
      spine:
        time:
          start:
          end:
          grain:
    result:
      - sum: 123
        time__day: "2024-01-03T00:00:00Z"
      - sum: 4
        time__day: "2024-01-04T00:00:00Z"
  - name: time_as_dimension_druid
    resolver: metrics
    properties:
      metrics_view: druid_metrics
      dimensions:
        - name: time__day
          compute:
            time_floor:
              dimension: __time
              grain: day
      measures:
        - name: count
      time_range:
        end: 2022-01-02T00:00:00Z
        start: 2021-12-31T00:00:00Z
      sort:
        - name: time__day
      spine:
        time:
          start:
          end:
          grain:
    result:
      - count: -123
        time__day: "2021-12-31T00:00:00Z"
      - count: 1116
        time__day: "2022-01-01T00:00:00Z"
  - name: time_as_dimension_duckdb
    resolver: metrics
    properties:
      metrics_view: duckdb_metrics
      dimensions:
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum
        - name: sum_prev
          compute:
            comparison_value:
              measure: sum
      time_range:
        end: 2024-01-05T00:00:00Z
        start: 2024-01-03T00:00:00Z
      comparison_time_range:
        end: 2024-01-03T00:00:00Z
        start: 2024-01-01T00:00:00Z
      sort:
        - name: time__day
      spine:
        time:
          start:
          end:
          grain:
    result:
      - sum: 10
        sum_prev: null
        time__day: "2024-01-03T00:00:00Z"
      - sum: 0
        sum_prev: 1
        time__day: "2024-01-04T00:00:00Z"
  - name: time_as_dimension_adv_measure_not_null_duckdb
    resolver: metrics
    properties:
      metrics_view: duckdb_metrics
      dimensions:
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum_1day_rolling_avg
      time_range:
        end: 2024-01-06T00:00:00Z
        start: 2023-12-31T00:00:00Z
      sort:
        - name: time__day
      spine:
        time:
          start:
          end:
          grain:
    result:
      - sum_1day_rolling_avg: -1
        time__day: "2023-12-31T00:00:00Z"
      - sum_1day_rolling_avg: -1
        time__day: "2024-01-01T00:00:00Z"
      - sum_1day_rolling_avg: 1
        time__day: "2024-01-02T00:00:00Z"
      - sum_1day_rolling_avg: 5.5
        time__day: "2024-01-03T00:00:00Z"
      - sum_1day_rolling_avg: 5.5
        time__day: "2024-01-04T00:00:00Z"
      - sum_1day_rolling_avg: 55
        time__day: "2024-01-05T00:00:00Z"
  - name: time_as_dimension_adv_measure_base_not_null_duckdb
    resolver: metrics
    properties:
      metrics_view: duckdb_metrics
      dimensions:
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum_not_null_1day_rolling_avg
      time_range:
        end: 2024-01-06T00:00:00Z
        start: 2023-12-31T00:00:00Z
      sort:
        - name: time__day
      spine:
        time:
          start:
          end:
          grain:
    result:
      - sum_not_null_1day_rolling_avg: 0
        time__day: "2023-12-31T00:00:00Z"
      - sum_not_null_1day_rolling_avg: 0
        time__day: "2024-01-01T00:00:00Z"
      - sum_not_null_1day_rolling_avg: 0.3333333333333333
        time__day: "2024-01-02T00:00:00Z"
      - sum_not_null_1day_rolling_avg: 3.6666666666666665
        time__day: "2024-01-03T00:00:00Z"
      - sum_not_null_1day_rolling_avg: 3.6666666666666665
        time__day: "2024-01-04T00:00:00Z"
      - sum_not_null_1day_rolling_avg: 36.666666666666664
        time__day: "2024-01-05T00:00:00Z"
  - name: iso_ranges_duckdb
    resolver: metrics
    properties:
      metrics_view: duckdb_metrics
      dimensions:
        - name: country
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum
        - name: sum_prev
          compute:
            comparison_value:
              measure: sum
      time_range:
        iso_duration: P2D
      comparison_time_range:
        iso_duration: P2D
        iso_offset: P2D
      sort:
        - name: sum
      spine:
        time:
          start:
          end:
          grain:
    result:
      - country: US
        sum: 0
        sum_prev: 1
        time__day: "2024-01-04T00:00:00Z"
      - country: US
        sum: 10
        sum_prev: null
        time__day: "2024-01-03T00:00:00Z"
  - name: iso_ranges_clickhouse
    resolver: metrics
    properties:
      metrics_view: clickhouse_metrics
      dimensions:
        - name: country
        - name: time__day
          compute:
            time_floor:
              dimension: time
              grain: day
      measures:
        - name: sum
      time_range:
        iso_duration: P3D
      sort:
        - name: sum
      spine:
        time:
          start:
          end:
          grain:
    result:
      - country: US
        sum: 2
        time__day: "2024-01-02T00:00:00Z"
      - country: US
        sum: 4
        time__day: "2024-01-04T00:00:00Z"
      - country: US
        sum: 123
        time__day: "2024-01-03T00:00:00Z"
