SELECT 
    generate_series AS order_id,
    now() - interval (random() * 180) day AS order_date,
    'CUST_' || (generate_series % 2000)::text AS customer_id,
    ['Electronics', 'Clothing', 'Home', 'Books', 'Toys'][((random() * 5)::int + 1)] AS category,
    ['Completed', 'Pending', 'Cancelled'][((random() * 3)::int + 1)] AS order_status,
    ['US', 'UK', 'CA', 'AU', 'DE'][((random() * 5)::int + 1)] AS shipping_country,
    (random() * 500 + 10)::decimal(10,2) AS order_total,
    (random() * 10 + 1)::int AS items_count,
    ['Credit Card', 'PayPal', 'Gift Card'][((random() * 3)::int + 1)] AS payment_method,
    ['New', 'Returning'][((random() * 2)::int + 1)] AS customer_type,
    (random() * 50 + 1)::int AS discount_percent,
    (random() < 0.5) AS express_shipping,
    ['Standard', 'Premium', 'Economy'][((random() * 3)::int + 1)] AS shipping_method,
    (random() * 10)::int AS days_to_ship,
    (random() * 100)::int AS customer_rating,
    (random() * 1000)::decimal(10,2) AS revenue,
    (random() * 100)::int AS new_customers,
    (random() * 300)::int AS repeat_customers,
    (random() * 50)::int AS coupon_used,
    (random() * 20)::int AS gift_wrapped,
    (random() < 0.5) AS first_time_buyer,
    (random() * 100)::int AS loyalty_points_earned,
    (random() * 5)::int AS refund_requested
FROM generate_series(1, 7000)