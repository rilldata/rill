-- Removed interval datatype(INTERVAL_MONTH_DAY_NANO) as is not supported by arrow to parquet code. https://github.com/rilldata/arrow/blob/v15.0.2/go/parquet/pqarrow/schema.go#L406
-- Removed range datatype from struct because range inside struct is not supported https://github.com/googleapis/google-cloud-go/blob/main/bigquery/value.go#L899
CREATE OR REPLACE TABLE  `rilldata.integration_test.all_datatypes` (
    int_col INT64,
    float_col FLOAT64,
    numeric_col NUMERIC,
    bignumeric_col BIGNUMERIC,
    bool_col BOOL,
    string_col STRING,
    bytes_col BYTES,
    date_col DATE,
    datetime_col DATETIME,
    time_col TIME,
    timestamp_col TIMESTAMP,
    json_col JSON,
    geography_col GEOGRAPHY,
    range_date_col RANGE<DATE>,
    range_datetime_col RANGE<DATETIME>,
    range_timestamp_col RANGE<TIMESTAMP>,
    array_int_col ARRAY<INT64>,
    array_float_col ARRAY<FLOAT64>,
    array_numeric_col ARRAY<NUMERIC>,
    array_bignumeric_col ARRAY<BIGNUMERIC>,
    array_bool_col ARRAY<BOOL>,
    array_string_col ARRAY<STRING>,
    array_bytes_col ARRAY<BYTES>,
    array_date_col ARRAY<DATE>,
    array_datetime_col ARRAY<DATETIME>,
    array_time_col ARRAY<TIME>,
    array_timestamp_col ARRAY<TIMESTAMP>,
    array_json_col ARRAY<JSON>,
    array_geography_col ARRAY<GEOGRAPHY>,
    array_range_date_col ARRAY<RANGE<DATE>>,
    array_range_datetime_col ARRAY<RANGE<DATETIME>>,
    array_range_timestamp_col ARRAY<RANGE<TIMESTAMP>>,
    array_struct_col ARRAY<STRUCT<
        field_int INT64,
        field_float FLOAT64,
        field_numeric NUMERIC,
        field_bignumeric BIGNUMERIC,
        field_bool BOOL,
        field_string STRING,
        field_bytes BYTES,
        field_date DATE,
        field_datetime DATETIME,
        field_time TIME,
        field_timestamp TIMESTAMP,
        field_json JSON,
        field_geography GEOGRAPHY
    >>,
    struct_col STRUCT<
        field_int INT64,
        field_float FLOAT64,
        field_numeric NUMERIC,
        field_bignumeric BIGNUMERIC,
        field_bool BOOL,
        field_string STRING,
        field_bytes BYTES,
        field_date DATE,
        field_datetime DATETIME,
        field_time TIME,
        field_timestamp TIMESTAMP,
        field_json JSON,
        field_geography GEOGRAPHY,
        field_array_int ARRAY<INT64>,
        field_array_float ARRAY<FLOAT64>,
        field_array_numeric ARRAY<NUMERIC>,
        field_array_bignumeric ARRAY<BIGNUMERIC>,
        field_array_bool ARRAY<BOOL>,
        field_array_string ARRAY<STRING>,
        field_array_bytes ARRAY<BYTES>,
        field_array_date ARRAY<DATE>,
        field_array_datetime ARRAY<DATETIME>,
        field_array_time ARRAY<TIME>,
        field_array_timestamp ARRAY<TIMESTAMP>,
        field_array_json ARRAY<JSON>,
        field_array_geography ARRAY<GEOGRAPHY>
    >
);


INSERT INTO `rilldata.integration_test.all_datatypes` VALUES
    (1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2), Range(DATE(2023,1,1),DATE(2023,2,1)), Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56)), Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC")), [1], [1.1], [Cast(123.45 as NUMERIC)], [Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC)], [TRUE], ['sample1'], [b'abc'], [DATE(2023,1,1)], [DATETIME(2023,1,1,12,34,56)], [TIME(12,34,56)], [TIMESTAMP("2023-01-01 12:34:56 UTC")], [PARSE_JSON('{"key": "value1"}')], [ST_GEOGPOINT(1, 2)], [Range(DATE(2023,1,1),DATE(2023,2,1))], [Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56))], [Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC"))], [(1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2))],(1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2), [1], [1.1], [Cast(123.45 as NUMERIC)], [Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC)], [TRUE], ['sample1'], [b'abc'], [DATE(2023,1,1)], [DATETIME(2023,1,1,12,34,56)], [TIME(12,34,56)], [TIMESTAMP("2023-01-01 12:34:56 UTC")], [PARSE_JSON('{"key": "value1"}')], [ST_GEOGPOINT(1, 2)] )),
    (0, 0.0, Cast(0.0 as NUMERIC), Cast(0.0 as BIGNUMERIC), FALSE, '', b'', DATE(1970,1,1), DATETIME(1970,1,1,00,00,00), TIME(00,00,00), TIMESTAMP("1970-01-01 00:00:00 UTC"), PARSE_JSON('{}'), ST_GEOGPOINT(0, 0), Range(DATE(1970,1,1),DATE(1970,1,2)), Range(DATETIME(1970,1,1,00,00,00),DATETIME(1970,1,1,00,00,01)), Range(TIMESTAMP("1970-01-01 00:00:00 UTC"),TIMESTAMP("1970-01-01 00:00:01 UTC")), [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [],(0, 0.0, Cast(0.0 as NUMERIC), Cast(0.0 as BIGNUMERIC), FALSE, '', b'', DATE(1970,1,1), DATETIME(1970,1,1,00,00,00), TIME(00,00,00), TIMESTAMP("1970-01-01 00:00:00 UTC"), PARSE_JSON('{}'), ST_GEOGPOINT(0, 0), [], [], [], [], [], [], [], [], [], [], [], [], [])),
    (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,NULL);



-- Below is for all datatype but some of them is not supported so not using it for now.
CREATE OR REPLACE TABLE  `rilldata.integration_test.all_datatypes` (
    int_col INT64,
    float_col FLOAT64,
    numeric_col NUMERIC,
    bignumeric_col BIGNUMERIC,
    bool_col BOOL,
    string_col STRING,
    bytes_col BYTES,
    date_col DATE,
    datetime_col DATETIME,
    time_col TIME,
    timestamp_col TIMESTAMP,
    json_col JSON,
    geography_col GEOGRAPHY,
    interval_col INTERVAL,
    range_date_col RANGE<DATE>,
    range_datetime_col RANGE<DATETIME>,
    range_timestamp_col RANGE<TIMESTAMP>,
    array_int_col ARRAY<INT64>,
    array_float_col ARRAY<FLOAT64>,
    array_numeric_col ARRAY<NUMERIC>,
    array_bignumeric_col ARRAY<BIGNUMERIC>,
    array_bool_col ARRAY<BOOL>,
    array_string_col ARRAY<STRING>,
    array_bytes_col ARRAY<BYTES>,
    array_date_col ARRAY<DATE>,
    array_datetime_col ARRAY<DATETIME>,
    array_time_col ARRAY<TIME>,
    array_timestamp_col ARRAY<TIMESTAMP>,
    array_json_col ARRAY<JSON>,
    array_geography_col ARRAY<GEOGRAPHY>,
    array_interval_col ARRAY<INTERVAL>,
    array_range_date_col ARRAY<RANGE<DATE>>,
    array_range_datetime_col ARRAY<RANGE<DATETIME>>,
    array_range_timestamp_col ARRAY<RANGE<TIMESTAMP>>,
    array_struct_col ARRAY<STRUCT<
        field_int INT64,
        field_float FLOAT64,
        field_numeric NUMERIC,
        field_bignumeric BIGNUMERIC,
        field_bool BOOL,
        field_string STRING,
        field_bytes BYTES,
        field_date DATE,
        field_datetime DATETIME,
        field_time TIME,
        field_timestamp TIMESTAMP,
        field_json JSON,
        field_geography GEOGRAPHY,
        field_interval INTERVAL,
        field_range_date RANGE<DATE>,
        field_range_datetime RANGE<DATETIME>,
        field_range_timestamp RANGE<TIMESTAMP>
    >>,
    struct_col STRUCT<
        field_int INT64,
        field_float FLOAT64,
        field_numeric NUMERIC,
        field_bignumeric BIGNUMERIC,
        field_bool BOOL,
        field_string STRING,
        field_bytes BYTES,
        field_date DATE,
        field_datetime DATETIME,
        field_time TIME,
        field_timestamp TIMESTAMP,
        field_json JSON,
        field_geography GEOGRAPHY,
        field_interval INTERVAL,
        field_range_date RANGE<DATE>,
        field_range_datetime RANGE<DATETIME>,
        field_range_timestamp RANGE<TIMESTAMP>,
        field_array_int ARRAY<INT64>,
        field_array_float ARRAY<FLOAT64>,
        field_array_numeric ARRAY<NUMERIC>,
        field_array_bignumeric ARRAY<BIGNUMERIC>,
        field_array_bool ARRAY<BOOL>,
        field_array_string ARRAY<STRING>,
        field_array_bytes ARRAY<BYTES>,
        field_array_date ARRAY<DATE>,
        field_array_datetime ARRAY<DATETIME>,
        field_array_time ARRAY<TIME>,
        field_array_timestamp ARRAY<TIMESTAMP>,
        field_array_json ARRAY<JSON>,
        field_array_geography ARRAY<GEOGRAPHY>,
        field_array_interval ARRAY<INTERVAL>,
        field_array_range_date ARRAY<RANGE<DATE>>,
        field_array_range_datetime ARRAY<RANGE<DATETIME>>,
        field_array_range_timestamp ARRAY<RANGE<TIMESTAMP>>
    >
);


INSERT INTO `rilldata.integration_test.all_datatypes` VALUES
    (1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2), INTERVAL 1 DAY, Range(DATE(2023,1,1),DATE(2023,2,1)), Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56)), Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC")), [1], [1.1], [Cast(123.45 as NUMERIC)], [Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC)], [TRUE], ['sample1'], [b'abc'], [DATE(2023,1,1)], [DATETIME(2023,1,1,12,34,56)], [TIME(12,34,56)], [TIMESTAMP("2023-01-01 12:34:56 UTC")], [PARSE_JSON('{"key": "value1"}')], [ST_GEOGPOINT(1, 2)], [INTERVAL 1 DAY], [Range(DATE(2023,1,1),DATE(2023,2,1))], [Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56))], [Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC"))], [(1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2), INTERVAL 1 DAY, Range(DATE(2023,1,1),DATE(2023,2,1)), Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56)), Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC")))],(1, 1.1, Cast(123.45 as NUMERIC), Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC), TRUE, 'sample1', b'abc', DATE(2023,1,1), DATETIME(2023,1,1,12,34,56), TIME(12,34,56), TIMESTAMP("2023-01-01 12:34:56 UTC"), PARSE_JSON('{"key": "value1"}'), ST_GEOGPOINT(1, 2), INTERVAL 1 DAY, Range(DATE(2023,1,1),DATE(2023,2,1)), Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56)), Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC")), [1], [1.1], [Cast(123.45 as NUMERIC)], [Cast(99999999999999999999999999999999999999.99 as BIGNUMERIC)], [TRUE], ['sample1'], [b'abc'], [DATE(2023,1,1)], [DATETIME(2023,1,1,12,34,56)], [TIME(12,34,56)], [TIMESTAMP("2023-01-01 12:34:56 UTC")], [PARSE_JSON('{"key": "value1"}')], [ST_GEOGPOINT(1, 2)], [INTERVAL 1 DAY], [Range(DATE(2023,1,1),DATE(2023,2,1))], [Range(DATETIME(2023,1,1,12,34,56),DATETIME(2024,1,1,12,34,56))], [Range(TIMESTAMP("2023-01-01 12:34:56 UTC"),TIMESTAMP("2024-01-01 12:34:56 UTC"))])),
    (0, 0.0, Cast(0.0 as NUMERIC), Cast(0.0 as BIGNUMERIC), FALSE, '', b'', DATE(1970,1,1), DATETIME(1970,1,1,00,00,00), TIME(00,00,00), TIMESTAMP("1970-01-01 00:00:00 UTC"), PARSE_JSON('{}'), ST_GEOGPOINT(0, 0), INTERVAL 0 DAY, Range(DATE(1970,1,1),DATE(1970,1,2)), Range(DATETIME(1970,1,1,00,00,00),DATETIME(1970,1,1,00,00,01)), Range(TIMESTAMP("1970-01-01 00:00:00 UTC"),TIMESTAMP("1970-01-01 00:00:01 UTC")), [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [],(0, 0.0, Cast(0.0 as NUMERIC), Cast(0.0 as BIGNUMERIC), FALSE, '', b'', DATE(1970,1,1), DATETIME(1970,1,1,00,00,00), TIME(00,00,00), TIMESTAMP("1970-01-01 00:00:00 UTC"), PARSE_JSON('{}'), ST_GEOGPOINT(0, 0), INTERVAL 0 DAY, Range(DATE(1970,1,1),DATE(1970,1,2)), Range(DATETIME(1970,1,1,00,00,00),DATETIME(1970,1,1,00,00,01)), Range(TIMESTAMP("1970-01-01 00:00:00 UTC"),TIMESTAMP("1970-01-01 00:00:01 UTC")), [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [])),
    (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,NULL);

